<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>hexo-theme-indigo-card主题安装及常见问题解决</title>
      <link href="/p/c028.html"/>
      <url>/p/c028.html</url>
      
        <content type="html"><![CDATA[<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>安装需确认你的 Hexo 版本在 3.0 以上，以及 Node 版本为 6.x 以上，在 Hexo 根目录，执行以下命令。</p><pre><code>git clone git@github.com:yscoder/hexo-theme-indigo.git themes/indigo</code></pre><h2 id="切换主题"><a href="#切换主题" class="headerlink" title="切换主题"></a>切换主题</h2><p>执行 <code>git branch</code>显示所有本地分支，如果只存在一个分支，可以执行下面的命令获取另一分支的主题。</p><pre><code># 获取远程 card 分支，并切换$ git checkout -b card origin/card# 获取远程 master 分支，并切换$ git checkout -b master origin/master</code></pre><p>此命令只需执行一次，之后使用 <code>git checkout [branch]</code>命令在两个主题之间切换。</p><h2 id="依赖安装"><a href="#依赖安装" class="headerlink" title="依赖安装"></a>依赖安装</h2><p>还是在 Hexo 根目录，如果以下插件已安装过，无需再次安装。</p><h2 id="Less"><a href="#Less" class="headerlink" title="Less"></a>Less</h2><p>主题默认使用 less 作为 css 预处理工具。</p><pre><code>$ npm install hexo-renderer-less --save</code></pre><h2 id="Feed"><a href="#Feed" class="headerlink" title="Feed"></a>Feed</h2><p>用于生成 <code>rss</code>。</p><p><code>$ npm install hexo-generator-feed --save</code></p><h2 id="Json-content"><a href="#Json-content" class="headerlink" title="Json-content"></a>Json-content</h2><p>用于生成静态站点数据，用作站内搜索的数据源。</p><p><code>$ npm install hexo-generator-json-content --save</code></p><h2 id="QRCode"><a href="#QRCode" class="headerlink" title="QRCode"></a>QRCode</h2><p>用于生成微信分享二维码。</p><p>可选，不安装时会请求 <code>jiathis Api</code> 生成二维码。</p><p><code>$ npm install hexo-helper-qrcode --save</code></p><h2 id="开启标签页"><a href="#开启标签页" class="headerlink" title="开启标签页"></a>开启标签页</h2><p><code>hexo new page tags</code><br>修改 <code>hexo/source/tags/index.md</code>的元数据</p><pre><code>layout: tagscomments: false---</code></pre><h2 id="开启分类页"><a href="#开启分类页" class="headerlink" title="开启分类页"></a>开启分类页</h2><p>仅 <code>card theme</code> 支持。</p><p><code>hexo new page categories</code><br>修改 <code>hexo/source/categories/index.md</code> 的元数据</p><pre><code>layout: categoriescomments: false---</code></pre><h1 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h1><h2 id="如何设置文章摘要"><a href="#如何设置文章摘要" class="headerlink" title="如何设置文章摘要"></a>如何设置文章摘要</h2><p>在 <code>Markdown</code> 中加 <code>&lt;!-- more --&gt;</code></p><p>文章如何添加多个标签<br>有两种多标签格式</p><pre><code>tags: [a, b, c]</code></pre><p>或</p><pre><code>tags:   - a  - b  - c</code></pre><p>修改 <code>brand</code> 图片（菜单上方背景图）<br>替换 <code>themes\indigo\source\img\brand.jpg</code>，保持原文件名不变。</p><p>如何在文章中使用图标<br>先到 fontawesome 找到你需要的图标名，比如：book，按以下格式使用：</p><p><code>&lt;i class=&quot;icon icon-book&quot;&gt;&lt;/i&gt;</code></p><p>图标样式前缀均为 <code>icon</code>，此外还有 5 个图标大小调节类和 1 个间距类。</p><pre><code>&lt;!-- 1.3倍大小 --&gt;&lt;i class=&quot;icon icon-book icon-lg&quot;&gt;&lt;/i&gt;&lt;!-- 2倍大小 --&gt;&lt;i class=&quot;icon icon-book icon-2x&quot;&gt;&lt;/i&gt;&lt;!-- 3倍大小 --&gt;&lt;i class=&quot;icon icon-book icon-3x&quot;&gt;&lt;/i&gt;&lt;!-- 4倍大小 --&gt;&lt;i class=&quot;icon icon-book icon-4x&quot;&gt;&lt;/i&gt;&lt;!-- 5倍大小 --&gt;&lt;i class=&quot;icon icon-book icon-5x&quot;&gt;&lt;/i&gt;&lt;!-- 5px右边距 --&gt;&lt;i class=&quot;icon icon-book icon-pr&quot;&gt;&lt;/i&gt;&lt;!-- 5px左边距 --&gt;&lt;i class=&quot;icon icon-book icon-pl&quot;&gt;&lt;/i&gt;</code></pre><h2 id="个别图标无法显示"><a href="#个别图标无法显示" class="headerlink" title="个别图标无法显示"></a>个别图标无法显示</h2><p>如果你的浏览器安装了 ADBlock，它会屏蔽 SNS 相关的内容，比如：Github。</p><p>解决办法：可配置 ADBlock 不在你的站点运行。</p><h2 id="生成站点后没有样式"><a href="#生成站点后没有样式" class="headerlink" title="生成站点后没有样式"></a>生成站点后没有样式</h2><p>安装less</p><h2 id="更改样式后网站没有生效"><a href="#更改样式后网站没有生效" class="headerlink" title="更改样式后网站没有生效"></a>更改样式后网站没有生效</h2><p>确认非缓存问题后，执行 <code>hexo clean</code> 再进行生成上传。</p><p>##更改站点配色<br>编辑 <code>themes\indigo\source\css\_partial\variable.less</code>，更改对应的颜色变量。</p><p><code>配色参考：Material Design Color Palette Generator</code></p><h2 id="添加404页面"><a href="#添加404页面" class="headerlink" title="添加404页面"></a>添加404页面</h2><p>在 <code>hexo/source</code> 目录内新建 <code>404.html</code>。</p><p>设置元数据信息，如果不想套用主题布局可设置 layout 为 false。</p><pre><code>layout: false    title: &quot;My Blog Name | 404&quot;---</code></pre><h2 id="在博客中使用-Emoji"><a href="#在博客中使用-Emoji" class="headerlink" title="在博客中使用 Emoji"></a>在博客中使用 Emoji</h2><p>参考 <a href="https://github.com/yscoder/hexo-theme-indigo/issues/90" target="_blank" rel="noopener">Can i use emoji in mypage?</a></p><h2 id="多说"><a href="#多说" class="headerlink" title="多说"></a>多说</h2><p>多说配置，取你的多说后台网址二级域名。比如我的是：<code>http://blog.badenough.com/</code>中的 <code>blog</code>。<br>评论中如果显示 HTML 标签，你需要 <em>进入多说设置</em> -&gt; 评论解析 -&gt; 解析HTML代码 勾选上。<br>已本地化多说脚本和样式，有个人需求的可以自行修改相关样式 <code>source/css/_duoshuo/*</code> 和脚本 <code>source/css/js/embed.js</code>。</p><h1 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h1><h2 id="站点配置"><a href="#站点配置" class="headerlink" title="站点配置"></a>站点配置</h2><p>编辑站点配置文件，<code>hexo/_config.yml</code>。</p><h2 id="启用主题"><a href="#启用主题" class="headerlink" title="启用主题"></a>启用主题</h2><p><code>theme: indigo</code></p><h2 id="基本配置"><a href="#基本配置" class="headerlink" title="基本配置"></a>基本配置</h2><p>为了得到更好的使用体验，以下内容请务必填写完整，因为这些内容会在主题中得到展示。更多</p><pre><code>title: your titlesubtitle: your subtitledescription: your descriptionkeywords: your keywordsauthor: your nameemail: your emailurl: your site url</code></pre><h2 id="feed配置"><a href="#feed配置" class="headerlink" title="feed配置"></a>feed配置</h2><p>参考 <a href="https://github.com/alexbruno/hexo-generator-json-content" target="_blank" rel="noopener">hexo-generator-feed</a></p><pre><code>feed:  type: atom  path: atom.xml  limit: 0</code></pre><h2 id="jsonContent配置"><a href="#jsonContent配置" class="headerlink" title="jsonContent配置"></a>jsonContent配置</h2><p>为了节约资源，可以对 <code>jsonContent</code>插件生成的数据字段进行配置，减少数据文件大小。参考 <code>hexo-generator-json-content</code></p><pre><code>jsonContent:  meta: false  pages: false  posts:    title: true    date: true    path: true    text: true    raw: false    content: false    slug: false    updated: false    comments: false    link: false    permalink: false    excerpt: false    categories: false    tags: true</code></pre><h2 id="主题配置"><a href="#主题配置" class="headerlink" title="主题配置"></a>主题配置</h2><p>编辑主题配置文件，<code>themes/indigo/_config.yml</code>。</p><h2 id="左侧菜单"><a href="#左侧菜单" class="headerlink" title="左侧菜单"></a>左侧菜单</h2><p>默认配置如下</p><pre><code>menu:  home:    text: 主页    url: /  archives:    url: /archives  tags:    url: /tags  github:    url: https://github.com/yscoder    target: _blank  weibo:    url: http://www.weibo.com/ysweb    target: _blank  link:    text: 测试    url: /</code></pre><p>添加新菜单项时，在 menu 下增加子属性即可。属性说明如下：</p><pre><code>menu: link:               # fontawesome图标，省略前缀，本主题前缀为 icon-，必须   text: About       # 菜单显示的文字，如果省略即默认与图标一致，首字母会转大写   url: /about       # 链接，绝对或相对路径，必须   target: _blank    # 是否跳出，省略则在当前页面打开</code></pre><p>fontawesome 图标已集成到主题中，你可以到 这个页面 挑选合适的图标。</p><h2 id="rss"><a href="#rss" class="headerlink" title="rss"></a>rss</h2><p><code>rss: /atom.xml</code></p><h2 id="favicon"><a href="#favicon" class="headerlink" title="favicon"></a>favicon</h2><p>站点 logo，显示在浏览器当前标签页左上角。</p><p><code>favicon: /favicon.ico</code></p><p>##头像<br>位于左侧菜单上方</p><p><code>avatar: /img/logo.jpg</code></p><h2 id="email"><a href="#email" class="headerlink" title="email"></a>email</h2><p>头像下方</p><p><code>email: 786127334@qq.com</code></p><h2 id="color"><a href="#color" class="headerlink" title="color"></a>color</h2><p>设置 <code>Android L Chrome</code> 浏览器状态栏颜色，不需要可去除此项或设为 <code>false</code>。</p><p><code>color: &#39;#3F51B5&#39;</code></p><h2 id="标签页-old"><a href="#标签页-old" class="headerlink" title="标签页 (old)"></a>标签页 (old)</h2><p>配置标签页标题</p><pre><code>tags:  title: 标签</code></pre><h2 id="页面标题-card-theme"><a href="#页面标题-card-theme" class="headerlink" title="页面标题 (card theme)"></a>页面标题 (card theme)</h2><p>自定义归档、标签、分类页的大标题。</p><pre><code>tags_title: Tagsarchives_title: Archivescategories_title: Categories</code></pre><h2 id="文章摘要"><a href="#文章摘要" class="headerlink" title="文章摘要"></a>文章摘要</h2><p>可以在 Markdown 文件中加 <code>&lt;!--more--&gt;</code>以分割摘要与文章正文。未设置时，按 <code>excerpt_length</code>设置截取。</p><pre><code># 文章摘要渲染方式: 为 true 时将渲染为 html，否则为文本excerpt_render: false# 截断长度excerpt_length: 200# 文字正文页链接文字excerpt_link: 阅读全文...</code></pre><h2 id="mathjax"><a href="#mathjax" class="headerlink" title="mathjax"></a>mathjax</h2><p>开启后，使你的站点支持公式渲染，<code>by mathjax</code>。 请按需开启，因为此项需要加载额外的 <code>js</code> 文件。</p><p><code>mathjax: false</code></p><h2 id="分享"><a href="#分享" class="headerlink" title="分享"></a>分享</h2><p>文章分享开关，<code>by jiathis-api</code>。</p><p><code>share: true</code></p><h2 id="文章打赏"><a href="#文章打赏" class="headerlink" title="文章打赏"></a>文章打赏</h2><h3 id="默认开启"><a href="#默认开启" class="headerlink" title="默认开启"></a>默认开启</h3><pre><code>reward:  title: 谢谢大爷~             #显示的文字  wechat: /img/wechat.jpg     #微信，关闭设为 false  alipay: /img/alipay.jpg     #支付宝，关闭设为 false</code></pre><p>此外在 <code>crad theme</code> 中，可以通过在 <code>markdown</code> 头部添加 <code>reward: false</code>来控制某些不想开启打赏的页面。</p><h3 id="关闭"><a href="#关闭" class="headerlink" title="关闭"></a>关闭</h3><p><code>reward: false</code><br>二维码请自行从微信、支付宝中下载。当两个二维码同时存在时，为保持显示效果的一致性，注意截图时的边框留白保持一致。必要时可借助PS等图片处理工具进行图片大小裁剪、压缩等。</p><h2 id="站内搜索"><a href="#站内搜索" class="headerlink" title="站内搜索"></a>站内搜索</h2><p>是否开启搜索</p><p><code>search: true</code></p><h2 id="布局"><a href="#布局" class="headerlink" title="布局"></a>布局</h2><p>开启后，文章页在大屏下会隐藏左侧菜单，专注阅读。</p><pre><code>hideMenu: true</code></pre><h2 id="Toc"><a href="#Toc" class="headerlink" title="Toc"></a>Toc</h2><p>开启文章内容导航。</p><pre><code>#toc: false  #关闭toc:  list_number: false  # 决定导航使用的标签， true 为 ol， false 为 ul。copyright (card theme)</code></pre><p>文章页版权声明内容，hexo中所有变量及辅助函数等均可调用，具体请查阅 <code>hexo.io</code>。</p><pre><code>copyright: 这里写留言或版权声明：&lt;a href=&quot;&lt;%- url_for(page.path) %&gt;&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;%- url %&gt;&lt;/a&gt;</code></pre><h2 id="less"><a href="#less" class="headerlink" title="less"></a>less</h2><p>设置 <code>less</code> 编译时的入口文件路径，<code>hexo-renderer-less</code>。</p><pre><code>less:  compress: true    # 是否压缩css  paths:    - source/css/style.less</code></pre><h2 id="评论"><a href="#评论" class="headerlink" title="评论"></a>评论</h2><p>集成了多说和 <code>disqus</code>，开启其一即可。</p><p><code>duoshuo-key</code> 即多说创建站点时的二级域名。如：abc.duoshuo.com，就填 abc。</p><p><code>duoshuo: duoshuo-key</code><br>或</p><p><code>disqus_shortname: disqus_shortname</code></p><h2 id="数据统计"><a href="#数据统计" class="headerlink" title="数据统计"></a>数据统计</h2><p>集成的有谷歌和 CNZZ，请填写你的站点标识。</p><pre><code>google_analytics: keycnzz: 站点id谷歌站点验证 (card theme)google_site_verification: false</code></pre><h2 id="规范网址-card-theme"><a href="#规范网址-card-theme" class="headerlink" title="规范网址 (card theme)"></a>规范网址 (card theme)</h2><p>让搜索引擎重定向你的不同域名、不同子域、同域不同目录的站点到你期望的路径。使用规范网址</p><pre><code>canonical: http://imys.net</code></pre><h2 id="版权起始年份"><a href="#版权起始年份" class="headerlink" title="版权起始年份"></a>版权起始年份</h2><p><code>since_year: 2006</code></p><h2 id="自定义页面关于"><a href="#自定义页面关于" class="headerlink" title="自定义页面关于"></a>自定义页面关于</h2><p>用户页面中作者相关的描述性文字，如不需要设为 <code>false</code></p><p><code>about: 用户页面中作者相关的描述性文字，如不需要设为 false</code></p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo博客 </tag>
            
            <tag> indigo主题 </tag>
            
            <tag> 部署 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于Hexo-Theme-Matery主题的一些个性化修改</title>
      <link href="/p/b38d.html"/>
      <url>/p/b38d.html</url>
      
        <content type="html"><![CDATA[<p>最近利用Hexo搭建博客，网上的大量文献都是关于Next主题的配置与自定义修改的，却鲜有人写关于好看的hexo-theme-matery的。hexo-theme-matery这么好看的主题居然没被很多人发现…</p><p>在这里记录一下自己对<code>hexo-theme-matery</code>的更多自定义修改：（感谢作者运用规范的代码写出如此优秀的主题。**）</p><p>能在主题文件<code>/themes/hexo-theme-matery/_config.yml</code>中修改的配置，我就不多说了。</p><p>修改摘要(<code>summary</code>)在“前一篇/后一篇”卡片中”失效”的问题<br><code>matery</code>的文章目录是卡片式的。<br>在首页，若文章有摘要，则会显示摘要(summary)，若没有才会显示文章的前70个字。<br>但是在打开其中一篇文章时，最底部的“前一篇”和“后一篇”文章的卡片上却直接显示文章的前120个字，不论前/后一篇文章有没有摘要。我做出如下更改，使得在“前一篇”和“后一篇”文章的卡片上也同样显示摘要。<br>对<code>/themes/hexo-theme-matery/layout/_partial/prev-next.ejs</code>文件作如下更改：</p><p>第41行左右，<code>&lt;div class=&quot;summary&quot;&gt;...&lt;/div&gt;</code>的那行改成以下几行：</p><pre><code>  &lt;div class=&quot;summary&quot;&gt;      &lt;% if (page.prev.summary &amp;&amp; page.prev.summary.length &gt; 0) { %&gt;          &lt;%- page.prev.summary %&gt;      &lt;% } else { %&gt;          &lt;%- strip_html(page.prev.content).substring(0, 70) %&gt;      &lt;% } %&gt;  &lt;/div&gt;</code></pre><p>第104行左右，<code>&lt;div class=&quot;summary&quot;&gt;...&lt;/div&gt;</code>的那行改成以下几行：</p><pre><code>  &lt;div class=&quot;summary&quot;&gt;      &lt;% if (page.summary &amp;&amp; page.summary.length &gt; 0) { %&gt;          &lt;%- page.summary %&gt;      &lt;% } else { %&gt;          &lt;%- strip_html(page.content).substring(0, 70) %&gt;      &lt;% } %&gt;  &lt;/div&gt;</code></pre><p>第168行左右，<code>&lt;div class=&quot;summary&quot;&gt;...&lt;/div&gt;</code>的那行改成以下几行：</p><pre><code>  &lt;div class=&quot;summary&quot;&gt;      &lt;% if (page.next.summary &amp;&amp; page.next.summary.length &gt; 0) { %&gt;          &lt;%- page.next.summary %&gt;      &lt;% } else { %&gt;          &lt;%- strip_html(page.next.content).substring(0, 70) %&gt;      &lt;% } %&gt;</code></pre><p>增加在文章页显示作者名的功能<br>原来只会在文章卡片上显示作者名（并且是在没有分类的情况下），在文章内容页没有显示作者名。作如下修改使得在文章页显示：<br>在<code>post-detail.ejs</code>第37行左右，增加下列代码：</p><pre><code>&lt;div class=&quot;text-color&quot; align=center style=&quot;font-size:large&quot;&gt;    &lt;% if (page.author &amp;&amp; page.author.length &gt; 0) { %&gt;        &lt;i class=&quot;far fa-square&quot;&gt;&lt;/i&gt; &lt;%- page.author %&gt;    &lt;% } else { %&gt;        &lt;i class=&quot;far fa-square&quot;&gt;&lt;/i&gt; &lt;%- config.author %&gt;    &lt;% } %&gt;&lt;/div&gt;</code></pre><p>修改配色<br>原来的主题虽然很好看，但是没有一个统一的主题色。可在<code>/themes/hexo-theme-matery/source/css/matery.css</code>中修改标题栏、菜单栏、各种标签背景的颜色，使主题颜色为<code>Material</code>的粉红色。感谢<code>Material Design Colours</code>提供的配色方案。</p><p>修改<code>head.ejs</code>和<code>footer.ejs</code>，增加百度统计和<code>Google Adsense</code>。<br>修改首页<code>subtitle</code>，使之显示动态诗词<br><code>Hexo</code> 和<code>matery</code>主题的<code>subtitle</code>只支持纯文本，目前网上还没有关于动态<code>subtitle</code>的解决方案。作为只接触js基础的我来说，实在难搞。好在网上有关于<code>ejs</code>常用标签的文章，使得几经尝试终于把ejs修改正确。<br>Mark一下<code>Solution</code>：</p><p>我们采用今日诗词的每日一句；</p><pre><code>/themes/hexo-theme-matery/layout/_partial/bg-cover.ejs line 16 or 17：把&lt;%# config.description %&gt;改为&lt;%- &#39;&lt;span id=&quot;jinrishici-sentence&quot;&gt;正在加载今日诗词....&lt;/span&gt;&#39; %&gt;同时在/themes/hexo-theme-matery/layout/_partial/head.ejs增加代码&lt;script src=&quot;https://sdk.jinrishici.com/v2/browser/jinrishici.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;</code></pre><p>如果要弃用动态诗词，直接改回原文件即可。</p><p>修改公告(dream一栏)里的每日一句<br>首页dream公告栏是matery主题的特色，但同样只支持纯文本。我用同样的方法修改，使之显示“一言”的每日一句-小说类型。<br>Mark一下Solution：</p><pre><code>/themes/hexo-theme-matery/layout/index.ejx line 16改为 &lt;i class=&quot;fa fa-volume-up fa-lg fa-fw text-color&quot;&gt;&lt;/i&gt; &lt;%- &#39;&lt;span id=&quot;hitokoto&quot;&gt;一言API请求超时。请稍后重试。&lt;/span&gt; （来源：一言API）&#39; %&gt;</code></pre><p>同时在<code>/themes/hexo-theme-matery/layout/_partial/head.ejs</code>增加代码：</p><pre><code>&lt;script src=&quot;https://v1.hitokoto.cn/?c=d&amp;encode=js&amp;select=%23hitokoto&quot; defer&gt;&lt;/script&gt;</code></pre><p>如果要弃用动态诗词，直接改回原文件即可。</p><p>以上只是一些小改动。还有更多的自定义（如设置标签页的标签顺序等）要做。</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> matery主题 </tag>
            
            <tag> 博客优化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>部署Hexo踩过的坑——node14.0配置hexo</title>
      <link href="/p/3564.html"/>
      <url>/p/3564.html</url>
      
        <content type="html"><![CDATA[<h1 id="当我在hexo-g的时候"><a href="#当我在hexo-g的时候" class="headerlink" title="当我在hexo g的时候"></a>当我在hexo g的时候</h1><pre><code class="bash">(node:7448) Warning: Accessing non-existent property &#39;lineno&#39; of module exports inside circular dependency(Use `node --trace-warnings ...` to show where the warning was created)(node:7448) Warning: Accessing non-existent property &#39;column&#39; of module exports inside circular dependency(node:7448) Warning: Accessing non-existent property &#39;filename&#39; of module exports inside circular dependency(node:7448) Warning: Accessing non-existent property &#39;lineno&#39; of module exports inside circular dependency(node:7448) Warning: Accessing non-existent property &#39;column&#39; of module exports inside circular dependency(node:7448) Warning: Accessing non-existent property &#39;filename&#39; of module exports inside circular dependencyINFO  Start processingINFO  0 books have been loaded in 1474 ms, because you are offline or your network is badINFO  0 movies have been loaded in 1623 ms, because you are offline or your network is bad</code></pre><h1 id="当我在hexo-clean时"><a href="#当我在hexo-clean时" class="headerlink" title="当我在hexo clean时"></a>当我在hexo clean时</h1><pre><code class="bash">(node:8956) Warning: Accessing non-existent property &#39;lineno&#39; of module exports inside circular dependency(Use `node --trace-warnings ...` to show where the warning was created)(node:8956) Warning: Accessing non-existent property &#39;column&#39; of module exports inside circular dependency(node:8956) Warning: Accessing non-existent property &#39;filename&#39; of module exports inside circular dependency(node:8956) Warning: Accessing non-existent property &#39;lineno&#39; of module exports inside circular dependency(node:8956) Warning: Accessing non-existent property &#39;column&#39; of module exports inside circular dependency(node:8956) Warning: Accessing non-existent property &#39;filename&#39; of module exports inside circular dependencyINFO  Deleted database.INFO  Deleted public folder.</code></pre><h1 id="解决方法："><a href="#解决方法：" class="headerlink" title="解决方法："></a>解决方法：</h1><p>出现这些问题的原因就是node版本太高，切换成低版本的node来安装Hexo就可以了。</p><p>我原先是安装了最新版node14.1.2，后来多装了一个比较稳定的node12.14版本，这个问题就解决了！</p><p>这个问题就这样解决了。</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo主题 </tag>
            
            <tag> node坑 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo-matery主题优化</title>
      <link href="/p/fdc3.html"/>
      <url>/p/fdc3.html</url>
      
        <content type="html"><![CDATA[<h2 id="hexo搜索"><a href="#hexo搜索" class="headerlink" title="hexo搜索"></a>hexo搜索</h2><p>如果你已经做了这个搜索可以跳过，没有就一起干！过程非常可乐，呃，是非常简单！前提是使用的是hexo主题，配置了相应的环境。主题最开始弄下来是没有搜索插件的，需要下载，接下来你懂的，用npm包管理工具下载插件(如果不会用，可以搜索相应的文章看看，有需要会专门讲一下npm是何物，不会有同学还没安装好npm吧？不会吧！不会吧！)。进入到当前博客根目录下，在命令行里：</p><pre><code>npm i hexo-generator-search -s</code></pre><p>就这样下好了！同时需要再当前根目录配置文件中添加配置：</p><pre><code>#searchsearch:  path: search.xml  field: post </code></pre><h2 id="hexo代码高亮"><a href="#hexo代码高亮" class="headerlink" title="hexo代码高亮"></a>hexo代码高亮</h2><p>还是不要用主题里的高亮了，enable就false掉，还是同样的“骚操作”，下一个代码高亮的插件，这里用hexo-prism-matery,相同的手法下载下来后，在根目录下的配置文件里添加：</p><pre><code>prism_plugin:  mode: &#39;preprocess&#39;  # preprocess/realtime  theme: &#39;tomorrow&#39;  line_number: true #default false  custom_css: #</code></pre><h2 id="消除文章toc目录的那一竖杠杠"><a href="#消除文章toc目录的那一竖杠杠" class="headerlink" title="消除文章toc目录的那一竖杠杠"></a>消除文章toc目录的那一竖杠杠</h2><p>如果你发现文章的toc目录有一条竖杠，不好看，那么就去掉。之前toc目录一直是这样的，我也不想要了。做博客开始的时候发现了，没太在意，终究是影响了美观。现在就要把目录弄得正常点。来到主题目录下，找到source目录，找到lib目录，里面也是一些css和js文件。其中找到tocbot文件夹，打开它的css文件，找到toc-link::before</p><pre><code>.toc-link::before{    background-color:#EEE;content:&#39; &#39;;    display:inline-block;height:inherit;/*left:0;*/    margin-top:-1px;    position:absolute;    width:0px;   /*之前是2px*/}</code></pre><p>里面可能很乱，就一两行代码，找到后将width值改成0就行了。另外解析的文章目录不完整可能是标题有些不支持：</p><pre><code># 是否激活文章 TOC 功能，并配置TOC支持选中哪些标题类型，这是全局配置。# 可以在某篇文章的 Front-matter 中再加上`toc: false`，使该篇文章关闭TOC目录功能toc:  enable: true  heading: h2, h3, h4, h5, h6  #选中除h1以外的标题，之前没有h6  collapseDepth: 0 # 目录默认展开层级  showToggleBtn: true # 是否显示切换TOC目录展开收缩的按钮</code></pre><h2 id="去掉友链下那不必要的一栏空白"><a href="#去掉友链下那不必要的一栏空白" class="headerlink" title="去掉友链下那不必要的一栏空白"></a>去掉友链下那不必要的一栏空白</h2><p>这个也简单，不必过于头疼！因为我已经改好了，直接卖就是了，白给不要钱！</p><pre><code>&lt;div class=&quot;card&quot;&gt;   &lt;!--&lt;div class=&quot;card-content&quot;&gt;        &lt;%- page.content %&gt;       &lt;/div&gt;--&gt; &lt;/div&gt;</code></pre><p>友链下的那栏不必要的空白着实凸显了它的不必要性，所以我们要去掉它。直接把它的代码给注释掉，找到<code>layout</code>文件夹下的<code>friends.ejs</code>文件。<code>hexo</code>引擎渲染该文件生成html文件，变成了友链页面，其中友链的那一片作为一个模块卡片，valine留言板及空白一栏也是，空白的就是什么也没有，很容易发现，注释即可。</p><h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>以后还会继续更新站点，如果想看总体的效果就访问我的网站吧！最近的美化优化了很多，变化也很大！后续会持续跟大家讲博客美化。</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> matery主题 </tag>
            
            <tag> 博客优化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>回忆我与微博</title>
      <link href="/p/10130.html"/>
      <url>/p/10130.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>我是2017年左右加入微博并且第一次注册微博账号的，到现在2020年也有3年多了。</p></blockquote><a id="more"></a><p>现在我真的很不想看到微博的信息了（要不是还有一些大佬还在里面，会发一些第一资料，我都不想留着），主要是因为微博现在很乱，不是思想不对就是脑子不对，我也是服了，我真的不能说话了吗？我只是想抒发一下我自己的想法而已，你不想听也可以不看嘛！看要看的，看了还要喷，不知道什么。</p><h1 id="回忆我与微博"><a href="#回忆我与微博" class="headerlink" title="回忆我与微博"></a>回忆我与微博</h1><p>我第一次发微博是一次偶然，也是我第一次有了安卓手机开始的，因为我以前都是使用苹果手机的。</p><h2 id="2017年"><a href="#2017年" class="headerlink" title="2017年"></a>2017年</h2><h3 id="7月28日"><a href="#7月28日" class="headerlink" title="7月28日"></a>7月28日</h3><p>MIUI9转送门的诞生，这个使我第一次看到小米的MIUI系统，所以我很震惊，也感觉出了，我和小米有很多相似点，也许小米系统适合我这样的性格，有时候是这样，不是手机适合你，而是你适合手机。第一次直接去使用了【红米4X超长续航】这个手机也是我第一个手机，我给我妈买了当时最好的手机【小米5s plus】这个手机我花了2499元，那是我当时的所有积蓄了，因为当时我还在读高中，其实生活费也不多，两个星期就500元，吃的用的都在里面了。直到我开始读大学我才开始慢慢变得有钱，也可以去参加一些活动，只有有了物质基础才有可能去做一些有花销的事情，比如，大学里的社团活动和组织活动，万一需要花钱，我的资金还有机会支持我去外面玩吗？</p><h3 id="7月29日"><a href="#7月29日" class="headerlink" title="7月29日"></a>7月29日</h3><p>我对几张我自己拍摄的照片进行的评价，现在已经看不起照片是什么样子了，算了都不重要了，我现在都快大学毕业了，虽然毕业论文还没有写当时也在酝酿当中了。</p><h3 id="11月22日"><a href="#11月22日" class="headerlink" title="11月22日"></a>11月22日</h3><p>我在微博发了“还可以，但是就是太冷了”，地点在台州，而且手机已经换成了【小米6 拍人更美】，说明我已经换手了并且买到了小米6，这也是我进入小米这个坑的原因。小米6实在是太好用了，直到用到大学四年级，这才换掉他，他简直就是我使用时间最长的手机了，大学期间我换了好多手机，除了他。</p><p>同日我还发了几句“小米万岁”，看来我是真的成为米粉了。</p><h3 id="11月23日"><a href="#11月23日" class="headerlink" title="11月23日"></a>11月23日</h3><p>我在微博中转发了：“高通公布5G相关专利授权费率，首批5G手机预计2019年问世】日前移动芯片大厂高通（Qualcomm）发表有关5G专利授权条款细节。根据高通的手机5G基本专利授权计划，单模5G手机的专利使用费率为2.275%，多模（3G / 4G / 5G）手机专利许可费3.<a href="https://post.mp.qq.com/kan/article/2120786167-54561664.html?_wv=2147483777&amp;sig=8786a59f95fbb9446a75b22e8e0b25c9&amp;article_id=54561664&amp;time=1511355370&amp;_pflag=1&amp;x5PreFetch=1&amp;from=0&amp;web_ch_id=0&amp;s_id=d01fqe_whg1s可恶的高通。" target="_blank" rel="noopener">https://post.mp.qq.com/kan/article/2120786167-54561664.html?_wv=2147483777&amp;sig=8786a59f95fbb9446a75b22e8e0b25c9&amp;article_id=54561664&amp;time=1511355370&amp;_pflag=1&amp;x5PreFetch=1&amp;from=0&amp;web_ch_id=0&amp;s_id=d01fqe_whg1s可恶的高通。</a> ” [/cp]</p><p>还有一句：haphazard。当天我还去看了国家奖学金的颁奖仪式</p><h3 id="11月30日"><a href="#11月30日" class="headerlink" title="11月30日"></a>11月30日</h3><p>我居然转发了一个红米千元机的一个视频，我服了。我还有点不相信，我为什么这么疯狂，我可能那个时候已经被小米洗脑了吧！但是雷军是我的偶像是真的改不掉的，不是他的小米我可能现在都买不起小米</p><h3 id="12月6日"><a href="#12月6日" class="headerlink" title="12月6日"></a>12月6日</h3><p>[cp]#直播电台# 萌新：遇到唯一的你多不容易 哈尼霜天正在QQ音乐直播，快来参与 #直播电台# 萌新：遇到唯一的你多不容易 <a href="http://t.cn/RY1lRKZ" target="_blank" rel="noopener">http://t.cn/RY1lRKZ</a> ​​​[/cp]</p><h3 id="12月16日"><a href="#12月16日" class="headerlink" title="12月16日"></a>12月16日</h3><p>看了人民海军的全部军舰，我深深的感叹了一句：太棒了，想买！</p><h3 id="12月17日"><a href="#12月17日" class="headerlink" title="12月17日"></a>12月17日</h3><p>中国第一架自主研制的喷气式客机C919大飞机成功起飞。</p><h3 id="12月19日"><a href="#12月19日" class="headerlink" title="12月19日"></a>12月19日</h3><p>我发了几张图片，还是不错的。我的小米终于360天了。</p><h3 id="12月20日"><a href="#12月20日" class="headerlink" title="12月20日"></a>12月20日</h3><p>在大学上了历史课，还拍了照片分享在了微博中，这可能就是我第一次在大学上历史课了吧；还有物理课这里我找了图片，不知道能不能在这里显示了，但是我尽量吧！主要是我的图床不太稳定所以只能这样。算了下次我放到哪里吧！这里就不放置了。</p><p>这一天我还去了学习组织的外出参观机械专业的企业，那个企业又小又脏，还到处都是油，那个时候我就感觉我要转专业了，但是我到现在为止都还没有转专业，中途还去参加了数学建模比赛，这都不让我转专业，我真的感觉我太强了。到了现在要实习了才知道，真的不容易啊！机械专业的。微博中我也找到9张图片，应该是那个时候拍的。我下次也放到图片那里吧！</p><h2 id="2018年"><a href="#2018年" class="headerlink" title="2018年"></a>2018年</h2><h3 id="1月1日"><a href="#1月1日" class="headerlink" title="1月1日"></a>1月1日</h3><p>我对一篇文章：何止少儿不宜，连成年人看了都脊背发凉。’ <a href="https://zhuanlan.zhihu.com/p/31856033" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/31856033</a> ‘ 这个网址就是所有文章了。</p><h3 id="1月5日"><a href="#1月5日" class="headerlink" title="1月5日"></a>1月5日</h3><p>我发了有关英语的文章单词或者什么的，英语实在是有点难对我来说吧！</p><h3 id="1月6日"><a href="#1月6日" class="headerlink" title="1月6日"></a>1月6日</h3><p>小米note3到手了，哈哈哈哈！<br>这个手机是给我舅妈买的，不是给我自己买的，这个手机我感觉就是放大版的小米6，就是芯片变差了，但是拍照变好了。这可能就是手机开始变差的开始吧！</p><h3 id="1月22日"><a href="#1月22日" class="headerlink" title="1月22日"></a>1月22日</h3><p>我在微博发了：杭州下沙街区风格的图片<br>这是我第一次单独在外面生活，这也是我开始慢慢长大的象征。我以前非常胆小都不敢离开家独自一个人，但是那次我真的开始了。那是我试着学的一个补课机构，点对点教育，这个机构也锻炼了我。那年的杭州格外的寒冷，我对我妈说杭州是真的冷，我妈居然说要我可以回家了，但是我感觉还是蛮好的，我慢慢开始出去了，这一点我真的感谢我那几个同学：李翊杨，余潇，徐晟。这都是我的好兄弟了。不是余潇我可能都不会去玩B站，不是李翊杨我都不可能出去学习，我这个人就是这样有点软弱，还有滞后性。有时候我明明知道这个很好，以后大有作为但是我就是担心不敢去玩。可能是我的家境有关吧！<br>我还发了CAD快捷键的一些图片。</p><h3 id="3月30日"><a href="#3月30日" class="headerlink" title="3月30日"></a>3月30日</h3><p>MIUI9.5助力小米MIX2S，已经支持25款小米手机升级。<a href="https://web.vip.miui.com/page/info/mio/mio/detail?postld=4199757" target="_blank" rel="noopener">https://web.vip.miui.com/page/info/mio/mio/detail?postld=4199757</a> 网站链接。</p><h3 id="4月8日"><a href="#4月8日" class="headerlink" title="4月8日"></a>4月8日</h3><p>“天天英语”打卡；还参加了学生会组织的活动吧！发了几张照片，有趣。</p><h3 id="4月9日"><a href="#4月9日" class="headerlink" title="4月9日"></a>4月9日</h3><p>打了一波广告，珍珠项链的，也是帮我妈打的广告。与我无关。</p><h3 id="4月14日"><a href="#4月14日" class="headerlink" title="4月14日"></a>4月14日</h3><p>黑鲨手机转发</p><h3 id="4月25日"><a href="#4月25日" class="headerlink" title="4月25日"></a>4月25日</h3><p>咪咕阅读 《明朝那些事儿》</p><h3 id="6月1日"><a href="#6月1日" class="headerlink" title="6月1日"></a>6月1日</h3><p>小米8手机发布，小米年度旗舰手机。</p><h3 id="6月7日"><a href="#6月7日" class="headerlink" title="6月7日"></a>6月7日</h3><p>我在微博发了“为什么腾讯服务器，整天到晚出事情，为什么是不是垃圾！”</p><h3 id="6月8日"><a href="#6月8日" class="headerlink" title="6月8日"></a>6月8日</h3><p>发了“这么搞笑，还有喜欢贵州的青山绿水的，有这么表扬的吗？还不如你直接去啊！大家都离开城市去原始深林生活。你为什么不去啊！”</p><h3 id="6月10日"><a href="#6月10日" class="headerlink" title="6月10日"></a>6月10日</h3><p>中国现在的问题已经有点严重了。就像联想，联想现在的定位很有问题，为什么一个电脑公司回去做手机，你难道不觉得有点过吗？而且以目前来看你的电脑还不如美国的戴尔，惠普，我觉得联想不应该仅仅开发电脑，而是应该去开发电脑有关的配件，如CPU，显卡等，这些都是关键技术，是别人夺不走的。而现在你不就是拿别人的东西自己装一下吗？这样的你，我可以复制一百家。<br>我现在就想提一个问题:为什么中国的公司都那么不专一，中国不能找到一家想高通这样的芯片公司。<br>现在中国的东西全部都是美国的，没有美国，中国第一个死。</p><h3 id="6月19日"><a href="#6月19日" class="headerlink" title="6月19日"></a>6月19日</h3><p>世界杯真的太有劲了，但是还是有一些比较意外的，哈哈😄</p><h3 id="8月15日"><a href="#8月15日" class="headerlink" title="8月15日"></a>8月15日</h3><p>联想这个垃圾，不知道为什么，柳传志的理念是什么鬼，为什么会把这么强的企业搞成这样。</p><h2 id="2019年"><a href="#2019年" class="headerlink" title="2019年"></a>2019年</h2><h3 id="1月31日"><a href="#1月31日" class="headerlink" title="1月31日"></a>1月31日</h3><p>肯德基从来不骂麦当劳，麦当劳也从来不说肯德基，所以双双成为世界500强奔驰从来不诋毁宝马，宝马也不诋毁奔驰，也双双成为了名车我们并不需要去诋毁别人维护自己，人活着，发自己的光就好，不要吹灭别人的灯。别让自己的对手死去也是一种企业文化。 </p><h3 id="3月10日"><a href="#3月10日" class="headerlink" title="3月10日"></a>3月10日</h3><p>2019年3月10日0时28分长征火箭第300次发射成功。祝中国航天越来越强，祝祖国富强。               2019年也是五四运动100周年。<br>忆百年前的中国，山河破碎，<br>                                       人们奋强救国。<br>看百年后的中国，富强坚固，<br>                                       人们努力追梦。</p><h3 id="3月29日"><a href="#3月29日" class="headerlink" title="3月29日"></a>3月29日</h3><p>终于开始整治手机app的权限问题了。这个普通人不是很懂的东西终于开始被有关部门重视了。</p><h3 id="4月5日"><a href="#4月5日" class="headerlink" title="4月5日"></a>4月5日</h3><p>从言论到行动，美国是最讲政治的。中美贸易战，在美国大学里，有留学生因为长得象ABC，很高兴，因为美国同学老师觉得她不太象中国人，还敢和她正常交流，包括共享技术资料，否则美国人也不敢和她交流。</p><h3 id="4月16日"><a href="#4月16日" class="headerlink" title="4月16日"></a>4月16日</h3><p>为什么红米的耳机这么火。我怎么抢都抢不到。这不是逼我去买华为的吗？你们这样搞饥饿营销迟早会失去一大群所有的米粉的。虽然我家里都是小米生态链的产品，但是如果逼我，我也不防会考虑华为等的其他智能产品的。//@雷军:红米7，续航小霸王！！！</p><p>小米这样搞饥饿营销，大家这么想，我觉得小米就是在耍猴，如果小米你觉得，自己还没有这个能力，你可以直接说，小米不需要我们米粉。就说说手机，耳机等等产品。这不是逼我去买华为的吗？你们这样搞饥饿营销迟早会失去一大群所有的米粉的。虽然我家里都是小米生态链的产品，但是如果逼我，我也不防会考虑华为等的其他智能产品的。<br>小米你这样还不如死了。</p><h3 id="6月6日"><a href="#6月6日" class="headerlink" title="6月6日"></a>6月6日</h3><p>雷总，那我的小金刚Pro前两天买的，有没有补差价呢？你们小米商城为什么没有补差价这种，你们是不是故意的，怎么会有你们这种不良心的企业。</p><h3 id="6月10日-1"><a href="#6月10日-1" class="headerlink" title="6月10日"></a>6月10日</h3><p>终于联合国还是没有钱了，那就要开始中国新秩序了。<br>第一步，将联合国总部迁移到中国西部。<br>第二步，改革联合国，讲联合国正式改为，政治，经济的实体。即真正的联合国。<br>第三步，建立依靠联合国的实体国家，中华地球文明大联合国。先按照这个国国联合国家体质建立而成。<br>慢慢联合其他国家。 </p><h3 id="8月26日"><a href="#8月26日" class="headerlink" title="8月26日"></a>8月26日</h3><p>现在的手机厂商竞争的局势越来越明朗了。<br>小米，华为，步步高。<br>最终看来谁都没有大的优势，但是最终还是看各厂商的商业策略才行。</p><h3 id="8月28日"><a href="#8月28日" class="headerlink" title="8月28日"></a>8月28日</h3><p>雷总您好，我是追随小米很久的米粉，我对现在的小米感觉有点小乏力了。<br>小米从创办公司开始就一直打性价比，这个在前期手机市场大家都贵的时候是非常有利的。但是现在大家都在学着小米开始了性价比，那小米就要开始新的手机战略部署了。</p><p>小米把红米独立品牌打出，这个是正确的。但是现在小米却把小米自己的定位迷失了。小米不是说好了要探索黑科技的吗？小米是年轻人的企业，不能因为进入500强就开始沾沾自喜。小米应该更加砥砺自己，顽强不惜。<br>本该是小米的黑科技，现在却被vivo，OPPO夺去的，例如，OPPO的find系列，vivo的X系列。</p><p>就目前而言，黑科技是什么，不是性能的堆叠，不是看你跑分多少。而是看你设计的多巧妙，设计的多风骚。这才是现在的黑科技啊！</p><h3 id="10月1日"><a href="#10月1日" class="headerlink" title="10月1日"></a>10月1日</h3><p>每次都觉得我是一个孤独的人。看着全国人都在欢庆国庆节，但是我家却冷冷清清，平平淡淡。感觉家已不成家，人已不是人。</p><h3 id="10月17日"><a href="#10月17日" class="headerlink" title="10月17日"></a>10月17日</h3><p>祝不同意砸手机的家长，你们家的孩子天天玩手机，考试低分飘过，茶饭不思，不思进取，天天退步，最终成为祖国的蛀虫。呵呵</p><h3 id="10月20日"><a href="#10月20日" class="headerlink" title="10月20日"></a>10月20日</h3><p>为什么现在互联网改变了那么多。有什么大用吗？ ​​​​</p><h3 id="11月28日"><a href="#11月28日" class="headerlink" title="11月28日"></a>11月28日</h3><p>大家喷来喷去，都说着，国产这不好那不好，说到底，大家都是为了国家企业可以壮大一点。提出的毛病，企业要虚心接受，加以改正，使中国的产品，高端产品走出国门，走向世界，为我们的下一代更加有底气，更加有魄力。不负此生！</p><h3 id="12月10日"><a href="#12月10日" class="headerlink" title="12月10日"></a>12月10日</h3><p>抢占日本市场，让中国的好产品，好品牌全世界都知道。让我们的辉煌成就未来。中国万岁≧▽≦。为什么就中国的企业会这样搞来搞去，就不可以一起发展，一起进步吗？万恶的资本。</p><p>管你什么华为，高通，只要是信号好的，网速好的，才是真的好。搞这么多花里胡哨的有鸟用。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>我从2017年7月12日加入微博以来，微博一直都是我抒发情感的地方和写一些自己真实想法的地方，直到现在（2020年10月25日）我真的感觉微博的氛围太烂了不好了。以后只在B站出现，其他地方都不想发了。</p>]]></content>
      
      
      <categories>
          
          <category> 随笔录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 微博 </tag>
            
            <tag> 回忆 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>简单又实用的windows快捷键</title>
      <link href="/p/31957.html"/>
      <url>/p/31957.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>Windows快捷键,太忙了一直没有时间管理自己的网站，今天整理一些资料开始写写。</p></blockquote><a id="more"></a><p>今天我要给大家介绍一波非常实用的技巧，这个东西呢，可能不少差友都会觉得太基础，或者不适用。<br>但是回想当年我实习的时候，有一个妹子因为不会用快捷键被主管当场骂哭第二天就收拾书包回家这事。。。<br>瞬间觉得，Win 的快捷键使用虽然基础还是说说吧。<br>希望大家对这群妹子多一些关爱，多一些理解~<br>其实 Wins的快捷键有很多，甚至很多人还能自己把热键改成自己喜欢的。今天我也不会全都说完，毕竟我自己常用的也就这么几个。。。<br>其实除了提高工作或者学习效率外，偶尔工作偷懒的时候还能完美避开老板的偷袭~</p><h1 id="首先教大家一些，上班看视频、玩游戏必备的快捷操作。"><a href="#首先教大家一些，上班看视频、玩游戏必备的快捷操作。" class="headerlink" title="首先教大家一些，上班看视频、玩游戏必备的快捷操作。"></a>首先教大家一些，上班看视频、玩游戏必备的快捷操作。</h1><p>只要多加练习，熟练使用。上班看片指日可待！</p><h2 id="快速切回桌面"><a href="#快速切回桌面" class="headerlink" title="快速切回桌面"></a>快速切回桌面</h2><blockquote><p>win + D</p></blockquote><p>上班的时候难免会偷懒刷刷微博或者看视频，这时候如果老板 “ 不经意 ” 的从你身后路过。。。<br>来不及用鼠标关闭窗口怎么破？迅速按下 win + D 就能一秒切换回桌面上。</p><h2 id="新建桌面"><a href="#新建桌面" class="headerlink" title="新建桌面"></a>新建桌面</h2><blockquote><p>win + Tab</p></blockquote><p>好的，学会这招 win + D 快速切换回桌面了，接下来是一个晋级教程。每次我们切换回桌面时，总会在电脑桌上留下一些蛛丝马迹。<br>比如说 windows 下方的任务栏。。。</p><h2 id="那么有没有什么解决方法呢？"><a href="#那么有没有什么解决方法呢？" class="headerlink" title="那么有没有什么解决方法呢？"></a>那么有没有什么解决方法呢？</h2><p>我们只要在电脑上建一个新的桌面二就能轻松解决这个烦人问题了。只要按下 win + Tab 打开页面管理界面，接着新建一个桌面二。</p><p>然后只要把游戏拖进新创建的桌面二，最后我们只要按下 ctrl + windows +左键 就能迅速从桌面一切换到桌面二了。<br>从此看片不留痕，一键快过老司机！</p><h2 id="快捷锁屏"><a href="#快捷锁屏" class="headerlink" title="快捷锁屏"></a>快捷锁屏</h2><blockquote><p>win+ L</p></blockquote><p>最后一招不是用来防老板的，而是用来提防你粗心的同事们。<br>每次我们放着写了一半的文档离开电脑出去一趟，回来最怕看见的就是你写了一半的文档已经被粗心的同事关掉了！<br>这时候就体现了及时锁屏的重要性。<br>其实只要按下 win+ L 就能迅速完成锁屏。</p><p>接下来是帮助我们提高工作效率的快捷操作。只要多加练习，熟练使用。升职加薪指日可待~</p><h2 id="屏幕分页"><a href="#屏幕分页" class="headerlink" title="屏幕分页"></a>屏幕分页</h2><blockquote><p>windows+ 左键</p></blockquote><p>每次我们需要在一台电脑上同时打开两个网页时，总是需要非常麻烦的把网页拖出来，然后费劲的调整两个页面的比例大小！<br>但是只要知道这个快捷操作，一键就够了~<br>按下 windows+ 左键 就能迅速帮你把桌面等比例完成分屏。简直不能再方便了！</p><h2 id="复制无格式纯文本"><a href="#复制无格式纯文本" class="headerlink" title="复制无格式纯文本"></a>复制无格式纯文本</h2><blockquote><p>ctrl + shift + V</p></blockquote><p>需要复制黏贴一些文本信息的时候，我们都会习惯性的选择 ctrl + C 和 ctrl + V 这套组合操作。但是每次黏贴过来的文字都是带格式的！！<br>事实上只需要在复制的时候多加一个shift键就统统解决了 ctrl + shift + V 可以直接复制无格式文本信息，特别实用！</p><h2 id="恢复关闭的网页"><a href="#恢复关闭的网页" class="headerlink" title="恢复关闭的网页"></a>恢复关闭的网页</h2><blockquote><p>ctrl + shift +T</p></blockquote><p>每次我们打开浏览器查阅资料时总是免不了打开多个网页。<br>可是问题在于当我们找到自己想要的资料，关闭不需要的网页时总是会误删那个我们找了很久的页面前功尽弃！<br>今天就教大家一个快速恢复关闭网页的操作—— ctrl + shift +T</p><p>方便好用的快捷操作实在太多，就不一一列举了。都已经帮你们汇聚了一波。。。</p><h2 id="Ctrl-组合系列"><a href="#Ctrl-组合系列" class="headerlink" title="Ctrl 组合系列"></a>Ctrl 组合系列</h2><p>Ctrl + C 复制<br>Ctrl + X 剪切<br>Ctrl + V 粘贴<br>Ctrl + Z 撤消<br>Ctrl + F 寻找<br>Ctrl + S 保存<br>Ctrl + A 选中全部内容<br>Ctrl + Shift +Esc 打开任务管理器<br>Ctrl + End 当前窗口或文档的最下端<br>Ctrl + Home 当前窗口或文档的最上端</p><h2 id="Shift-组合系列"><a href="#Shift-组合系列" class="headerlink" title="Shift 组合系列"></a>Shift 组合系列</h2><p>Shift + Delete 永久删除所选项，而不将它放到“回收站”中<br>按住SHIFT切换大小写输入</p><h2 id="Alt-组合系列"><a href="#Alt-组合系列" class="headerlink" title="Alt 组合系列"></a>Alt 组合系列</h2><p>Alt + Tab 在打开的项目之间切换<br>Alt + F4 关闭当前项目或者退出当前程序</p><h2 id="Fn-键系列"><a href="#Fn-键系列" class="headerlink" title="Fn 键系列"></a>Fn 键系列</h2><p>F5 刷新当前窗口<br>F2 重新命名所选项目</p><h1 id="补充资料"><a href="#补充资料" class="headerlink" title="补充资料"></a>补充资料</h1><p>经过细致的分析，将各版本Windows的主要快捷键整理了一下，分享给各位欲成为Windows高手的人们！</p><h2 id="Ctrl-组合键："><a href="#Ctrl-组合键：" class="headerlink" title="Ctrl 组合键："></a>Ctrl 组合键：</h2><table><thead><tr><th>按键</th><th>作用</th></tr></thead><tbody><tr><td>Ctrl+A</td><td>全选</td></tr><tr><td>Ctrl+B</td><td>整理收藏夹(在MS Office中是文字加粗)</td></tr><tr><td>Ctrl+C</td><td>复制</td></tr><tr><td>Ctrl+D</td><td>删除/添加收藏(在MS Office中是修改选定字符格式，在IE及傲游中是保存为收藏)</td></tr><tr><td>Ctrl+E</td><td>搜索助理，在MS Office中是段落居中</td></tr><tr><td>Ctrl+F</td><td>查找</td></tr><tr><td>Ctrl+I</td><td>IE或Edge浏览器的收藏夹</td></tr><tr><td>Ctrl+J</td><td>IE或Edge里面的下载</td></tr><tr><td>Ctrl+K</td><td>IE或Edge里面复制当前网页</td></tr><tr><td>Ctrl+O</td><td>IE或Edge里面打开</td></tr><tr><td>Ctrl+L</td><td>IE或Edge里面选中地址栏</td></tr><tr><td>Ctrl+N</td><td>IE或Edge打开新窗口</td></tr><tr><td>Ctrl+P</td><td>打印网页</td></tr><tr><td>Ctrl+R=F5</td><td>刷新网页</td></tr><tr><td>Ctrl+S</td><td>IE保存网页，Edge无效</td></tr><tr><td>Ctrl+T</td><td>IE或Edge新建标签页</td></tr><tr><td>Ctrl+U</td><td>IE或Edge调试程序</td></tr><tr><td>Ctrl+V</td><td>粘贴</td></tr><tr><td>Ctrl+W</td><td>关闭当前窗口</td></tr><tr><td>Ctrl+X</td><td>剪切</td></tr><tr><td>Ctrl+Y</td><td>恢复上一步操作</td></tr><tr><td>Ctrl+Z</td><td>撤消上一步操作</td></tr><tr><td>Ctrl+拖动文件</td><td>复制文件</td></tr><tr><td>Ctrl+Backspace</td><td>文档编辑时删除一个单词</td></tr><tr><td>Ctrl+空格</td><td>中英文切换</td></tr><tr><td>Ctrl+Shift</td><td>输入法切换</td></tr><tr><td>Ctrl+.（主键盘的句号）</td><td>中文输入法的全角与半角的切换</td></tr><tr><td>拖动文件时按住Ctrl+Shift</td><td>创建快捷方式</td></tr><tr><td>Ctrl+F5</td><td>IE或Edge中强行刷新</td></tr><tr><td>Ctrl+Home</td><td>光标快速移到文件头</td></tr><tr><td>Ctrl+End</td><td>光标快速移到文件尾</td></tr></tbody></table><h2 id="Fn系列功能键"><a href="#Fn系列功能键" class="headerlink" title="Fn系列功能键"></a>Fn系列功能键</h2><blockquote><p>这个需要看具体的电脑而定的，直接看自己电脑的图标就可以了，我在这里就不一一列举了，祝大家很快适应。</p></blockquote><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><table><thead><tr><th>按键</th><th>作用</th></tr></thead><tbody><tr><td>Delete</td><td>删除</td></tr><tr><td>Shift+Delete</td><td>永久删除所选项，而不将它放到“回收站”中（慎用）</td></tr><tr><td>Ctrl+向右方向键</td><td>将插入点移动到下一个单词的起始处</td></tr><tr><td>Ctrl+向右方向键</td><td>将插入点移动到前一个单词的起始处</td></tr><tr><td>Ctrl+向下方向键</td><td>将插入点移动到下一段落的起始处</td></tr><tr><td>Ctrl+向上方向键</td><td>将插入点移动到前一段落的起始处</td></tr><tr><td>Ctrl+Shift+方向键</td><td>突出显示一块文本</td></tr><tr><td>Shift+方向键</td><td>在窗口或桌面上选择多项，或者选中文档中的文本</td></tr><tr><td>Alt+Enter</td><td>查看所选项目的属性/切换全屏（限Windows 7以上）</td></tr><tr><td>Alt+F4</td><td>关闭当前项目（窗口），如果没有项目关了，会提示“关闭计算机”</td></tr><tr><td>Alt+空格键</td><td>为当前窗口打开控制菜单</td></tr><tr><td>Ctrl+F4</td><td>在允许同时打开多个文档的程序中关闭当前文档</td></tr><tr><td>Alt+Tab</td><td>在打开的项目之间切换</td></tr><tr><td>Alt+Esc</td><td>以项目打开的顺序循环切换</td></tr><tr><td>Shift+F10</td><td>显示所选项的快捷菜单</td></tr><tr><td>Shift</td><td>IE或Edge中鼠标左键单击窗口超级连接在新窗口打开指定的连接</td></tr><tr><td>Alt+空格键</td><td>显示当前窗口的“系统”菜单</td></tr><tr><td>Alt+菜单名中带下划线的字母</td><td>显示相应的菜单</td></tr><tr><td>在打开的菜单上显示的命令名称中带有下划线的字母</td><td>执行菜单对应的命令</td></tr><tr><td>右方向键</td><td>树菜单中打开右边的下一菜单或者打开子菜单</td></tr><tr><td>左方向键</td><td>树菜单中打开左边的下一菜单或者关闭子菜单</td></tr><tr><td>Backspace</td><td>在“我的电脑（或此电脑、计算机）”或“Windows键 资源管理器”中查看上一层文件夹</td></tr><tr><td>Esc</td><td>取消当前任务</td></tr><tr><td>将光盘插入到光驱时按“Shift”键</td><td>阻止光盘自动播放</td></tr></tbody></table><h2 id="对话框快捷键"><a href="#对话框快捷键" class="headerlink" title="对话框快捷键"></a>对话框快捷键</h2><table><thead><tr><th>按键</th><th>作用</th></tr></thead><tbody><tr><td>Ctrl+Tab</td><td>在选项卡之间向前移动</td></tr><tr><td>Ctrl+Shift+Tab</td><td>在选项卡之间向后移动</td></tr><tr><td>Ctrl+鼠标左键</td><td>可以临时允许弹出窗口程序</td></tr><tr><td>Ctrl+Home</td><td>当前窗口或文档的最上端</td></tr><tr><td>Ctrl+End</td><td>当前窗口或文档的最下端</td></tr><tr><td>Tab</td><td>在选项之间向前移动</td></tr><tr><td>Shift+Tab</td><td>在选项之间向后移动</td></tr><tr><td>Enter</td><td>执行活选项动作或按钮所对应的命令</td></tr><tr><td>空格键</td><td>如果活选项动作是复选框，则选中或清除该复选框</td></tr><tr><td>方向键</td><td>活选项动作是一组选项按钮时，请选中某个按钮</td></tr></tbody></table><h2 id="Windows键"><a href="#Windows键" class="headerlink" title="Windows键"></a>Windows键</h2><table><thead><tr><th>按键</th><th>作用</th></tr></thead><tbody><tr><td>Windows键</td><td>开始菜单</td></tr><tr><td>Windows键=Ctrl+Esc</td><td>显示或隐藏开始菜单</td></tr><tr><td>Windows键+Break</td><td>显示”系统属性”对话框</td></tr><tr><td>Windows键+D</td><td>显示桌面</td></tr><tr><td>Windows键+E</td><td>打开资源管理器</td></tr><tr><td>Windows键+F</td><td>查找所有文件</td></tr><tr><td>Ctrl+Windows键+F</td><td>搜索计算机</td></tr><tr><td>Windows键+F1</td><td>显示Windows在线帮助</td></tr><tr><td>Windows键+L</td><td>如果连接到网络域，则锁定您的计算机，或者如果没有连接到网络域，则切换用户</td></tr><tr><td>Windows键+M</td><td>最小化所有窗口</td></tr><tr><td>Windows键+Shift+M</td><td>还原最小化的窗口</td></tr><tr><td>Windows键+R</td><td>打开”运行”对话框</td></tr><tr><td>Windows键+U</td><td>打开”工具管理器”</td></tr><tr><td>Windows键+逗号</td><td>所有窗口变透明，显示桌面内容（限Windows 8.1以上）</td></tr><tr><td>Windows键+Alt+D</td><td>显示时间和日历面板(等同于点击任务栏上的时间，限Windows 10)</td></tr><tr><td>Windows键+Tab</td><td>打开任务视图（限Windows 10）</td></tr><tr><td>Windows键+Up</td><td>最大化（Windows 7以上）</td></tr><tr><td>Windows键+Down</td><td>还原/最小化（Windows   7以上）</td></tr><tr><td>Windows键+Left</td><td>通过AeroSnap靠左显示（Windows 7以上）</td></tr><tr><td>Windows键+Right</td><td>通过AeroSnap靠右显示（Windows 7以上）</td></tr><tr><td>Windows键+Shift+Left</td><td>跳转左边的显示器（Windows   7以上）</td></tr><tr><td>Windows键+Shift+Right</td><td>跳转右边的显示器（Windows 7以上）</td></tr><tr><td>Windows键+Home</td><td>最小化/还原所有其他窗口（Windows 7以上）</td></tr><tr><td>Windows键+T</td><td>选中任务栏首个项目，再次按下则会在任务栏上循环切换（Windows 7以上）</td></tr><tr><td>Windows键+Shift+T</td><td>则是后退（Windows 7以上）</td></tr><tr><td>Windows键+Space</td><td>使用Aero Peek显示桌面（Windows 7以上）</td></tr><tr><td>Windows键+G</td><td>呼出桌面小工具（Windows 7以上，Windows10无）</td></tr><tr><td>Windows键+P</td><td>外界显示器（投影，扩展桌面等）（Windows 7以上）</td></tr><tr><td>Windows键+X</td><td>移动中心（Windows   7/8/8.1），开始菜单右键菜单（Windows 10）</td></tr><tr><td>Windows键+#</td><td>（#=数字键）运行任务栏上第N个程序，比如：Windows键+1，使用第一个程序；Windows键+2使用第二个……（Windows   7以上）</td></tr><tr><td>Windows键++</td><td>放大镜放大（Windows 7以上）</td></tr><tr><td>Windows键+-</td><td>放大镜缩小（Windows 7以上）</td></tr></tbody></table><h2 id="辅助键盘"><a href="#辅助键盘" class="headerlink" title="辅助键盘"></a>辅助键盘</h2><table><thead><tr><th>按键</th><th>作用</th></tr></thead><tbody><tr><td>左Alt+左Shift+PRINT SCREEN</td><td>切换“高对比度”的开和关</td></tr><tr><td>左Alt+左Shift+NUM LOCK</td><td>切换“鼠标键”的开和关</td></tr><tr><td>Shift键五次</td><td>切换“粘滞键”的开和关</td></tr><tr><td>Num Lock键五秒钟</td><td>切换“切换键”的开和关</td></tr></tbody></table><h2 id="Windows-资源管理器"><a href="#Windows-资源管理器" class="headerlink" title="Windows 资源管理器"></a>Windows 资源管理器</h2><table><thead><tr><th>按键</th><th>作用</th></tr></thead><tbody><tr><td>End</td><td>显示当前窗口的底端</td></tr><tr><td>Home</td><td>显示当前窗口的顶端</td></tr><tr><td>Num   Lock+数字键盘的星号(*)</td><td>显示所选文件夹的所有子文件夹</td></tr><tr><td>Num   Lock+数字键盘的加号(+)</td><td>显示所选文件夹的内容</td></tr><tr><td>Num   Lock+数字键盘的减号(-)</td><td>折叠所选的文件夹</td></tr><tr><td>左方向键</td><td>当前所选项处于展开状态时折叠该项，或选定其父文件夹</td></tr><tr><td>左方向键</td><td>当前所选项处于折叠状态时展开该项，或选定第一个子文件夹</td></tr><tr><td>Alt+P</td><td>显示/隐藏预览面板</td></tr><tr><td>Ctrl+Shift+T</td><td>恢复被关闭的页面（网页）</td></tr></tbody></table><h2 id="任务栏"><a href="#任务栏" class="headerlink" title="任务栏"></a>任务栏</h2><table><thead><tr><th>按键</th><th>作用</th></tr></thead><tbody><tr><td>Shift+左键单击某程序图标</td><td>运行该程序，如果有在运行的则新建一个该程序</td></tr><tr><td>中键单击某程序图标</td><td>运行该程序，如果有在运行的则新建一个该程序</td></tr><tr><td>Ctrl+Shift+左键单击某程序图标</td><td>以管理员身份运行该程序，如果有在运行的则以管理员身份新建一个该程序</td></tr><tr><td>Shift+右键击某程序图标</td><td>显示窗口菜单（层叠/堆叠/并列/还原/最小化/关闭等）</td></tr><tr><td>Ctrl+左键单击某程序图标</td><td>在窗口或标签中循环切换</td></tr></tbody></table><p>本文并非所有 Windows 快捷键，但是都是通过办公精英的小编一个个测试过的，不是网上那种随便复制粘贴的文章！</p>]]></content>
      
      
      <categories>
          
          <category> 学习资料库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Win快捷键 </tag>
            
            <tag> 学习资料 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>markdown文件编辑</title>
      <link href="/p/26142.html"/>
      <url>/p/26142.html</url>
      
        <content type="html"><![CDATA[<h1 id="Welcome-to-Marxico"><a href="#Welcome-to-Marxico" class="headerlink" title="Welcome to Marxico"></a>Welcome to Marxico</h1><p>@(Sample notebook)[Marxico|Manual|Markdown]</p><p><strong>Marxico</strong> is a delicate Markdown editor for Evernote. With reliable storage and sync powered by Evernote, <strong>Marxico</strong> offers greate writing experience. </p><ul><li><strong>Versatile</strong> - supporting code highlight, <em>LaTeX</em> &amp; flow charts,  inserting images &amp; attachments by all means.</li><li><strong>Exquisite</strong> -  neat but powerful editor, featuring offline docs, live preview, and offering the <a href="http://marxi.co/client_en" target="_blank" rel="noopener">desktop client</a> and offline <a href="https://chrome.google.com/webstore/detail/kidnkfckhbdkfgbicccmdggmpgogehop" target="_blank" rel="noopener">Chrome App</a>.</li><li><strong>Sophisticated</strong> - deeply integrated with Evernote, supporting notebook &amp; tags, two-way bind editing.   </li></ul><hr><p>[TOC]</p><h2 id="Introducing-Markdown"><a href="#Introducing-Markdown" class="headerlink" title="Introducing Markdown"></a>Introducing Markdown</h2><blockquote><p>Markdown is a plain text formatting syntax designed to be converted to HTML. Markdown is popularly used as format for readme files, … or in text editors for the quick creation of rich text documents.  - <a href="http://en.wikipedia.org/wiki/Markdown" target="_blank" rel="noopener">Wikipedia</a></p></blockquote><p>As showed in this manual, it uses hash(#) to identify headings, emphasizes some text to be <strong>bold</strong> or <em>italic</em>. You can insert a <a href="http://www.example.com" target="_blank" rel="noopener">link</a> , or a footnote[^demo]. Serveral advanced syntax are listed below, please press <code>Ctrl + /</code> to view Markdown cheatsheet.</p><h3 id="Code-block"><a href="#Code-block" class="headerlink" title="Code block"></a>Code block</h3><pre><code class="python">@requires_authorizationdef somefunc(param1=&#39;&#39;, param2=0):    &#39;&#39;&#39;A docstring&#39;&#39;&#39;    if param1 &gt; param2: # interesting        print &#39;Greater&#39;    return (param2 - param1 + 1) or Noneclass SomeClass:    pass&gt;&gt;&gt; message = &#39;&#39;&#39;interpreter... prompt&#39;&#39;&#39;</code></pre><h3 id="LaTeX-expression"><a href="#LaTeX-expression" class="headerlink" title="LaTeX expression"></a>LaTeX expression</h3><p>$$    x = \dfrac{-b \pm \sqrt{b^2 - 4ac}}{2a} $$</p><h3 id="Table"><a href="#Table" class="headerlink" title="Table"></a>Table</h3><table><thead><tr><th align="left">Item</th><th align="right">Value</th><th align="center">Qty</th></tr></thead><tbody><tr><td align="left">Computer</td><td align="right">1600 USD</td><td align="center">5</td></tr><tr><td align="left">Phone</td><td align="right">12 USD</td><td align="center">12</td></tr><tr><td align="left">Pipe</td><td align="right">1 USD</td><td align="center">234</td></tr></tbody></table><h3 id="Diagrams"><a href="#Diagrams" class="headerlink" title="Diagrams"></a>Diagrams</h3><h4 id="Flow-charts"><a href="#Flow-charts" class="headerlink" title="Flow charts"></a>Flow charts</h4><pre><code class="flow">st=&gt;start: Starte=&gt;endop=&gt;operation: My Operationcond=&gt;condition: Yes or No?st-&gt;op-&gt;condcond(yes)-&gt;econd(no)-&gt;op</code></pre><h4 id="Sequence-diagrams"><a href="#Sequence-diagrams" class="headerlink" title="Sequence diagrams"></a>Sequence diagrams</h4><pre><code class="sequence">Alice-&gt;Bob: Hello Bob, how are you?Note right of Bob: Bob thinksBob--&gt;Alice: I am good thanks!</code></pre><blockquote><p><strong>Note:</strong> You can find more information:</p></blockquote><blockquote><ul><li>about <strong>Sequence diagrams</strong> syntax <a href="http://bramp.github.io/js-sequence-diagrams/" target="_blank" rel="noopener">here</a>,</li><li>about <strong>Flow charts</strong> syntax <a href="http://adrai.github.io/flowchart.js/" target="_blank" rel="noopener">here</a>.</li></ul></blockquote><h3 id="Checkbox"><a href="#Checkbox" class="headerlink" title="Checkbox"></a>Checkbox</h3><p>You can use <code>- [ ]</code> and <code>- [x]</code> to create checkboxes, for example:</p><ul><li><input checked="" disabled="" type="checkbox"> Item1</li><li><input disabled="" type="checkbox"> Item2</li><li><input disabled="" type="checkbox"> Item3</li></ul><blockquote><p><strong>Note:</strong> Currently it is only partially supported. You can’t toggle checkboxes in Evernote. You can only modify the Markdown in Marxico to do that. Next version will fix this.  </p></blockquote><h3 id="Dancing-with-Evernote"><a href="#Dancing-with-Evernote" class="headerlink" title="Dancing with Evernote"></a>Dancing with Evernote</h3><h4 id="Notebook-amp-Tags"><a href="#Notebook-amp-Tags" class="headerlink" title="Notebook &amp; Tags"></a>Notebook &amp; Tags</h4><p><strong>Marxico</strong> add <code>@(Notebook)[tag1|tag2|tag3]</code> syntax to select notebook and set tags for the note. After typing <code>@(</code>, the notebook list would appear, please select one from it.  </p><h4 id="Title"><a href="#Title" class="headerlink" title="Title"></a>Title</h4><p><strong>Marxico</strong> would adopt the first heading encountered as the note title. For example, in this manual the first line <code>Welcome to Marxico</code> is the title.</p><h4 id="Quick-Editing"><a href="#Quick-Editing" class="headerlink" title="Quick Editing"></a>Quick Editing</h4><p>Note saved by <strong>Marxico</strong> in Evernote would have a red ribbon button on the top-right corner. Click it and it would bring you back to <strong>Marxico</strong> to edit the note. </p><blockquote><p><strong>Note:</strong> Currently <strong>Marxico</strong> is unable to detect and merge any modifications in Evernote by user. Please go back to <strong>Marxico</strong> to edit.</p></blockquote><h4 id="Data-Synchronization"><a href="#Data-Synchronization" class="headerlink" title="Data Synchronization"></a>Data Synchronization</h4><p>While saving rich HTML content in Evernote, <strong>Marxico</strong> puts the Markdown text in a hidden area of the note, which makes it possible to get the original text in <strong>Marxico</strong> and edit it again. This is a really brilliant design because:</p><ul><li>it is beyond just one-way exporting HTML which other services do;</li><li>and it avoids privacy and security problems caused by storing content in a intermediate server. </li></ul><blockquote><p><strong>Privacy Statement: All of your notes data are saved in Evernote. Marxico doesn’t save any of them.</strong> </p></blockquote><h4 id="Offline-Storage"><a href="#Offline-Storage" class="headerlink" title="Offline Storage"></a>Offline Storage</h4><p><strong>Marxico</strong> stores your unsynchronized content locally in browser storage, so no worries about network and broswer crash. It also keeps the recent file list you’ve edited in <code>Document Management(Ctrl + O)</code>.</p><blockquote><p><strong>Note:</strong> Although browser storage is reliable in the most time, Evernote is born to do that. So please sync the document regularly while writing.</p></blockquote><h2 id="Shortcuts"><a href="#Shortcuts" class="headerlink" title="Shortcuts"></a>Shortcuts</h2><p>Help    <code>Ctrl + /</code><br>Sync Doc    <code>Ctrl + S</code><br>Create Doc    <code>Ctrl + Alt + N</code><br>Maximize Editor    <code>Ctrl + Enter</code><br>Preview Doc <code>Ctrl + Alt + Enter</code><br>Doc Management    <code>Ctrl + O</code><br>Menu    <code>Ctrl + M</code></p><p>Bold    <code>Ctrl + B</code><br>Insert Image    <code>Ctrl + G</code><br>Insert Link    <code>Ctrl + L</code><br>Convert Heading    <code>Ctrl + H</code></p><h2 id="About-Pro"><a href="#About-Pro" class="headerlink" title="About Pro"></a>About Pro</h2><p><strong>Marixo</strong> offers a free trial of 10 days. After that, you need to <a href="http://marxi.co/purchase.html" target="_blank" rel="noopener">purchase</a> the Pro service. Otherwise, you would not be able to sync new notes. Previous notes can be edited and synced all the time.</p><h2 id="Credits"><a href="#Credits" class="headerlink" title="Credits"></a>Credits</h2><p><strong>Marxico</strong> was first built upon <a href="http://dillinger.io" target="_blank" rel="noopener">Dillinger</a>, and the newest version is almost based on the awesome <a href="http://stackedit.io" target="_blank" rel="noopener">StackEdit</a>. Acknowledgments to them and other incredible open source projects!</p><h2 id="Feedback-amp-Bug-Report"><a href="#Feedback-amp-Bug-Report" class="headerlink" title="Feedback &amp; Bug Report"></a>Feedback &amp; Bug Report</h2><ul><li>Twitter: <a href="https://twitter.com/gock2" target="_blank" rel="noopener">@gock2</a></li><li>Email: <a href="mailto:&#104;&#117;&#x73;&#116;&#x67;&#x6f;&#99;&#107;&#64;&#103;&#109;&#97;&#x69;&#x6c;&#x2e;&#x63;&#111;&#109;">&#104;&#117;&#x73;&#116;&#x67;&#x6f;&#99;&#107;&#64;&#103;&#109;&#97;&#x69;&#x6c;&#x2e;&#x63;&#111;&#109;</a></li></ul><hr><p>Thank you for reading this manual. Now please press <code>Ctrl + M</code> and click <code>Link with Evernote</code>. Enjoy your <strong>Marxico</strong> journey!</p><p>[^demo]: This is a demo footnote. Read the <a href="https://github.com/fletcher/MultiMarkdown/wiki/MultiMarkdown-Syntax-Guide#footnotes" target="_blank" rel="noopener">MultiMarkdown Syntax Guide</a> to learn more. Note that Evernote disables ID attributes in its notes , so <code>footnote</code> and <code>TOC</code> are not actually working. </p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>工艺夹具期末复习</title>
      <link href="/p/14990.html"/>
      <url>/p/14990.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>根据老师的资料进行总结复习，不是很完全。</p></blockquote><h1 id="工艺夹具期末总结"><a href="#工艺夹具期末总结" class="headerlink" title="工艺夹具期末总结"></a>工艺夹具期末总结</h1><p>1 减小工件残余应力有哪些措施？</p><p>增加时效处理工序；合理安排工艺过程；合理设计零件结构；</p><p>2 影响磨削加工表面粗糙度的因素？</p><p>砂轮粒度，硬度，磨粒材料，速度，组织，修整；工件材料，速度，纵向进给量；冷却润滑液的合理选择；</p><p>3 减少热变形对加工精度的影响有哪些措施？</p><p>减少热源的发热和隔离热源；均衡温度场；采用合理的机床结构；控制环境温度，加速达到热平衡。</p><p>4 减小切削加工后的表面粗糙度的措施：</p><p>减小主偏角、副偏角和进给量，增大刀尖圆弧半径；使用低速宽刀精切和高速精切；在加工前对工件进行调制处理，使工件的晶粒更加细密，提高工件的硬度；合理使用切削液；适当增大刀具的法前角，提高刀具的刃磨质量。</p><p>5 影响切削表层残余应力的因素：</p><p>切削用量；刀具角度；工件材料</p><p>6 消除和控制机械加工中的强迫振动有哪些措施？</p><p>减少机内干扰力的振幅；适当调整震源的频率；采用隔振措施</p><p>7 产生误差的原因：</p><p>9 基准</p><p>设计基准：在零件图上标注设计尺寸所采用的基准。<br>工艺基准：零件在工艺过程中采用的所采用的基准。<br>工序基准：本道工序的基准；<br>定位基准：确定工件在机床或夹具中的正确位置所采用的基准；<br>测量基准：测量使用的基准。<br>装配基准：装配时用到的基准。</p>]]></content>
      
      
      <categories>
          
          <category> 工艺夹具课程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 工艺 </tag>
            
            <tag> 夹具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MATLAB 遭禁，CAD 也危险，国产工业软件如何突围？</title>
      <link href="/p/b829.html"/>
      <url>/p/b829.html</url>
      
        <content type="html"><![CDATA[<h1 id="MATLAB-遭禁，CAD-也危险，国产工业软件如何突围？"><a href="#MATLAB-遭禁，CAD-也危险，国产工业软件如何突围？" class="headerlink" title="MATLAB 遭禁，CAD 也危险，国产工业软件如何突围？"></a>MATLAB 遭禁，CAD 也危险，国产工业软件如何突围？</h1><p><img src="https://gitee.com/badenough/picture/raw/master/img/NDA.jpg" alt=""></p><p>近日，著名的工业软件公司Mathwork已经停止了哈尔滨工业大学、哈尔滨工程大学等在实体清单上的公司提供技术以及客户支持服务，这也就意味着两校的师生要和工科神器Matlab说再见了。更糟糕的是，未来两校在论文中不可以出现任何使用 MATLAB 生成的图表。</p><p>这些封锁，可能对于我国IT产业来说可能是一件好事，这提醒了我们不应该过分依赖非开源产品，所有核心模块需要有一个开源替代的方案，那些没有开源替代方案的部分比如Matlab的用于仿真的Sitimulink模块乃至整个工业软件领域，我们就要高度重视，以寻求突破。</p><h2 id="初识工业软件"><a href="#初识工业软件" class="headerlink" title="初识工业软件"></a>初识工业软件</h2><p>工业软件指专用于或主要用于工业领域，提高工业企业研发、制造、管理水平和工业装备性能的软件。工业软件从应用环节可分为研发设计类、生产调度和过程控制类、业务管理类三大领域，包括我们一会儿要重点提到的电子设计软件 EDA以及业内使用非常多的计算机辅助设计（CAD）、辅助分析（CAE）实际是工业软研发设计类软件的一种。</p><p>根据国家统计局数据，2018年中国制造业增加值占世界制造业份额占比达到28%以上，但我国企业使用的工业软件，几乎全部来自于SAP、西门子等国外厂商。</p><p>从当前的公开资料来看，截至2018年底，全球工业软件市场规模达到3893亿美元，同年我国工业软件的市场规模仅为1603亿元。我国工业软件市场规模仅仅是全球工业软件市场规模的十五分之一，考虑到未来我国正处在高速数字化、云计算转型的过程中，未来对于工业软件的需求必定还会持续扩大。在所有的工业软件中，我国目前最缺的就是EDA软件。</p><h2 id="EDA是芯片行业的关键一环"><a href="#EDA是芯片行业的关键一环" class="headerlink" title="EDA是芯片行业的关键一环"></a>EDA是芯片行业的关键一环</h2><p>国产CPU和异构AI芯片是我国发展人工智能和云计算等“新基建”的核心技术。据不完全统计，2019 年全球芯片市场规模已经突破千亿美元，随着数据中心和云服务的加速推进，未来我国对于芯片的需求还会大幅度增长，国产替代空间广阔。不过我国的芯片行业能否进入良性循环，还得要看我国能否在EDA领域取得关键性进展。</p><p>EDA是计算机辅助设计CAD的细分领域，利用EDA工具，芯片设计人员可以从概念、算法、协议等开始设计电子系统，完成电子产品从电路设计、性能分析到设计出IC版图或PCB版图的整个过程。数据显示，2018年全球EDA市场规模还没突破100亿美元，EDA相对于几千亿美元的芯片产业来说从产值上看根本不值一提，但如果缺少了EDA，整个芯片产业都得停摆。</p><p>在EDA工具出现之前，芯片设计人员只能依靠手绘图纸的方式来完成集成电路的设计、布线等工作，但是后来随着摩尔定律的提出，芯片内部的复杂度越来越高，因此业界开始寻求构建一款计算机软件来帮助设计人员完成设计，不过真正划时代的突破到1986年才到来。</p><p>当时在美国国防部的资助下，硬件描述语言VHDL的概念被提出，VHDL语言是识别、读取不同类型硬件的标准描述，目前VHDL在行业内应用非常广泛，笔者在前文百行代码解读阿里 AloT 芯片平台无剑 100！，介绍了开源芯片无剑100是基于VHDL描述的。如果把VHDL比作Java，那么EDA则相当于Eclipse，而芯片则相当于Java编写的软件项目，如RocketMQ等，就像C语言大大加速了软件产业的发展一样，VHDL的出现也大大加速了芯片产业的发展。</p><p>随着半导体产业的规模日益扩大，EDA 扮演角色越来越重要。不光是芯片设计厂商使用，代工制造商也需要EDA生成的模型，同时芯片模拟与仿真也离不开EDA，可以说EDA是打通芯片由设计到制造整个产业，任督二脉的关键一环。</p><h2 id="国产EDA产业当自强"><a href="#国产EDA产业当自强" class="headerlink" title="国产EDA产业当自强"></a>国产EDA产业当自强</h2><p>EDA市场前三位的Synopsys、Cadence和被西门子约占全球市场份额的60%，产业集中度并不是太高，不过在中国市场，却完全是另一一番景象，我国EDA的市场份额95%由上述三家瓜分，剩余的5%还有部分被Ansys等其它外国公司占据，真正给我国华大九天、芯愿景、芯禾科技等国产EDA公司留下的空间非常少。据估计2018年我国EDA的市场规模仅为尚未突破百亿元。</p><p>EDA行业入门门槛高，成本弹性大，对性能依赖性强，我国EDA公司若想突围，就必须持续投入进行技术研发。不过在研发方面我们和EDA行业的巨头差距很大，近些来来EDA三巨头们在研发上的投入都在持续增长，尤其是Cadence公司在研发方面的投入最为大手笔，近两年研发支出占总营收的比例甚至超过40%。</p><p>从国外上，美国在去年推出了一项为期5年、总值15亿美元的电子复兴计划——ERI，来支持芯片技术的开发，美国国会也增加了对ERI的投入，每年额外注资1.5亿美元。从这我们看到国外EDA企业每年的研发投入达到几十亿人民币，而国内EDA产业总的规模不到百亿，确实存在一些差距。</p><p>国内EDA产业起步并不算太晚，国产首套EDA熊猫系统于1986年开始研发，1993年问世。不过之后的国内EDA产业发展就变得曲折，甚至前一段时间的爆款文《我国工业软件失去的30年》，将国产工业软件的落后归结于国家扶植力度的不足，笔者虽然不认为哪个产业能靠国家补贴获得成功，不过我们也应该看到与开源替代的IT领域中，比如操作系统方面，我国还是有不少能如RTThread、Tencent OS等一些能够拿出手的作品，甚至在CPU指令集方面，阿里平头哥也取得了不小的突破，不但推出了基于开源指令集RISC-V的玄铁系列芯片，并且围绕着IoT打造出一片属于玄铁910的生态体系。</p><p>在EDA这种没有任何开源替代品的领域中，目前来看国家层面加大政策倾斜与资源扶持力度可能唯一行之有效的道路了。EDA软件工具涵盖了IC设计、布线、验证和仿真等所有方面。EDA是集成电路设计必需、也是最重要的软件工具，EDA产业是IC设计最上游、最高端的产业。而且最为关键的一点是，我国EDA厂商还没有为旗下产品建立完整的生态链，没有形成完整意义上的闭环，这也注定了国产EDA之路还任重道远。</p>]]></content>
      
      
      <categories>
          
          <category> 新闻 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 工业软件 </tag>
            
            <tag> Matlab </tag>
            
            <tag> CAD </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>9个常用的代码托管平台</title>
      <link href="/p/a797.html"/>
      <url>/p/a797.html</url>
      
        <content type="html"><![CDATA[<h1 id="技术派-9个常用的代码托管平台"><a href="#技术派-9个常用的代码托管平台" class="headerlink" title="技术派-9个常用的代码托管平台"></a>技术派-9个常用的代码托管平台</h1><p>1、华为开源平台(2019.8.31正式上线)</p><p>华为开源平台</p><p><a href="https://code.opensource.huaweicloud.com/" target="_blank" rel="noopener">https://code.opensource.huaweicloud.com/</a></p><p>建议中国大陆开发者慢慢从github转移到大陆自己的开源平台。</p><p>2、码云（国内比较大的代码托管平台，开源中国旗下）</p><p>gitee.com</p><p>码云 Gitee — 基于 Git 的代码托管和研发协作平台</p><p>3、阿里云Code托管平台</p><p><a href="https://code.aliyun.com/" target="_blank" rel="noopener">https://code.aliyun.com/</a></p><p>官方网站：阿里云登录 - 欢迎登录阿里云，安全稳定的云计算服务平台</p><p>4、百度效率云</p><p><a href="http://xiaolvyun.baidu.com/" target="_blank" rel="noopener">http://xiaolvyun.baidu.com/</a></p><p>百度效率云 | Git代码托管，版本管理，项目管理，持续集成，持续交付，研发工具云端解决方案</p><p>5、coding 以及 coding也腾讯合作腾讯开发者平台</p><p>CODING 代码托管 | 极速 Git 代码仓库服务</p><p><a href="https://coding.net/" target="_blank" rel="noopener">https://coding.net/</a></p><p>腾讯云开发者平台 | 技术助力开发</p><p><a href="https://dev.tencent.com/" target="_blank" rel="noopener">https://dev.tencent.com/</a></p><p>6、github</p><p>Build software better, together</p><p>2018年被Microsoft以75亿美元收购，已与政治挂钩，已限制了许多受美国制裁的国家的开发者账户，未来不排除对中国的开发者限制的可能性。</p><p>7、gitlab</p><p><a href="https://github.com" target="_blank" rel="noopener">https://github.com</a></p><p>The first single application for the entire DevOps lifecycle - GitLab</p><p>8、bitbucket (位桶)</p><p><a href="https://bitbucket.org/product/" target="_blank" rel="noopener">https://bitbucket.org/product/</a></p><p>Bitbucket | The Git solution for professional teams</p><p>9、Google Code</p><p><a href="https://code.google.com/" target="_blank" rel="noopener">https://code.google.com/</a></p><p>很可惜，大陆访问不了。</p><p>10、推荐3个开源平台（与上述代码托管平台不同,但也公开/下载源代码）</p><p><a href="https://www.codeproject.com/" target="_blank" rel="noopener">https://www.codeproject.com/</a></p><p><a href="https://sourceforge.net/" target="_blank" rel="noopener">https://sourceforge.net/</a></p><p><a href="https://www.csdn.net/" target="_blank" rel="noopener">https://www.csdn.net/</a></p>]]></content>
      
      
      <categories>
          
          <category> 分享推荐 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 代码库 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>比谷歌浏览器还好用的浏览器</title>
      <link href="/p/53621.html"/>
      <url>/p/53621.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>Microsoft eage 浏览器</p></blockquote><a id="more"></a><h1 id="基础"><a href="#基础" class="headerlink" title="基础"></a>基础</h1><p>微软的 Edge 浏览器发布于 2015 年，三年更新积淀，已经让它变得很不一样，与Windows10一起发布的。</p><p>微软在自己的官网上直接标榜的是，比谷歌浏览器快 48% ，比火狐快 32% ，还比谷歌浏览器消耗更少的电池电量，并且更加安全。Topbook 不会去做专门的测评，只表达对于用户来说的直观感受。</p><h1 id="起初"><a href="#起初" class="headerlink" title="起初"></a>起初</h1><p>最初使用时，Edge 出现过很多不兼容、无法安装证书等等各种情况，而且非常容易崩溃和闪退。而现在已经很少出现这样的情况，并且在 Windows 系统的使用当中效果良好。很多人反映说，Edge 浏览器非常地占用内存，但正常使用过程中，确是少数（显示任务管理器中的数据 ）。</p><p>初次打开 Edge ，它会有比原来的 IE 浏览器更加轻盈的感受，而且按钮也不多。但你可以轻松地通过这些扁平化图标找到需要的东西。</p><p>除了直接在浏览器输入网址跳转内容之外，你可以在网页浏览器当中输入一些你想问的问题并直接得到答案，比如 283x199 等于多少、重庆的天气怎么样等等等等……</p><p>当你一时间打开了多个网页，会显得特别杂乱，并且难以从中迅速找到需要跳转的内容。这时候你可以直接点击这里的 Tab 标签页，所有网页都会自动汇聚在左上角。而你只需要点击一次，就能通过当前网页缩略图迅速精确地打开页面；</p><h1 id="增益"><a href="#增益" class="headerlink" title="增益"></a>增益</h1><p>如果你正好喜欢阅读某个网页上的内容，但网页有特别杂乱，那么你可以点击这里的小书图标，呈现阅读模式，当然这个功能很多浏览器都已经有了。但，更酷的是，你可以点击右上角的三个点，直接选择“大声朗读”，网页内容可以被自动朗读出来。你还可以调节语音以及朗读速度。</p><p>Edge 浏览器内置了微软小娜智能语音助手，你可以直接在任意网页内容上单击右键，向她提问，获得答案；同时，它还配备自带的墨迹书写和共享功能，你可以轻松在网页上直接标记、涂画、截图并且共享给其他人；</p><p>不仅如此，如果你偶尔有查看 PDF 文档的需求而又不愿意专门安装一个 PDF 阅读器，Edge 浏览器也能充当这个角色。</p><p>如果你在手机上安装了 Egle 浏览器，并且在当中登录了微软账户，并且在相应 1709 版本 Windows10 中也登录的同一账户。那么手机上正在浏览的内容，可以直接隔空发送到电脑上继续浏览。</p><h1 id="最后，"><a href="#最后，" class="headerlink" title="最后，"></a>最后，</h1><p>这款软件同样支持安卓和苹果手机，如果你愿意尝试一下它的妙用，可以前往 <a href="https://www.microsoft.com/zh-cn/edge" target="_blank" rel="noopener">Edge官网</a>下载使用。</p>]]></content>
      
      
      <categories>
          
          <category> 分享推荐 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 推广 </tag>
            
            <tag> 分享 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>为你的hexo博客添加导航页</title>
      <link href="/p/e925.html"/>
      <url>/p/e925.html</url>
      
        <content type="html"><![CDATA[<p>今天来说下如何在hexo博客中添加静态导航页面！（针对主题文件格式为ejs的）</p><h2 id="首先新建页面，执行下面的命令"><a href="#首先新建页面，执行下面的命令" class="headerlink" title="首先新建页面，执行下面的命令"></a>首先新建页面，执行下面的命令</h2><pre><code>hexo new page navigate</code></pre><h2 id="修改navigate目录下的index-md的格式"><a href="#修改navigate目录下的index-md的格式" class="headerlink" title="修改navigate目录下的index.md的格式"></a>修改navigate目录下的index.md的格式</h2><pre><code class="Markdown">---title: 导航date: 2020-05-09 11:19:14type: &quot;navigate&quot;layout: &quot;navigate&quot;---</code></pre><h2 id="在主题配置文件中添加导航"><a href="#在主题配置文件中添加导航" class="headerlink" title="在主题配置文件中添加导航"></a>在主题配置文件中添加导航</h2><pre><code class="Yaml"># main menu navigation url and icon# 配置菜单导航的名称、路径和图标icon.menu:  Index:    url: /    icon: fas fa-home  统计:    url: /    icon: fas fa-sitemap    children:      - name: 分类        url: /categories        icon: fas fa-bookmark       - name: 标签        url: /tags        icon: fas fa-tags           - name: 归档        url: /archives        icon: fas fa-archive  About:    url: /about    icon: fas fa-address-card  Contact:    url: /contact    icon: fas fa-comments  友人帐:    url: /friends    icon: fas fa-share-alt  赞助墙:    url: /sponsor    icon: fa fa-credit-card  导航:    url: /navigate    icon: fas fa-location-arrow</code></pre><h2 id="在-matery-layout-下新建-navigate-ejs"><a href="#在-matery-layout-下新建-navigate-ejs" class="headerlink" title="在 matery/layout 下新建 navigate.ejs"></a>在 <code>matery/layout</code> 下新建 <code>navigate.ejs</code></h2><pre><code>&lt;div class=&quot;navi-height bg-cover pd-header &quot;&gt;    &lt;div class=&quot; link-box container&quot;&gt;        &lt;!-- 搜索框 --&gt;        &lt;div class=&quot;baidu baidu-2 large-screen&quot;&gt;            &lt;form name=&quot;f&quot; action=&quot;https://www.baidu.com/&quot; target=&quot;_blank&quot;&gt;                &lt;div id=&quot;Select-2&quot;&gt;                    &lt;div class=&quot;Select-box-2&quot; id=&quot;baidu&quot;&gt;                        &lt;ul style=&quot;height: 46px;&quot;&gt;                            &lt;li class=&quot;this_s&quot;&gt;百 · 度&lt;/li&gt;                            &lt;li class=&quot;bing_s&quot;&gt;必 · 应&lt;/li&gt;                            &lt;li class=&quot;google_s&quot;&gt;谷 · 歌&lt;/li&gt;                            &lt;li class=&quot;baidu_s&quot;&gt;百 · 度&lt;/li&gt;                        &lt;/ul&gt;                    &lt;/div&gt; &lt;input name=&quot;wd&quot; id=&quot;kw-2&quot; maxlength=&quot;100&quot; autocomplete=&quot;off&quot; type=&quot;text&quot;&gt;                &lt;/div&gt;                &lt;div class=&quot;qingkong&quot; id=&quot;qingkong&quot; title=&quot;清 · 空&quot; style=&quot;display: none;&quot;&gt;x&lt;/div&gt; &lt;input value=&quot;搜 · 索&quot;                    id=&quot;su-2&quot; type=&quot;submit&quot;&gt;                &lt;ul class=&quot;keylist&quot;&gt;&lt;/ul&gt;            &lt;/form&gt;        &lt;/div&gt; &lt;!-- 链接 --&gt;        &lt;div class=&quot;row tags-posts &quot;&gt;            &lt;div class=&quot;col s12 m6 l4 friend-div&quot; data-aos=&quot;zoom-in-up&quot;&gt;                &lt;div class=&quot;card&quot;&gt;                    &lt;div class=&quot;jj-list-tit&quot;&gt;娱乐 · 影视&lt;/div&gt;                    &lt;ul class=&quot;jj-list-con&quot;&gt;                        &lt;li&gt;&lt;a href=&quot;https://www.jd.com/&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;京东&lt;/a&gt;                        &lt;li&gt;&lt;a href=&quot;https://www.taobao.com/&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;淘宝&lt;/a&gt;&lt;/li&gt;                        &lt;li&gt;&lt;a href=&quot;https://www.tmall.com/&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;天猫&lt;/a&gt;&lt;/li&gt;                        &lt;/li&gt;                        &lt;li&gt;&lt;a href=&quot;https://v.qq.com/&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;腾讯视频&lt;/a&gt;&lt;/li&gt;                        &lt;li&gt;&lt;a href=&quot;http://www.iqiyi.com/&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;爱奇艺&lt;/a&gt;&lt;/li&gt;                        &lt;li&gt;&lt;a href=&quot;https://www.bilibili.com/&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;哔哩哔哩&lt;/a&gt; &lt;/li&gt;                        &lt;li&gt;&lt;a href=&quot;https://music.163.com/&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;网易云音乐&lt;/a&gt;&lt;/li&gt;                        &lt;li&gt;&lt;a href=&quot;https://y.qq.com/&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;QQ音乐&lt;/a&gt;&lt;/li&gt;                        &lt;li&gt;&lt;a href=&quot;http://www.kugou.com/&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;酷狗音乐&lt;/a&gt;&lt;/li&gt;                    &lt;/ul&gt;                &lt;/div&gt;            &lt;/div&gt;            &lt;div class=&quot;col s12 m6 l4 friend-div&quot; data-aos=&quot;zoom-in-up&quot;&gt;                &lt;div class=&quot;card&quot;&gt;                    &lt;div class=&quot;jj-list-tit&quot;&gt;社区 · Code&lt;/div&gt;                    &lt;ul class=&quot;jj-list-con&quot;&gt;                        &lt;li&gt;&lt;a href=&quot;https://www.mobaijun.com/contact/&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;留言&lt;/a&gt;&lt;/li&gt;                        &lt;li&gt;&lt;a href=&quot;https://github.com/&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;GitHub&lt;/a&gt;&lt;/li&gt;                        &lt;li&gt;&lt;a href=&quot;https://coding.net/&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;Coding&lt;/a&gt;&lt;/li&gt;                        &lt;li&gt;&lt;a href=&quot;https://juejin.im/&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;掘金&lt;/a&gt;&lt;/li&gt;                        &lt;li&gt;&lt;a href=&quot;https://gitee.com/&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;码云&lt;/a&gt;&lt;/li&gt;                        &lt;li&gt;&lt;a href=&quot;https://www.csdn.net/&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;CSDN&lt;/a&gt;&lt;/li&gt;                        &lt;li&gt;&lt;a href=&quot;https://www.jianshu.com/&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;简书&lt;/a&gt;&lt;/li&gt;                        &lt;li&gt;&lt;a href=&quot;https://segmentfault.com/&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;思否&lt;/a&gt;&lt;/li&gt;                        &lt;li&gt;&lt;a href=&quot;https://cloud.tencent.com/developer/&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;云+社区&lt;/a&gt;&lt;/li&gt;                    &lt;/ul&gt;                &lt;/div&gt;            &lt;/div&gt;            &lt;div class=&quot;col s12 m6 l4 friend-div&quot; data-aos=&quot;zoom-in-up&quot;&gt;                &lt;div class=&quot;card&quot;&gt;                    &lt;div class=&quot;jj-list-tit&quot;&gt;实用 · 工具&lt;/div&gt;                    &lt;ul class=&quot;jj-list-con&quot;&gt;                        &lt;li&gt;&lt;a href=&quot;https://mdnice.com/&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;Nice编辑器&lt;/a&gt;&lt;/li&gt;                        &lt;li&gt;&lt;a href=&quot;https://translate.google.cn/&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;谷歌翻译&lt;/a&gt;&lt;/li&gt;                        &lt;li&gt;&lt;a href=&quot;https://www.uupoop.com/&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;在线PS&lt;/a&gt;&lt;/li&gt;                        &lt;li&gt;&lt;a href=&quot;https://www.processon.com/&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;思维导图&lt;/a&gt;&lt;/li&gt;                        &lt;li&gt;&lt;a href=&quot;https://wallhaven.cc/&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;超清壁纸&lt;/a&gt;&lt;/li&gt;                        &lt;li&gt;&lt;a href=&quot;https://cli.im/&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;二维码&lt;/a&gt;&lt;/li&gt;                        &lt;li&gt;&lt;a href=&quot;http://www.yinfans.me/&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;音范思&lt;/a&gt;&lt;/li&gt;                        &lt;li&gt;&lt;a href=&quot;https://www.52pojie.cn/&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;吾爱破解&lt;/a&gt;&lt;/li&gt;                        &lt;li&gt;&lt;a href=&quot;https://my.openwrite.cn/&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;OW分发&lt;/a&gt;&lt;/li&gt;                    &lt;/ul&gt;                &lt;/div&gt;            &lt;/div&gt;            &lt;div class=&quot;col s12 m6 l4 friend-div&quot; data-aos=&quot;zoom-in-up&quot;&gt;                &lt;div class=&quot;card&quot;&gt;                    &lt;div class=&quot;jj-list-tit&quot;&gt;编程 · 学习&lt;/div&gt;                    &lt;ul class=&quot;jj-list-con&quot;&gt;                        &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;开源中国&lt;/a&gt;&lt;/li&gt;                        &lt;li&gt;&lt;a href=&quot;https://htmldog.com/&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;HTML狗&lt;/a&gt;&lt;/li&gt;                        &lt;li&gt;&lt;a href=&quot;https://www.icourse163.org/&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;中国大学慕课&lt;/a&gt;&lt;/li&gt;                        &lt;li&gt;&lt;a href=&quot;https://www.imooc.com/&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;慕课网&lt;/a&gt;&lt;/li&gt;                        &lt;li&gt;&lt;a href=&quot;http://www.wxapp-union.com/&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;小程序&lt;/a&gt;&lt;/li&gt;                        &lt;li&gt;&lt;a href=&quot;https://www.runoob.com/&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;菜鸟教程&lt;/a&gt;&lt;/li&gt;                        &lt;li&gt;&lt;a href=&quot;https://blog.51cto.com/&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;51CTO&lt;/a&gt;&lt;/li&gt;                        &lt;li&gt;&lt;a href=&quot;https://www.shiyanlou.com/library/&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;实验楼&lt;/a&gt;&lt;/li&gt;                        &lt;li&gt;&lt;a href=&quot;https://spring.io/&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;Spring&lt;/a&gt;&lt;/li&gt;                    &lt;/ul&gt;                &lt;/div&gt;            &lt;/div&gt;            &lt;div class=&quot;col s12 m6 l4 friend-div&quot; data-aos=&quot;zoom-in-up&quot;&gt;                &lt;div class=&quot;card&quot;&gt;                    &lt;div class=&quot;jj-list-tit&quot;&gt;资讯 · 趋势&lt;/div&gt;                    &lt;ul class=&quot;jj-list-con&quot;&gt;                        &lt;li&gt;&lt;a href=&quot;https://www.huxiu.com/&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;虎嗅&lt;/a&gt;&lt;/li&gt;                        &lt;li&gt;&lt;a href=&quot;https://insights.stackoverflow.com/&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;技术调查&lt;/a&gt;&lt;/li&gt;                        &lt;li&gt;&lt;a href=&quot;http://www.asciiworld.com/&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;摸鱼&lt;/a&gt;&lt;/li&gt;                        &lt;li&gt;&lt;a href=&quot;https://sspai.com/&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;少数派&lt;/a&gt;&lt;/li&gt;                        &lt;li&gt;&lt;a href=&quot;https://zh.wikihow.com/&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;WikeHom&lt;/a&gt;&lt;/li&gt;                        &lt;li&gt;&lt;a href=&quot;https://www.awesomes.cn/rank?sort=hot&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;前端趋势&lt;/a&gt;&lt;/li&gt;                        &lt;li&gt;&lt;a href=&quot;https://github-trending.com/&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;GitHub趋势&lt;/a&gt;&lt;/li&gt;                        &lt;li&gt;&lt;a href=&quot;https://www.tiobe.com/&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;编程趋势&lt;/a&gt;&lt;/li&gt;                        &lt;li&gt;&lt;a href=&quot;https://trends.google.com/&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;Google趋势&lt;/a&gt;&lt;/li&gt;                    &lt;/ul&gt;                &lt;/div&gt;            &lt;/div&gt;            &lt;div class=&quot;col s12 m6 l4 friend-div&quot; data-aos=&quot;zoom-in-up&quot;&gt;                &lt;div class=&quot;card&quot;&gt;                    &lt;div class=&quot;jj-list-tit&quot;&gt;搜索 · 其他&lt;/div&gt;                    &lt;ul class=&quot;jj-list-con&quot;&gt;                        &lt;li&gt;&lt;a href=&quot;https://ac.scmor.com/&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;谷歌镜像&lt;/a&gt;&lt;/li&gt;                        &lt;li&gt;&lt;a href=&quot;http://www.pansoso.com/&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;网盘搜索&lt;/a&gt;&lt;/li&gt;                        &lt;li&gt;&lt;a href=&quot;http://tool.mkblog.cn/music/&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;音乐搜索&lt;/a&gt;&lt;/li&gt;                        &lt;li&gt;&lt;a href=&quot;https://www.dytt8.net/&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;电影天堂&lt;/a&gt;&lt;/li&gt;                        &lt;li&gt;&lt;a href=&quot;https://carbon.now.sh/&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;代码图片&lt;/a&gt;&lt;/li&gt;                        &lt;li&gt;&lt;a href=&quot;https://www.zhipin.com/&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;Boos&lt;/a&gt;&lt;/li&gt;                        &lt;li&gt;&lt;a href=&quot;https://fontawesome.com/&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;图标库&lt;/a&gt;&lt;/li&gt;                        &lt;li&gt;&lt;a href=&quot;https://www.qvdv.com/tools/qvdv-guid.html&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;在线工具&lt;/a&gt;                        &lt;/li&gt;                        &lt;li&gt;&lt;a href=&quot;http://zhongguose.com/&quot; class=&quot;link-3&quot; target=&quot;_blank&quot;&gt;中国色&lt;/a&gt;&lt;/li&gt;                    &lt;/ul&gt;                &lt;/div&gt;            &lt;/div&gt;        &lt;/div&gt;        &lt;script&gt; /*选择搜索引擎*/ $(&#39;.Select-box ul&#39;).hover(function () { $(this).css(&#39;height&#39;, &#39;auto&#39;) }, function () { $(this).css(&#39;height&#39;, &#39;40px&#39;) }); $(&#39;.Select-box-2 ul&#39;).hover(function () { $(this).css(&#39;height&#39;, &#39;auto&#39;) }, function () { $(this).css(&#39;height&#39;, &#39;46px&#39;) }); $(&#39;.Select-box li&#39;).click(function () { var _tihs = $(this).attr(&#39;class&#39;); var _html = $(this).html(); if (_tihs == &#39;baidu_s&#39;) { _tihs = &#39;https://www.baidu.com/s&#39;; _name = &#39;wd&#39;; } if (_tihs == &#39;google_s&#39;) { _tihs = &#39;https://www.google.com/search&#39;; _name = &#39;q&#39;; } if (_tihs == &#39;bing_s&#39;) { _tihs = &#39;https://www.bing.com/search&#39;; _name = &#39;q&#39;; } $(&#39;.baidu form&#39;).attr(&#39;action&#39;, _tihs); $(&#39;.this_s&#39;).html(_html); $(&#39;#kw&#39;).attr(&#39;name&#39;, _name); $(&#39;.Select-box ul&#39;).css(&#39;height&#39;, &#39;40px&#39;) }); $(&#39;.Select-box-2 li&#39;).click(function () { var _tihs = $(this).attr(&#39;class&#39;); var _html = $(this).html(); if (_tihs == &#39;baidu_s&#39;) { _tihs = &#39;https://www.baidu.com/s&#39;; _name = &#39;wd&#39;; } if (_tihs == &#39;google_s&#39;) { _tihs = &#39;https://www.google.com/search&#39;; _name = &#39;q&#39;; } if (_tihs == &#39;bing_s&#39;) { _tihs = &#39;https://www.bing.com/search&#39;; _name = &#39;q&#39;; } $(&#39;.baidu form&#39;).attr(&#39;action&#39;, _tihs); $(&#39;.this_s&#39;).html(_html); $(&#39;#kw-2&#39;).attr(&#39;name&#39;, _name); $(&#39;.Select-box-2 ul&#39;).css(&#39;height&#39;, &#39;48px&#39;) }); //清空输入框内容 $(&#39;.qingkong&#39;).click(function () { cls(); $(this).css(&#39;display&#39;, &#39;none&#39;) }); function cls() { var sum = 0; var t = document.getElementsByTagName(&quot;INPUT&quot;); for (var i = 0; i &lt; t.length; i++) { if (t[i].type == &#39;text&#39;) { ++sum; t[i].value = &quot;&quot;;//清空 } } } //清空输入框按钮的显示和隐藏 function if_btn() { var btn_obj = document.getElementById(&quot;kw&quot;) || document.getElementById(&quot;kw-2&quot;); var cls_btn = document.getElementById(&quot;qingkong&quot;); var btn_obj_val; var times; //当元素获得焦点时 if (btn_obj == &#39;&#39; || btn_obj == null) { return false; //如果没有找到这个元素，则将函数返回，不继续执行 } btn_obj.onfocus = function () { times = setInterval(function () { btn_obj_val = btn_obj.value; if (btn_obj_val != 0) { cls_btn.style.display = &quot;block&quot;; } else { cls_btn.style.display = &quot;none&quot;; } }, 200); } //元素失去焦点时 btn_obj.onblur = function () { clearInterval(times); } } &lt;/script&gt;    &lt;/div&gt;&lt;/div&gt;&lt;style&gt;    * {        margin: 0;        padding: 0;        font-family: &quot;微软雅黑&quot;    }    ul,li,h1,h2,h3,h4,h5,h6,p,form,dl,dt,dd {        margin: 0px;        padding: 0px;        font-size: 14px;        font-weight: normal;    }    img {        border-style: none;    }    li {        list-style: none;        float: left    }    a {        text-decoration: none    }    .card {        background-color: rgba(25, 240, 229, 0);        width: 96%;        margin-left: 2%    }    .baidu {        float: left;        margin-left: 100px;    }    .baidu form {        position: relative    }    .Select-box ul {        height: 40px;        position: absolute;        left: -1px;        top: 0px;        z-index: 9999;        background: #FFF;        border: 1px solid #ccc;        border-top: none;        overflow: hidden    }    .Select-box li {        width: 60px;        line-height: 40px;        font-size: 14px;        color: #484848;        border: 0;        cursor: pointer;    }    .Select-box li:hover {        background: #3385ff;        color: #FFF;    }    .Select-box .this_s {        color: #317ef3;    }    .Select-box .this_s:hover {        background: #FFF;        color: #317ef3;    }    .qingkong {        position: absolute;        right: 120px;        top: 12px;        width: 18px;        height: 18px;        background: rgba(0, 0, 0, 0.1);        border-radius: 18px;        line-height: 16px;        color: #666666;        cursor: pointer;        text-align: center;        font-size: 14px;        display: none;    }    .qingkong:hover {        background: rgba(0, 0, 0, 0.2);    }    .qingkong:active {        background: rgba(0, 0, 0, 0.3);    }    .baidu-2 {        width: 100%;        height: 110px;        margin: 0 auto;        background: none;        padding-top: 50px;    }    .baidu-2 form {        width: 520px;        margin: 0 auto;    }    .baidu-2 input {        padding: 13px 8px;        opacity: 0.9;        font-size: 15px;    }    #Select-2 {        float: left;    }    .Select-box-2 {        text-align: center;        float: left;        position: relative;    }    .Select-box-2 ul {        height: 46px;        position: absolute;        left: 0px;        top: 1px;        z-index: 9999;        background: rgba(255, 255, 255, 0.9);        border: 1px solid #ccc;        border-top: none;        overflow: hidden    }    .Select-box-2 li {        width: 60px;        line-height: 46px;        font-size: 15px;        color: #484848;        border: 0;        cursor: pointer;    }    .Select-box-2 li:hover {        background: #3385ff;        color: #FFF;    }    .Select-box-2 .this_s {        color: #317ef3;    }    .Select-box-2 .this_s:hover {        background: none;        color: #317ef3;    }    #kw-2 {        width: 335px;        outline: 0;        border: 1px solid #ccc;        background: rgba(255, 255, 255, 0.2);        color: #000000;        padding-left: 70px;        font-weight: bold;    }    /*修改搜索框样式*/    #su-2 {        width: 90px;        background: blue;        border: none;        border-top: #3385ff 1px solid;        border-bottom: 1px solid #2d78f4;        color: #FFF;        cursor: pointer;        /*去轮廓阴影*/        outline: none;    }    /*光标移动到搜索框颜色*/    #su-2:hover {        background: blue;        border-bottom: 1px solid blue;    }    #su-2:active {        background: blue;        box-shadow: inset 1px 1px 3px blue;        -webkit-box-shadow: inset 1px 1px 3px blue;    }    .jj-list-tit {        font-size: 16px;        line-height: 25px;        color: #ffffff;        width: 100%;        padding-left: 38.5%;    }    .jj-list-con {        overflow: hidden;        margin: 0 auto    }    /*控制网站列表间距*/    .jj-list-con li {        width: 31.333%;        margin: 1%;    }    .link-3 {        display: block;        background: rgba(0, 0, 0, .35);        color: #FFF;        font-size: 13px;        text-align: center;        line-height: 35px;        padding: 4px 0;        border-radius: 2px;        transition: all 0.2s    }    .link-3:hover {        background: rgba(0, 0, 0, .45);        font-size: 15px;        font-weight: bold    }    /*1栏 小于584*/    @media only screen and (max-width: 584px) {        .navi-height {            height: 1300px;        }        .link-box {            margin-top: 5%;        }        .large-screen {            display: none;        }    }    /* 2栏 大于584 小于993px */    @media only screen and (min-width: 584px) and (max-width: 993px) {        .navi-height {            height: 800px;        }        .link-box {            margin-top: 5%;        }        .large-screen {            display: none;        }    }    /*3栏 大于993px*/    @media only screen and (min-width: 993px) {        .navi-height {            position: absolute;            width: 100%;            height: 100%;        }    }    /* 隐藏footer */    .page-footer {        display: none;    }&lt;/style&gt;&lt;% if (theme.banner.enable) { %&gt;    &lt;script&gt;        // 每天切换 banner 图.  Switch banner image every day.        $(&#39;.bg-cover&#39;).css(&#39;background-image&#39;, &#39;url(&lt;%- theme.jsDelivr.url %&gt;&lt;%- url_for(&#39;/medias/banner/&#39; + new Date().getDay() + &#39;.jpg&#39;) %&gt;)&#39;);    &lt;/script&gt;&lt;% } else { %&gt;    &lt;script&gt;        $(&#39;.bg-cover&#39;).css(&#39;background-image&#39;, &#39;url(&lt;%- theme.jsDelivr.url %&gt;&lt;%- url_for(&#39;/medias/banner/0.jpg&#39;) %&gt;)&#39;);    &lt;/script&gt;&lt;% } %&gt;</code></pre><h2 id="然后执行相关的本地预览和部署命令查看效果即可"><a href="#然后执行相关的本地预览和部署命令查看效果即可" class="headerlink" title="然后执行相关的本地预览和部署命令查看效果即可."></a>然后执行相关的本地预览和部署命令查看效果即可.</h2><h1 id="详细资料可以看大佬的博客："><a href="#详细资料可以看大佬的博客：" class="headerlink" title="详细资料可以看大佬的博客："></a>详细资料可以看大佬的博客：</h1><h2 id="参考："><a href="#参考：" class="headerlink" title="参考："></a>参考：</h2><p><a href="https://mobaijun.com/posts/2328089344.html" target="_blank" rel="noopener">https://mobaijun.com/posts/2328089344.html</a></p><p><a href="https://yafine-blog.cn/posts/e925.html" target="_blank" rel="noopener">https://yafine-blog.cn/posts/e925.html</a></p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> matery主题 </tag>
            
            <tag> 博客优化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>详解chm文件怎么打开</title>
      <link href="/p/ecd1.html"/>
      <url>/p/ecd1.html</url>
      
        <content type="html"><![CDATA[<p>chm文件也就是我们使用的windows操作系统中的帮助文件，很多用户不知道chm文件怎么打开，为了方便各位能够查看chm文件，下面小编就来告诉你chm文件怎么打开。</p><p>为了让很多新手用户能够快速的上手windows操作系统，微软精心的编写了以chm文件格式的windows操作系统帮助文件，有些用户不知道怎么打开chm文件，那就来看看小编的方法吧！</p><h2 id="chm文件怎么打开"><a href="#chm文件怎么打开" class="headerlink" title="chm文件怎么打开"></a>chm文件怎么打开</h2><ul><li><p>1.找到需要打开的chm文件，鼠标右键该文件，点击打开方式选项，进入下一步。<br><img src="https://gitee.com/badenough/blogImage/raw/master/img/fd6.png" alt="打开chm电脑图解1"></p></li><li><p>2.在弹出的界面中，点击浏览按钮，进入下一步。<br><img src="https://gitee.com/badenough/blogImage/raw/master/img/22a.png" alt="打开chm电脑图解2"></p></li><li><p>3.点击C盘，然后选择windows文件夹打开，进入下一步。<br><img src="https://gitee.com/badenough/blogImage/raw/master/img/1d.png" alt="打开chm电脑图解3"></p></li><li><p>4.在windows文件夹中找到hh.exe文件，然后点击打开，进入下一步。<br><img src="https://gitee.com/badenough/blogImage/raw/master/img/bd.png" alt="打开chm电脑图解4"></p></li><li><p>5.勾选打开方式窗口下方的“始终使用选择的程序打开”勾选上，然后点击确定按钮即可。<br><img src="https://gitee.com/badenough/blogImage/raw/master/img/35e6e426.png" alt="打开chm电脑图解5"></p></li><li><p>6.这时chm文件就可以打开了。<br><img src="https://gitee.com/badenough/blogImage/raw/master/img/b735e7.png" alt="打开chm电脑图解6"></p></li></ul><p>以上就是chm文件的打开方法了，你学会了吗?</p>]]></content>
      
      
      <categories>
          
          <category> 分享推荐 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> chm文件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>日记（5月7日）</title>
      <link href="/p/bb29.html"/>
      <url>/p/bb29.html</url>
      
        <content type="html"><![CDATA[<h1 id="前奏"><a href="#前奏" class="headerlink" title="前奏"></a>前奏</h1><p>好久没有写日记了，今天有空写一下，明天就要上学了，感觉有点开心，又有点内心的难过，不知道为什么？但是也有可能是不想走了吧！今年因为一个病毒的原因就让我们多放了好长时间，我现在都大三了，再不学习就没有时间学习了。要进入社会了，以后再也不可能去学校学习了。</p><p>由于我家的背景，我也不大可能去读研究生，我们家不是很富裕甚至是有点贫穷的，由于我爸妈的离异，我妈一个人带着我和我弟长大，所以一直我们家都不是很富裕的，以前我们和舅舅的关系较好，所以一直住在舅舅家，但是现在关系也不好了，由于舅妈的不知道什么原因！</p><p>没有办法，只能这样了，但是现在感觉也还可以吧！不是那么艰难了。</p><h1 id="伴奏"><a href="#伴奏" class="headerlink" title="伴奏"></a>伴奏</h1><p>现在的日子过的已经有点麻木了，由于我一直在家里呆着，不出去！只是因为我知道，出去几乎是要花钱的，由于我在服务器上也要花钱，所以我就要更加的省钱。钱以前还是可以赚不少的在学校里：什么家教，勤工俭学等的，我在学校里干的还是很多的，勤工俭学，其实也是蛮好的，我在那里还认识了好多人，如果没有这个我也不可能认识他们的。</p><p>现在状态还可以了，除了目前的固定支出：手机话费，服务器费用，域名费用，吃喝住行的费用。大概一个月1000元左右。还是可以勉强撑过去的。如果我不去买一些电脑、手机相关的东西，应该是绝对可以的，没有什么大的压力。我的话费和服务器大概一个月就要179元，这个是不可能节省的。</p><p>没有什么事情是可以将一个人逼死的，除了你自己真的不想活了，那是谁都救不了你的了。</p><h1 id="结尾"><a href="#结尾" class="headerlink" title="结尾"></a>结尾</h1><p>明天就要上学了，前途就在前方，只要目标坚定，剩下的就只有风雨兼行了。走还是要走的。不管什么时候都一样，只有出去才会有更大的世界，更大的未来。</p><p>如果一味的在家里，那前途都没有了，你的人生将没有任何意义！！</p>]]></content>
      
      
      <categories>
          
          <category> 随笔录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日常生活 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hugo+github博客搭建教程！</title>
      <link href="/p/af9e.html"/>
      <url>/p/af9e.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://gitee.com/badenough/blogImage/raw/master/img/314.png" alt=""></p><h1 id="什么是hugo"><a href="#什么是hugo" class="headerlink" title="什么是hugo"></a>什么是hugo</h1><blockquote><p>Hugo是由Go语言实现的静态网站生成器。简单、易用、高效、易扩展、快速部署。对比Hexo，Hugo仅需一个二进制文件（hugo.exe）即可实现网站生成的生成。</p></blockquote><p>而且就如它官网介绍：<code>The world’s fastest framework for building websites</code>。</p><p>Hugo是目前最快的网站构建框架。凭借其惊人的速度和灵活性，解决了环境依赖、性能较差的问题，还有使用简单、部署方便等诸多优点，通过 LiveReload 实时刷新，极大的优化文章的写作体验。Hugo使建站再次变得有趣。</p><h1 id="hugo能做什么"><a href="#hugo能做什么" class="headerlink" title="hugo能做什么"></a>hugo能做什么</h1><p>hugo是静态网站生成器，能够作为一些展示类网站的解决方案。比如个人博客、产品介绍、个人作品展示、文档介绍、公司官网等等。再加上Github Pages的功能，就能不花一分钱建一个自己的网站了。</p><h2 id="下载安装hugo"><a href="#下载安装hugo" class="headerlink" title="下载安装hugo"></a>下载安装hugo</h2><p>我们为了简便快速当然选择hugo的二进制安装方式，源码安装有机会再去学习。</p><p>去hugo的官方github仓库<code>github.com/gohugoio/hugo/releases</code>下载对应的操作系统版本的Hugo二进制文件：</p><p><img src="https://gitee.com/badenough/blogImage/raw/master/img/dab.jpeg" alt=""></p><p>博主以<code>Windows64</code>位操作系统为例，下载对应的<code>Windows-64bit.zip</code>。</p><p>下载完成后解压缩。</p><p>Mac下直接使用Homebrew安装：(其他步骤同理略)</p><pre><code>brew install hugo</code></pre><h2 id="hugo环境变量配置"><a href="#hugo环境变量配置" class="headerlink" title="hugo环境变量配置"></a>hugo环境变量配置</h2><p>上一步操作，可以看到我们把hugo.exe解压到了D:\hugo下面。所以hugo命令只能在该目录下才能识别。但是我们想要把博客目录建到其他目录下，这就需要配置环境变量。</p><ul><li><p>此电脑-&gt;右键-&gt;点击属性：</p></li><li><p>再点击高级系统设置.</p></li><li><p>点击环境变量</p></li><li><p>在系统变量中找到<code>path</code>，再点击编辑</p></li><li><p>点击新建，填入<code>hugo</code>解压的文件目录，比如博主解压在<code>D:\hugo</code>就填的是<code>D:\hugo</code></p></li></ul><p>注意：win10以下系统界面不一样，比如win7，直接在path最前或最后加入地址就行，注意用英文;分号分割开，不会的小白可以问度娘。配置好后点击确定，然后打开cmd命令行程序就可以在任意位置使用hugo命令了。</p><h3 id="hugo新建博客"><a href="#hugo新建博客" class="headerlink" title="hugo新建博客"></a>hugo新建博客</h3><p>win+R键打开运行框，输入cmd打开命令行。</p><p>使用如下命令:</p><pre><code>hugo new site /path/to/site</code></pre><p>比如<code>hugo new site E:/hugo/hojunBlog</code>就在E盘hugo文件夹下新建了一个叫<code>思空の笔记</code>的hugo站点。</p><h3 id="hugo新建页面和文章"><a href="#hugo新建页面和文章" class="headerlink" title="hugo新建页面和文章"></a>hugo新建页面和文章</h3><p>新建一个links页面：</p><pre><code>hugo new link.md</code></pre><p><code>links.md</code> 自动生成到了 <code>content/links.md</code>，内容如下</p><p>创建第一篇文章，放到 post 目录，方便之后生成聚合页面。</p><pre><code>hugo new post/myfirst.md</code></pre><p>myfirst.md 自动生成到了 <code>content/post/myfirst.md</code><br>(注意这里需要把draft删除掉，不然正式生产的时候不会生成文章，因为draft是草稿)</p><h2 id="hugo安装主题"><a href="#hugo安装主题" class="headerlink" title="hugo安装主题"></a>hugo安装主题</h2><p>新建文章后不要着急，还需要安装hugo主题才行。去官方主题列表<code>themes.gohugo.io</code>里去挑选自己想要的主题。</p><p>我们这里以icarus主题为例来安装主题。</p><p>github仓库地址<code>github.com/digitalcraftsman/hugo-icarus-theme</code></p><h2 id="根据文档clone主题"><a href="#根据文档clone主题" class="headerlink" title="根据文档clone主题"></a>根据文档clone主题</h2><p>在Hugo站点运行的文件夹中</p><pre><code>cd themesgit clone https://github.com/digitalcraftsman/hugo-icarus-theme.git</code></pre><h2 id="配置主题"><a href="#配置主题" class="headerlink" title="配置主题"></a>配置主题</h2><p>找到icarus主题下的<code>SIKONGBlog\themes\hugo-icarus-theme\exampleSite\config.toml</code></p><p>复制其内容到根目录下的<code>SIKONGBlog\config.toml</code>中，接着修改根目录下的配置文件部分内容如下：</p><p><img src="https://gitee.com/badenough/blogImage/raw/master/img/64a.png" alt=""></p><p>其中重要的是<code>baseurl、theme、themesDir</code>的配置，其他的配置可以之后慢慢设置。</p><p>baseurl需要改成你的github pages的仓库名，theme、themesDir改成主题目录名和主题路径。</p><p>其他配置可以参考icarus主题的文档，这里就不做介绍了。</p><p>使用命令来预览、发布主题</p><p>在根目录（比如这里是hojunBlog下）执行：</p><pre><code>hugo server</code></pre><p>然后打开浏览器，输入localhost:1313就可以看到自己的博客了！（注意之前说的文章里的draft:true要删掉哦）</p><p>接着就是要发布主题到github上了，注册github，新建yourname.github.io的仓库（这里和下面的yourname改你注册的用户名），配置SSH，复制仓库的github pages地址到之前说的配置的baseurl中(就是yourname.github.io)，</p><blockquote><p>这些步骤不会的可以去查看博主的hexo的github配置教程，是一样的。</p></blockquote><p>最后然后使用命令：</p><pre><code>hugo</code></pre><p>就可以发布到github上，通过yourname.github.io访问你的博客了！</p><p>The End</p><p>hugo搭建博客教程就到这里了，看到这里想必对hugo已经有一些了解。hugo和hexo谁更胜一筹呢？欢迎大家留言讨论～</p><p>这里就展示一下，我的其他hugo博客：<a href="https://www.ilovea.asia" target="_blank" rel="noopener">https://www.ilovea.asia</a></p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hugo博客 </tag>
            
            <tag> github </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>matery主题修改文章发布统计图的开始时间</title>
      <link href="/p/2b5c.html"/>
      <url>/p/2b5c.html</url>
      
        <content type="html"><![CDATA[<h2 id="先看图片："><a href="#先看图片：" class="headerlink" title="先看图片："></a>先看图片：</h2><p>我是从11月开始的，你也可以在下面把时间调的更后面。</p><p><img src="https://gitee.com/badenough/blogImage/raw/master/img/20200504093730.png" alt=""></p><p>那么，这个统计图的开始时间是如何计算的呢？下面我就简单的讲解下，我的JavaScript知识目前学的比较浅，献丑了。</p><p>这个实现的方法就是运用了JavaScript技术，使用的JS文件是moment.js，Moment.js是一个轻量级的JavaScript时间库，它方便了日常开发中对时间的操作，提高了开发效率。它也有中文网站，大家可以去看下，传送门，其中有一个函数方法，为subtract()，使用方法为：</p><p>说明：通过减去时间来改变原始的 moment。</p><pre><code class="Javascript">moment().subtract(Number, String);</code></pre><p>Number取值：0-10之间的数字，当为日期和月份传入小数时，它们会被四舍五入到最接近的整数。 星期、季度、年份会被转换到日期或月份，然后四舍五入到最接近的整数。</p><pre><code class="Javascript">moment().subtract(1.5, &#39;months&#39;) == moment().subtract(2, &#39;months&#39;)moment().subtract(.7, &#39;years&#39;) == moment().subtract(8, &#39;months&#39;) //.7*12 = 8.4，取整到 8</code></pre><p><strong>String</strong>取值：</p><ul><li>years（y）：年</li><li>quarters（Q）：季度</li><li>months（M）：月</li><li>weeks（w）：周</li><li>days（d）：日</li><li>hours（h）：时</li><li>minutes（m）：分</li><li>seconds（s）：秒</li><li>milliseconds（ms）：毫秒</li></ul><p>这段代码位置路径为<code>themes/matery/layout/_widget/post-charts.ejs</code>，大约在39行左右，源文件的代码为：</p><pre><code class="Javascript">var startDate = moment().subtract(1, &#39;years&#39;).startOf(&#39;month&#39;);</code></pre><p>说明：</p><ul><li><p>startDate变量为开始时间，也就是文章发布统计图中X轴中的开始时间</p></li><li><p>subtract(Number, String)，以上面的代码为例，今年为2020年04月，通过moment().subtract(1, ‘years’).startOf(‘month’)进行时间的更改，更改为了2019年04月，也就是图中所显示的效果</p></li><li><p>startOf(‘month’)，通过将原始的 moment 设置为时间单位的开头来对其进行更改。这里只能是以月份开头，因为源文件设置的时间显示格式就是年份-月份。</p></li></ul><p>简单的举几个官方文档所展示的例子：</p><pre><code>moment().startOf(&#39;year&#39;);    // 设置为今年一月1日上午 12:00moment().startOf(&#39;month&#39;);   // 设置为本月1日上午 12:00moment().startOf(&#39;quarter&#39;);  // 设置为当前季度的开始，即每月的第一天上午 12:00moment().startOf(&#39;week&#39;);    // 设置为本周的第一天上午 12:00moment().startOf(&#39;isoWeek&#39;); // 根据 ISO 8601 设置为本周的第一天上午 12:00moment().startOf(&#39;day&#39;);     // 设置为今天上午 12:00moment().startOf(&#39;date&#39;);     // 设置为今天上午 12:00moment().startOf(&#39;hour&#39;);    // 设置为当前时间，但是 0 分钟、0 秒钟、0 毫秒moment().startOf(&#39;minute&#39;);  // 设置为当前时间，但是 0 秒钟、0 毫秒moment().startOf(&#39;second&#39;);  // 与 moment().milliseconds(0); 相同</code></pre><blockquote><p>更多的使用方法，自己去官方网站查询吧！<a href="http://momentjs.cn/docs" target="_blank" rel="noopener">http://momentjs.cn/docs</a></p></blockquote><p>直接上修改方法：</p><p>将源文件中的代码由原来的</p><pre><code class="Javascript">var startDate = moment().subtract(1, &#39;years&#39;).startOf(&#39;month&#39;);</code></pre><p>改为：</p><pre><code class="Javascript">var startDate = moment().subtract(6, &#39;months&#39;).startOf(&#39;month&#39;);</code></pre><blockquote><p>注意：记得将subtract(6, ‘months’)中的参数进行修改，根据你的首次文章发布时间进行修改，可能我的发布时间不一致，我的首篇文章发时间为2019-10，而现在的时间为2020-04，所以我的参数修改为了如上代码所显示的修改后的效果如下图</p></blockquote><p>小伙伴们，看着教程自己动手去实践操作一下吧，看是否能够修改成功，如果失败，请在下方评论区留言，看到后，我会第一时间回复！</p><p>更多修改可以看大佬的：<a href="https://yafine-blog.cn/posts/b93d.html" target="_blank" rel="noopener">过客~励志</a></p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> matery主题 </tag>
            
            <tag> 博客优化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nginx如何正确配置https</title>
      <link href="/p/7670.html"/>
      <url>/p/7670.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>在web应用开发中，为保证前端访问后端服务器的安全，需要使用https连接，现在来聊一下如何在nginx中配置https.</p></blockquote><h2 id="首先"><a href="#首先" class="headerlink" title="首先"></a>首先</h2><p>需要申请ssl证书。</p><p>在阿里云，腾讯云，华为云等云服务提供商的网站一般都会有免费ssl证书，申请一个即可；下面以免费SSL例：如果想要的点击这里：<a href="https://www.mianfeissl.com/" target="_blank" rel="noopener">传送门</a></p><ul><li>按照步骤一步一步来就好了。</li></ul><p>下载证书，会得到 域名.key和 域名.crt两个文件；</p><p>在与nginx.conf同目录下创建ssl文件夹(名字任意), 把这两个证书放入刚创建的文件夹中；<br>这里你随意放就是后面目录正确就可以了。</p><p>在nginx.conf的server中增加如下配置:</p><pre><code>server {    listen                        443;    server_name                   www.test.com # 域名                ssl                           on;  # 启用ssl功能                ssl_certificate               ssl/server.crt;                 ssl_certificate_key           ssl/server.key;                ssl_session_timeout           5m;        # 客户端可以重用会话参数的时间    ssl_protocols                 TLSv1 TLSv1.1 TLSv1.2;    # 使用的协议            ssl_ciphers                   ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE;    # 配置加密套件        ssl_prefer_server_ciphers     on;       ...    }</code></pre><h2 id="配置："><a href="#配置：" class="headerlink" title="配置："></a>配置：</h2><p>在配置443端口之前，需要先打开防火墙和443端口，以Centos7为例:</p><pre><code>1) 开启防火墙:     systemctl start firewalld     查看防火墙状态:    systemctl status firewalld    2) 查看开通了哪些端口: firewall-cmd --list-ports 3) 开通443端口: firewall-cmd --zone=public --add-port=443/tcp --permanent 4) 重新加载下防火墙配置: firewall-cmd --reload注意: 如果还有其它应用在运行，开启防火墙后，需要开通相应的端口，否则不能访问。</code></pre><p>这里如果你实在是不知道的，你也可以直接去服务器管理页面添加：安全组中的规则：</p><p>将443端口打开就可以了。</p><p>80端口重定向至443端口的配置，在nginx.conf的server上面增加如下的server:</p><pre><code>server {    listen 80;    server_name www.test.com;    rewrite ^(.*)$ https://www.test.com$1 permanent; }</code></pre><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><pre><code>http{    #http节点中可以添加多个server节点    server{        #监听443端口        listen 443;        #对应的域名，把baofeidyz.com改成你们自己的域名就可以了        server_name baofeidyz.com;        ssl on;        #从腾讯云获取到的第一个文件的全路径        ssl_certificate /etc/ssl/1_baofeidyz.com_bundle.crt;        #从腾讯云获取到的第二个文件的全路径        ssl_certificate_key /etc/ssl/2_baofeidyz.com.key;        ssl_session_timeout 5m;        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE;        ssl_prefer_server_ciphers on;        #这是我的主页访问地址，因为使用的是静态的html网页，所以直接使用location就可以完成了。        location / {                #文件夹                root /usr/local/service/ROOT;                #主页文件                index index.html;        }    }    server{        listen 80;        server_name baofeidyz.com;        rewrite ^/(.*)$ https://baofeidyz.com:443/$1 permanent;    }}</code></pre><h2 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h2><p>验证配置是否正确:</p><p>万事俱备，只欠重启。</p><pre><code>/usr/local/nginx/sbin/nginx</code></pre><p>执行 <code>/usr/sbin/nginx -t</code></p><p>返回如下信息则表示配置成功:</p><pre><code>nginx: the configuration file /etc/nginx/nginx.conf syntax is oknginx: configuration file /etc/nginx/nginx.conf test is successful</code></pre><p>这样就可以了，之后你重新启动一下nginx就完成了。看到你的网站上有一个小锁了吗？</p><p>什么你告诉我你不知道怎么重启：</p><p><code>nginx -s reload</code></p><p>这样就好了。完成！！</p>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> https </tag>
            
            <tag> ssl </tag>
            
            <tag> 配置 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>html 表格单元格的宽度和高度的设置</title>
      <link href="/p/ad4b.html"/>
      <url>/p/ad4b.html</url>
      
        <content type="html"><![CDATA[<h1 id="html-表格单元格的宽度和高度的设置"><a href="#html-表格单元格的宽度和高度的设置" class="headerlink" title="html 表格单元格的宽度和高度的设置"></a>html 表格单元格的宽度和高度的设置</h1><p>做网页的时候，经常会碰到表格宽度对不齐的问题。详细地看了html中表格标签table的高度和宽度设置的细节，现总结如下：</p><h2 id="1、table中的width和height设置及其作用："><a href="#1、table中的width和height设置及其作用：" class="headerlink" title="1、table中的width和height设置及其作用："></a>1、table中的width和height设置及其作用：</h2><p>table中设置的height其实是设置个最小值，也就是当表格中的内容或者行高总值超过这个设置值时，会自动延长表格的height值，当表格中的内容或者行高没有达到这个值时，会自动扩大到这个值。</p><p>table中设置的width值一般为表格宽度的最大值，不能改变，即使内部的内容宽度超过也不能改变。（这个内部内容如果是图片的话是可以改变表格宽度的。）</p><h2 id="2、tr标签中width和height设置及其作用："><a href="#2、tr标签中width和height设置及其作用：" class="headerlink" title="2、tr标签中width和height设置及其作用："></a>2、tr标签中width和height设置及其作用：</h2><p>tr标签里面的width设置不起任何作用，因为从第一点可以看出，表格的width是不能改变的，tr标签当然就不起作用了。所以在tr中只有讨论height设置的可能了，tr中的height设置和几个tr之间的设置有关。</p><p>当几个tr都设置了height的具体数值时，各个tr的height按照设置的值的比例来分配总的height值，注意这里说的是总的height值。</p><p>当几个tr都没有设置height具体值时，平均分配总的height值。当有的tr设置了具体的数值，有的没有设置具体的数值为默认时，先保证各个tr的基本需要，剩下的再满足设置了具体值的tr，之后再全部给没有设置具体值的tr。</p><p>最后一种情况还要考虑总的宽度不够tr总的设置值的情况，不够的话要满足tr的基本需要，这里会自动延长表格的height的。然后再考虑设置了heightr的tr，最后考虑没有设置height的tr。</p><h2 id="3、td标签中width和height设置及其作用："><a href="#3、td标签中width和height设置及其作用：" class="headerlink" title="3、td标签中width和height设置及其作用："></a>3、td标签中width和height设置及其作用：</h2><p>td标签里面的width和height都是起作用的。</p><p>先看td的width吧，某一个td的width是和所处的一列每个td的width都相关的，取其中最大的width作为这一列中每个td的width，这点是让我们最混淆的地方，一定要从全局把握某个td的width，不能从这一个的width设置就断言它的宽度就是多少，这样是不准确的。</p><p>当我们把每一列的宽度都弄清楚之后，事情就好办了。这时候各个td之间的宽度分配按照第二条中各 tr的height分配规律，有一点不同的是全部是默认的情况下，各td的width不是平均分配，而是根据各自的实际内容按比例分配。</p><p>再看看td的height设置吧，这个相对简单一点了，不过各个td的height要看这个td所在的行的最大高度来确定这一行的每个td的height，然后各个行的高度情况和tr中的height分配原则是一样的。</p><p>还有一点要注意，就是td的height和tr的height之间的关系。首先肯定是根据内容的需 要，在这个基础上，再根据设置的值来确定，哪个设置的值大就按照哪个，如果一个设置了值一个没有设置值，那么按照设置值的算。</p><h1 id="具体例子："><a href="#具体例子：" class="headerlink" title="具体例子："></a>具体例子：</h1><pre><code>1,使用传统的方法&lt;table width=&quot;400&quot;&gt;&lt;tr&gt;&lt;td width=&quot;100&quot;&gt;&lt;/td&gt;&lt;td width=&quot;100&quot;&gt;&lt;/td&gt;&lt;td width=&quot;100&quot;&gt;&lt;/td&gt;&lt;td width=&quot;100&quot;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;table&gt;2,使用css&lt;style&gt;.td{width:100px;}&lt;/style&gt;&lt;table width=&quot;400&quot;&gt;&lt;tr&gt;&lt;td class=&quot;td&quot;&gt;&lt;/td&gt;&lt;td class=&quot;td&quot;&gt;&lt;/td&gt;&lt;td class=&quot;td&quot;&gt;&lt;/td&gt;&lt;td class=&quot;td&quot;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;table&gt;以上两种方法可能出现的问题就是,如果内容超过设定,如图片宽度大于100,会自然撑开,自动调节表格宽度3,用css&lt;style&gt;.td{width:100px;overflow:hidden}&lt;/style&gt;&lt;table width=&quot;400&quot;&gt;&lt;tr&gt;&lt;td class=&quot;td&quot;&gt;&lt;/td&gt;&lt;td class=&quot;td&quot;&gt;&lt;/td&gt;&lt;td class=&quot;td&quot;&gt;&lt;/td&gt;&lt;td class=&quot;td&quot;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;table&gt;用这种方法,可以把超过的部分隐藏掉,如果需要严格控制的话,可以采用这种方法,如果把overflow的属性值设置成scroll或者auto的话,可以在超过的时候使用滚动条调节....</code></pre>]]></content>
      
      
      <categories>
          
          <category> 分享推荐 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> html </tag>
            
            <tag> 表格 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>html 漂亮分割线</title>
      <link href="/p/688d.html"/>
      <url>/p/688d.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>我用的编辑器是eclipse，这个根据个人喜好来定，用什么都无所谓的，就算你直接用txt也照样能实现这里的效果，毕竟只是静态。</p></blockquote><h1 id="第一种："><a href="#第一种：" class="headerlink" title="第一种："></a>第一种：</h1><pre><code>&lt;hr style=&quot; height:2px;border:none;border-top:2px dotted #185598;&quot; /&gt;height:2px;是hr的高度border:none;是没有边框border-top:2px dotted #185598;是设置横线的样式dotted  虚线  #185598  颜色</code></pre><h1 id="第二种："><a href="#第二种：" class="headerlink" title="第二种："></a>第二种：</h1><p><code>&lt;hr style=&quot;height:1px;border:none;border-top:1px dashed #0066CC;&quot; /&gt;</code></p><h1 id="第三种："><a href="#第三种：" class="headerlink" title="第三种："></a>第三种：</h1><p><code>&lt;hr style=&quot;height:1px;border:none;border-top:1px solid #555555;&quot; /&gt;</code></p><h1 id="第四种："><a href="#第四种：" class="headerlink" title="第四种："></a>第四种：</h1><p><code>&lt;hr style=&quot;height:3px;border:none;border-top:3px double red;&quot; /&gt;</code></p><h1 id="第五种："><a href="#第五种：" class="headerlink" title="第五种："></a>第五种：</h1><p><code>&lt;hr style=&quot;height:5px;border:none;border-top:5px ridge green;&quot; /&gt;</code></p><h1 id="第六种："><a href="#第六种：" class="headerlink" title="第六种："></a>第六种：</h1><pre><code>&lt;hr style=&quot;height:10px;border:none;border-top:10px groove skyblue;&quot; /&gt;    border-top:10px groove skyblue;    groove  上颜色    skyblue   下颜色</code></pre><h1 id="第七种："><a href="#第七种：" class="headerlink" title="第七种："></a>第七种：</h1><p><code>&lt;hr style=&quot;margin:0px;background-color:#eee;height:0.5px;border:none;&quot; /&gt;</code></p><p>只要hr样式用的好，会让你的网页活灵活现的哦！</p>]]></content>
      
      
      <categories>
          
          <category> 分享推荐 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> html </tag>
            
            <tag> css </tag>
            
            <tag> 分割线 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo博客常用命令与部署问题解决</title>
      <link href="/p/5ef6.html"/>
      <url>/p/5ef6.html</url>
      
        <content type="html"><![CDATA[<h1 id="Contents"><a href="#Contents" class="headerlink" title="Contents"></a>Contents</h1><p>Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.</p><h1 id="hexo常用命令"><a href="#hexo常用命令" class="headerlink" title="hexo常用命令"></a>hexo常用命令</h1><p>初始化hexo</p><pre><code>$ hexo init dirname$ npm install</code></pre><p>创建新发布</p><pre><code>$ hexo new &quot;My New Post&quot;More info: Writing Writing-Chinese</code></pre><p>启动server</p><pre><code>$ hexo server</code></pre><p>或者</p><pre><code>$ hexo sMore info: Server</code></pre><p>生成静态文件</p><pre><code>$ hexo generate</code></pre><p>或者</p><pre><code>$ hexo gMore info: Generating</code></pre><p>部署到远程地址</p><pre><code>$ hexo deploy</code></pre><p>或者</p><pre><code>$ hexo d</code></pre><p>更换新的主题<br>克隆新的主题到theme目录</p><pre><code>$ git clone https://github.com/litten/hexo-theme-yilia.git themes/yilia</code></pre><p>打开_config.yaml把theme字段的值修改为刚才在theme目录里的主题名</p><pre><code>theme: yilia</code></pre><p>clear完以后重新部署</p><pre><code>$ hexo g$ hexo s$ hexo d</code></pre><p>使用MathJax 写公式示例</p><pre><code>$$frac{partial u}{partial t}= h^2 left( frac{partial^2 u}{partial x^2} +frac{partial^2 u}{partial y^2} +frac{partial^2 u}{partial z^2}right)$$</code></pre><p>效果:</p><pre><code>$$frac{partial u}{partial t}= h^2 left( frac{partial^2 u}{partial x^2} +frac{partial^2 u}{partial y^2} +frac{partial^2 u}{partial z^2}right)$$</code></pre><p>More info: MathJax</p><p>hexo部署问题<br>语言切换<br>在_config.yaml中修改language字段</p><pre><code>language: zh-Hans</code></pre><p>执行hexo g报错</p><pre><code>ERROR Script load failed: themes/next/scripts/tags/exturl.jsError: Cannot find module &#39;hexo-util&#39;    at Function.Module._resolveFilename (module.js:325:15)    at Function.Module._load (module.js:276:25)    at Module.require (module.js:353:17)    at require (/root/hexo/node_modules/hexo/lib/hexo/index.js:213:21)    at /root/hexo/themes/next/scripts/tags/exturl.js:8:12    at /root/hexo/node_modules/hexo/lib/hexo/index.js:229:12    at tryCatcher (/root/hexo/node_modules/hexo/node_modules/bluebird/js/release/util.js:16:23)    at Promise._settlePromiseFromHandler (/root/hexo/node_modules/hexo/node_modules/bluebird/js/release/promise.js:512:31)    at Promise._settlePromise (/root/hexo/node_modules/hexo/node_modules/bluebird/js/release/promise.js:569:18)    at Promise._settlePromise0 (/root/hexo/node_modules/hexo/node_modules/bluebird/js/release/promise.js:614:10)    at Promise._settlePromises (/root/hexo/node_modules/hexo/node_modules/bluebird/js/release/promise.js:693:18)    at Promise._fulfill (/root/hexo/node_modules/hexo/node_modules/bluebird/js/release/promise.js:638:18)    at Promise._resolveCallback (/root/hexo/node_modules/hexo/node_modules/bluebird/js/release/promise.js:432:57)    at Promise._settlePromiseFromHandler (/root/hexo/node_modules/hexo/node_modules/bluebird/js/release/promise.js:524:17)    at Promise._settlePromise (/root/hexo/node_modules/hexo/node_modules/bluebird/js/release/promise.js:569:18)    at Promise._settlePromise0 (/root/hexo/node_modules/hexo/node_modules/bluebird/js/release/promise.js:614:10)    at Promise._settlePromises (/root/hexo/node_modules/hexo/node_modules/bluebird/js/release/promise.js:693:18)    at Promise._fulfill (/root/hexo/node_modules/hexo/node_modules/bluebird/js/release/promise.js:638:18)    at /root/hexo/node_modules/hexo/node_modules/bluebird/js/release/nodeback.js:42:21    at /root/hexo/node_modules/hexo/node_modules/hexo-fs/node_modules/graceful-fs/graceful-fs.js:78:16    at FSReqWrap.readFileAfterClose [as oncomplete] (fs.js:380:3)</code></pre><p>解决办法:</p><pre><code>npm install -save-dev hexo-util</code></pre><p>启动失败<br>报错信息:</p><p>访问浏览器出现 cannot GET /<br>解决信息:</p><p>下面两步要一起执行<br><code>hexo init</code><br><code>npm install</code><br><code>hexo支持mathjax</code><br>安装</p><p><code>$ npm install hexo-math --save</code><br>在hexo目录初始化</p><p><code>$ hexo math install</code><br>配置</p><pre><code>plugins:- hexo-math</code></pre><p>在blog当前目录里执行下面命令</p><pre><code>$ hexo math install</code></pre><p>在_config.yml文件中添加：</p><pre><code>plugins: hexo-math</code></pre><p>hexo支持category与tag<br>打开scaffolds/post.md, 修改内容为</p><pre><code>---title: {{ title }}date: {{ date }}tags:categories:---</code></pre><p>以后执行hexo n ‘name’生成的md文件中就会有category了</p><p>hexo支持版权声明<br>安装</p><pre><code>npm install hexo-filter-indicate-the-source --save</code></pre><p>配置</p><pre><code>indicate_the_source:  pattern: indicate-the-source  enable: true  render_engine: ejs  element_class: source  domain_white_list:     - localhost  template: &quot;&lt;blockquote&gt;&lt;p&gt;转载请注明出处：&lt;%- post.permalink %&gt;&lt;/p&gt;&lt;p&gt;访问原文「&lt;a href=&#39;&lt;%- post.permalink %&gt;&#39;&gt;&lt;%- post.title %&gt;&lt;/a&gt;」&lt;/p&gt;&lt;/blockquote&gt;&quot;</code></pre><p>使用的时候在md文中合适的位置插入</p><pre><code>&lt;!-- indicate-the-source --&gt;</code></pre><p>git常用命令<br>设置代理</p><pre><code>git config --global https.proxy http://127.0.0.1:1080git config --global https.proxy https://127.0.0.1:1080git config --global --unset http.proxygit config --global --unset https.proxy</code></pre><p>修改远程分支命令</p><pre><code>git remote set-url origin [url]</code></pre><p>删除分支与添加remote分支</p><pre><code>git remote rm origingit remote add origin [url]</code></pre><p>用远程的覆盖本地</p><pre><code>git fetch --all  git reset --hard origin/master</code></pre><p>设置upstream</p><pre><code>git branch --set-upstream-to=origin/dev或者git branch -u origin/dev</code></pre><p>取消当前分支的upstream</p><pre><code>git branch --unset-upstream</code></pre><p>取消指定分支的upstream</p><pre><code>git branch --unset-upstream [分支名]</code></pre><p>查看upstream，打开.git/config文件<br>报错Git: fatal: Pathspec is in submodule</p><pre><code>git rm --cached directorygit add directory</code></pre>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo博客 </tag>
            
            <tag> 部署 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在云服务器上部署hexo</title>
      <link href="/p/baaf.html"/>
      <url>/p/baaf.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>前提条件：</p><ol><li>需要有服务器，本教程采用的是阿里云的ESC服务器，系统为Centos7.2</li><li>需要提前开放80端口，方便后续访问</li><li>本人的公共ip为：118.178.84.132</li></ol></blockquote><h1 id="1-安装nginx"><a href="#1-安装nginx" class="headerlink" title="1. 安装nginx"></a>1. 安装nginx</h1><p>安装nginx需要相关的依赖库</p><h2 id="1-1-安装gcc-gcc-c"><a href="#1-1-安装gcc-gcc-c" class="headerlink" title="1.1 安装gcc gcc-c++"></a>1.1 安装gcc gcc-c++</h2><pre><code>yum install -y gcc gcc-c++</code></pre><h2 id="1-2-安装PCRE库"><a href="#1-2-安装PCRE库" class="headerlink" title="1.2 安装PCRE库"></a>1.2 安装PCRE库</h2><pre><code class="bash">cd /usr/local/wget http://downloads.sourceforge.net/project/pcre/pcre/8.37/pcre-8.37.tar.gztar -xvf pcre-8.37.tar.gzcd pcre-8.37./configuremake &amp;&amp; make install</code></pre><p>查看版本号，出现版本号说明安装成功</p><pre><code class="bash">pcre-config --version</code></pre><h2 id="1-3-安装-openssl-、zlib-、-gcc-依赖"><a href="#1-3-安装-openssl-、zlib-、-gcc-依赖" class="headerlink" title="1.3 安装 openssl 、zlib 、 gcc 依赖"></a>1.3 安装 openssl 、zlib 、 gcc 依赖</h2><pre><code class="bash">yum -y install make zlib zlib-devel gcc-c++ libtool openssl openssl-devel</code></pre><h2 id="1-4-安装nginx"><a href="#1-4-安装nginx" class="headerlink" title="1.4 安装nginx"></a>1.4 安装nginx</h2><p>安装nginx一定要在local文件夹下</p><pre><code class="bash">cd /usr/local/wget http://nginx.org/download/nginx-1.17.9.tar.gztar -xvf nginx-1.17.9.tar.gzcd nginx-1.17.9./configuremake &amp;&amp; make install </code></pre><h2 id="1-5-编写启动脚本"><a href="#1-5-编写启动脚本" class="headerlink" title="1.5 编写启动脚本"></a>1.5 编写启动脚本</h2><p>在/etc/init.d/路径下添加脚本文件，名称为nginx</p><pre><code class="bash">cd /etc/init.d/vim nginx</code></pre><p>写入以下内容</p><pre><code class="bash">#!/bin/bash#Startup script for the nginx Web Server#chkconfig: 2345 85 15nginx=/usr/local/nginx/sbin/nginxconf=/usr/local/nginx/conf/nginx.confcase $1 in start)echo -n &quot;Starting Nginx&quot;$nginx -c $confecho &quot; done.&quot;;;stop)echo -n &quot;Stopping Nginx&quot;killall -9 nginxecho &quot; done.&quot;;;test)$nginx -t -c $confecho &quot;Success.&quot;;;reload)echo -n &quot;Reloading Nginx&quot;ps auxww | grep nginx | grep master | awk &#39;{print $2}&#39; | xargs kill -HUPecho &quot; done.&quot;;;restart)$nginx -s reloadecho &quot;reload done.&quot;;;*)echo &quot;Usage: $0 {start|restart|reload|stop|test|show}&quot;;;esac</code></pre><p>然后执行</p><pre><code class="bash">chmod +x nginx</code></pre><p>常用控制指令</p><pre><code>启动 service nginx start停止 service nginx stop重启 service nginx reload启动后，访问自己的ip，例如118.178.84,132，就可以看到nginx 默认的配置网页</code></pre><h1 id="2-安装Git和Node-js"><a href="#2-安装Git和Node-js" class="headerlink" title="2. 安装Git和Node.js"></a>2. 安装Git和Node.js</h1><h2 id="2-1-安装Node-js"><a href="#2-1-安装Node-js" class="headerlink" title="2.1 安装Node.js"></a>2.1 安装Node.js</h2><pre><code class="bash">curl -sL https://rpm.nodesource.com/setup_10.x | bash -yum install -y nodejs</code></pre><p>查看版本号，是否安装成功</p><pre><code class="bash">node -vnpm -v</code></pre><h2 id="2-2-安装Git及配置仓库"><a href="#2-2-安装Git及配置仓库" class="headerlink" title="2.2 安装Git及配置仓库"></a>2.2 安装Git及配置仓库</h2><p>安装git及新建git用户</p><pre><code>yum install gitadduser gitchmod 740 /etc/sudoersvim /etc/sudoers</code></pre><p>找到<code>Allow root to run any commands anywhere</code>这个下面，添加<code>git ALL=(ALL) ALL</code>这样一条指令，如下所示</p><pre><code class="bash">。。。。#### The COMMANDS section may have other options added to it.#### Allow root to run any commands anywhere root    ALL=(ALL)       ALLgit     ALL=(ALL)       ALL## Allows members of the &#39;sys&#39; group to run networking, software, ## service management apps and more.# %sys ALL = NETWORKING, SOFTWARE, SERVICES, STORAGE, DELEGATING, PROCESSES, LOCATE, DRIVERS## Allows people in group wheel to run all commands%wheel  ALL=(ALL)       ALL。。。。</code></pre><p>执行以下指令更改文件夹权限</p><pre><code class="bash">chmod 400 /etc/sudoerssudo passwd git</code></pre><p>切换git用户并且建立密钥</p><pre><code>su gitcd ~mkdir .sshcd .sshvim authorized_keys</code></pre><p>然后在文件这里填入本地ssh秘钥，我的位置在本地<code>C:\Users\user\.ssh</code>下的<code>id_rsa.pub</code>文件里，用记事本打开。</p><p>如果本地没有秘钥或者不会创建秘钥请，参考本人技术博客中，在码云Gitee配置ssh公钥一文如何创建本地秘钥的教程</p><p>然后修改权限</p><pre><code class="bash">chmod 600 ~/.ssh/authorized_keyschmod 700 ~/.ssh</code></pre><p>创建git仓库</p><pre><code class="bash">cd ~git init --bare blog.gitvim ~/blog.git/hooks/post-receive</code></pre><p>输入一下内容，保存退出</p><pre><code class="bash">git --work-tree=/home/www/website --git-dir=/home/git/blog.git checkout -f</code></pre><p>接着继续修改权限</p><pre><code>chmod +x ~/blog.git/hooks/post-receive</code></pre><p>以上指令都需要在<code>su git</code>之后执行 如果中途断开重新连接过，需要重新执行<code>su git</code>指令 进入git账户。</p><h2 id="2-3-创建网站仓库文件夹"><a href="#2-3-创建网站仓库文件夹" class="headerlink" title="2.3 创建网站仓库文件夹"></a>2.3 创建网站仓库文件夹</h2><p>新建<code>/home/www/website</code>文件夹，在root用户下执行先su root切换为root账户，这里要输入之前设定的密码</p><pre><code class="bash">su root</code></pre><p>接着</p><pre><code class="bash">cd /homemkdir wwwcd wwwmkdir website</code></pre><p>修改文件夹权限，这步很重要</p><pre><code class="bash">chmod 777 /home/www/websitechmod 777 /home/www</code></pre><p>本地测试</p><p>在本地电脑cmd命令输入</p><pre><code>ssh -v git@服务器的公网ip</code></pre><p>例如：<code>ssh -v git@118.178.84.132</code>，返回如下则成功，第一次的话可能需要输入一个yes</p><pre><code>。。。debug1: client_input_global_request: rtype hostkeys-00@openssh.com want_reply 0debug1: Remote: /home/git/.ssh/authorized_keys:1: key options: agent-forwarding port-forwarding pty user-rc x11-forwardingdebug1: Remote: /home/git/.ssh/authorized_keys:1: key options: agent-forwarding port-forwarding pty user-rc x11-forwardingWelcome to Alibaba Cloud Elastic Compute Service !Activate the web console with: systemctl enable --now cockpit.socketLast login: Thu Apr 20 23:27:25 2020 from 118.178.84.132</code></pre><h1 id="3-修改配置文件server"><a href="#3-修改配置文件server" class="headerlink" title="3. 修改配置文件server"></a>3. 修改配置文件server</h1><p>这步的作用是使得nginx指向的网站，是我们上面设定的<code>/home/www/website</code>中的网站</p><pre><code>cd /usr/local/nginx/confvim nginx.conf</code></pre><p>将80 端口下的root项改为<code>/home/www/website</code>，</p><p>主要修改以下2处，一个是location下的root，原本应该填的是html，改为<code>/home/www/website</code>，同理在<code>error_page</code>这里也有一个，修改好后保存退出</p><pre><code>。。。                location / {            root   /home/www/website;            index  index.html index.htm;        }        #error_page  404              /404.html;        # redirect server error pages to the static page /50x.html        #        error_page   500 502 503 504  /50x.html;        location = /50x.html {            root   /home/www/website;        }</code></pre><h1 id="4-从本地hexo部署到服务器"><a href="#4-从本地hexo部署到服务器" class="headerlink" title="4. 从本地hexo部署到服务器"></a>4. 从本地hexo部署到服务器</h1><p>修改本地配置文件，hexo下的config文件，将<code>repo: git@这里改为服务器公网IP:/home/git/blog.git</code></p><pre><code class="yaml"># Deployment# 部署的地址，必须指向自己的仓库## Docs: https://hexo.io/docs/deployment.htmldeploy:  type: git  repo: git@118.178.84.132:/home/git/blog.git  branch: master</code></pre><p>重启nginx，激活网页</p><pre><code>service nginx stopservice nginx start</code></pre><p>本地执行部署命令</p><pre><code class="bash">hexo clean &amp;&amp; hexo g &amp;&amp; hexo deploy</code></pre><p>验证网页，登录自己的ip，例如118.178.84.132，就能看到自己网页了，如果不成功需要检查一下<code>/home/www/website</code>文件夹下是否有上传的内容  </p>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 服务器 </tag>
            
            <tag> hexo博客 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo 主题 indigo 使用</title>
      <link href="/p/344f.html"/>
      <url>/p/344f.html</url>
      
        <content type="html"><![CDATA[<h1 id="安装前提"><a href="#安装前提" class="headerlink" title="安装前提"></a>安装前提</h1><p>安装 Hexo 相当简单。然而在安装前，您必须检查电脑中是否已安装下列应用程序：</p><ul><li>Node.js</li><li>Git</li></ul><p>如果您的电脑中已经安装上述必备程序，那么恭喜您！接下来只需要使用 npm 即可完成 Hexo 的安装。</p><pre><code>npm install -g hexo-clihexo initnpm install</code></pre><p>indigo 主题的所有依赖文件列表 package.json :</p><pre><code>{  &quot;name&quot;: &quot;hexo-site&quot;,  &quot;version&quot;: &quot;0.0.0&quot;,  &quot;private&quot;: true,  &quot;hexo&quot;: {    &quot;version&quot;: &quot;3.7.1&quot;  },  &quot;dependencies&quot;: {    &quot;cheerio&quot;: &quot;^1.0.0-rc.2&quot;,    &quot;condense-whitespace&quot;: &quot;^1.0.0&quot;,    &quot;hexo&quot;: &quot;^3.7.1&quot;,    &quot;hexo-abbrlink&quot;: &quot;^2.0.5&quot;,    &quot;hexo-admin&quot;: &quot;^2.3.0&quot;,    &quot;hexo-autoprefixer&quot;: &quot;^1.0.0&quot;,    &quot;hexo-deployer-git&quot;: &quot;^0.3.1&quot;,    &quot;hexo-generator-archive&quot;: &quot;^0.1.5&quot;,    &quot;hexo-generator-category&quot;: &quot;^0.1.3&quot;,    &quot;hexo-generator-feed&quot;: &quot;^1.2.2&quot;,    &quot;hexo-generator-index&quot;: &quot;^0.2.1&quot;,    &quot;hexo-generator-json-content&quot;: &quot;^3.0.1&quot;,    &quot;hexo-generator-search&quot;: &quot;^2.2.5&quot;,    &quot;hexo-generator-tag&quot;: &quot;^0.2.0&quot;,    &quot;hexo-helper-qrcode&quot;: &quot;^1.0.2&quot;,    &quot;hexo-renderer-ejs&quot;: &quot;^0.3.1&quot;,    &quot;hexo-renderer-less&quot;: &quot;^0.2.0&quot;,    &quot;hexo-renderer-marked&quot;: &quot;^0.3.2&quot;,    &quot;hexo-renderer-stylus&quot;: &quot;^0.3.3&quot;,    &quot;hexo-server&quot;: &quot;^0.2.2&quot;,    &quot;hexo-symbols-count-time&quot;: &quot;^0.4.2&quot;,    &quot;hexo-wordcount&quot;: &quot;^3.0.2&quot;,    &quot;less&quot;: &quot;^3.0.4&quot;,    &quot;style-loader&quot;: &quot;^0.21.0&quot;  },  &quot;devDependencies&quot;: {    &quot;stylus&quot;: &quot;^0.54.5&quot;,    &quot;stylus-loader&quot;: &quot;^3.0.2&quot;  }}</code></pre><h1 id="主题安装"><a href="#主题安装" class="headerlink" title="主题安装"></a>主题安装</h1><p>安装需确认你的 Hexo 版本在 3.0 以上，以及 Node 版本为 6.x 以上，在 Hexo 根目录，执行以下命令。<br><code>git clone git@github.com:dinphy/hexo-theme-indigo.git themes/indigo</code></p><h1 id="依赖安装"><a href="#依赖安装" class="headerlink" title="依赖安装"></a>依赖安装</h1><p>还是在 Hexo 根目录，如果以下插件已安装过，无需再次安装。</p><p>Less<br>用于主题默认使用 less 作为 css 预处理工具。</p><pre><code>npm install hexo-renderer-less –save</code></pre><p>Feed<br>用于生成 rss。</p><pre><code>npm install hexo-generator-feed –save</code></pre><p>Json-content<br>用于生成静态站点数据，用作站内搜索的数据源。</p><pre><code>npm install hexo-generator-json-content –save</code></pre><p>QRCode<br>用于生成微信分享二维码。可选，不安装时会请求 jiathis Api 生成二维码。</p><pre><code>npm install hexo-helper-qrcode –save</code></pre><p>wordcount<br>用于统计文章字数。</p><pre><code>npm install hexo-wordcount –save</code></pre><p>condense-whitespace<br>用于从字符串中移除前导、尾随和重复的空白。</p><pre><code>npm install condense-whitespace –save</code></pre><p>cheerio<br>用于快速、灵活和精益实现核心 jQuery 专为服务器设计。</p><pre><code>npm install cheerio –save</code></pre><p>hexo-autoprefixer<br>用于 Hexo 自动预修插件。</p><pre><code>npm install hexo-autoprefixer –save</code></pre><p>hexo-symbols-count-time<br>用于符号计数和时间阅读的文章插件。</p><pre><code>npm install hexo-symbols-count-time –save</code></pre><p>hexo-deployer-git<br>用于 Git 部署上传。</p><p><code>npm install hexo-deployer-git –save</code></p><p>hexo-generator-search<br>用于 Hexo 生成搜索数据的插件。</p><p><code>npm install hexo-generator-search –save</code></p><p>hexo-abbrlink<br>用于帖子创建一个和唯一的链接。</p><p><code>npm install hexo-abbrlink –save</code></p><p>hexo-admin<br>用于 Hexo 后台管理界面。</p><p><code>npm install hexo-admin –save</code></p><p>stylus-loader stylus<br>用于 webpack 的手写笔加载程序。</p><p><code>npm install stylus-loader stylus –save-dev</code></p><p>stylus<br>用于提供一种高效、动态和表达方式来生成 CSS。支持缩进语法和常规 CSS 样式。</p><p><code>npm install stylus -g</code></p><p>other<br>这些是初始化就有的。</p><pre><code>npm install hexo –savenpm install hexo-generator-index –savenpm install hexo-generator-archive –savenpm install hexo-renderer-ejs –savenpm install hexo-renderer-marked –savenpm install hexo-renderer-stylus –savenpm install hexo-server –save</code></pre><ul><li>遇到了几个棘手的问题</li></ul><p>问题描述如下:</p><pre><code>ERROR D:MyWebhexoTestthemesindigolayoutarchive.ejs:58    57|                 &lt;/a&gt; &gt;&gt; 58|                 &lt;a class=&quot;catagories&quot; href=&quot;/categories/&lt;%- post.categories.data[0].name %&gt;&quot; target=&quot;_blank&quot;&gt;    59|                     &lt;%- post.categories.data[0].name %&gt;    60|                 &lt;/a&gt;    61|             &lt;/div&gt;Cannot read property &#39;name&#39; of undefinedTypeError: D:MyWebhexoTestthemesindigolayoutarchive.ejs:58    56|                     &lt;%- /(？|。|！)$/.test(post.title) ? post.title : post.title + &#39;。&#39; %&gt;    57|                 &lt;/a&gt; &gt;&gt; 58|                 &lt;a class=&quot;catagories&quot; href=&quot;/categories/&lt;%- post.categories.data[0].name %&gt;&quot; target=&quot;_blank&quot;&gt;    59|                     &lt;%- post.categories.data[0].name %&gt;    60|                 &lt;/a&gt;    61|             &lt;/div&gt;Cannot read property &#39;name&#39; of undefined</code></pre><p>问题1：<code>Cannot read property &#39;name&#39; of undefined</code></p><p>原因是新建的帖子里面没有分类。</p><blockquote><p>解决办法是：在新建的帖子里添加分类。</p></blockquote><pre><code>ERROR D:testHexothemesindigolayoutlayout.ejs:3    1| &lt;!DOCTYPE html&gt;    2| &lt;html&gt; &gt;&gt; 3|     &lt;%- partial(&#39;_partial/head&#39;) %&gt;    4|    5| &lt;body&gt;    6|     &lt;script&gt;D:testHexothemesindigolayout_partialhead.ejs:37    35|         }    36|     %&gt; &gt;&gt; 37|     &lt;title&gt;&lt;% if (title){ %&gt;&lt;%= title %&gt; | &lt;% } %&gt;&lt;%= config.title %&gt; | &lt;%= config.subtitle.replace(/&lt;[^&gt;]*&gt;/g, &#39;&#39;) %&gt;&lt;/title&gt;    38|     &lt;%    39|         var keyWords = config.keywords;    40|         if(page.tags){Cannot read property &#39;replace&#39; of nullTypeError: D:testHexothemesindigolayoutlayout.ejs:3    1| &lt;!DOCTYPE html&gt;    2| &lt;html&gt; &gt;&gt; 3|     &lt;%- partial(&#39;_partial/head&#39;) %&gt;    4|    5| &lt;body&gt;    6|     &lt;script&gt;D:testHexothemesindigolayout_partialhead.ejs:37    35|         }    36|     %&gt; &gt; &gt; 37|     &lt;title&gt;&lt;% if (title){ %&gt;&lt;%= title %&gt; | &lt;% } %&gt;&lt;%= config.title %&gt; | &lt;%= config.subtitle.replace(/&lt;[^&gt;]*&gt;/g, &#39;&#39;) %&gt;&lt;/title&gt;    38|     &lt;%    39|         var keyWords = config.keywords;    40|         if(page.tags){Cannot read property &#39;replace&#39; of null</code></pre><p>问题2：<code>Cannot read property &#39;replace&#39; of null</code></p><p>原因是根目录下的<code>_config.yml</code> 没有定义 subtitle 。</p><p>解决办法是：删除根目录下的 node_modules 文件夹，重新执行 npm install ，然后在根目录下 <code>_config.yml</code> 中定义 subtitle。</p><p>例如：</p><pre><code> subtitle: 生活不易,快乐就好</code></pre><p>本文到此结束。</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo博客 </tag>
            
            <tag> indigo主题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Matery主题优化教程</title>
      <link href="/p/b8ec.html"/>
      <url>/p/b8ec.html</url>
      
        <content type="html"><![CDATA[<h1 id="1-优化搜索"><a href="#1-优化搜索" class="headerlink" title="1. 优化搜索"></a>1. 优化搜索</h1><h2 id="1-主题自带搜索，但是只支持英文，所以我们需要拓展搜索功能，先安装插件，在主目录下"><a href="#1-主题自带搜索，但是只支持英文，所以我们需要拓展搜索功能，先安装插件，在主目录下" class="headerlink" title="1. 主题自带搜索，但是只支持英文，所以我们需要拓展搜索功能，先安装插件，在主目录下"></a>1. 主题自带搜索，但是只支持英文，所以我们需要拓展搜索功能，先安装插件，在主目录下</h2><pre><code>npm install hexo-generator-search --save</code></pre><h2 id="2-紧接着在博客站点目录的配置文件-config-yml下，添加如下配置："><a href="#2-紧接着在博客站点目录的配置文件-config-yml下，添加如下配置：" class="headerlink" title="2. 紧接着在博客站点目录的配置文件_config.yml下，添加如下配置："></a>2. 紧接着在博客站点目录的配置文件<code>_config.yml</code>下，添加如下配置：</h2><pre><code># 中文搜索功能search:  path: search.xml  field: post</code></pre><h1 id="2-添加豆瓣和Bilibili页面"><a href="#2-添加豆瓣和Bilibili页面" class="headerlink" title="2. 添加豆瓣和Bilibili页面"></a>2. 添加豆瓣和Bilibili页面</h1><h2 id="2-1-豆瓣"><a href="#2-1-豆瓣" class="headerlink" title="2.1 豆瓣"></a>2.1 豆瓣</h2><h3 id="1-首先在博客站点目录执行下面的命令安装豆瓣插件："><a href="#1-首先在博客站点目录执行下面的命令安装豆瓣插件：" class="headerlink" title="1. 首先在博客站点目录执行下面的命令安装豆瓣插件："></a>1. 首先在博客站点目录执行下面的命令安装豆瓣插件：</h3><pre><code>npm install hexo-douban --save    </code></pre><h3 id="2-紧接着在博客站点目录的配置文件-config-yml下，添加如下配置：-1"><a href="#2-紧接着在博客站点目录的配置文件-config-yml下，添加如下配置：-1" class="headerlink" title="2. 紧接着在博客站点目录的配置文件_config.yml下，添加如下配置："></a>2. 紧接着在博客站点目录的配置文件<code>_config.yml</code>下，添加如下配置：</h3><pre><code>douban:   user: 252345665    #这个需要修改为你个人的id    builtin: false   #如果想生成豆瓣页面，这个需要设置为true  book:       title: &#39;This is my book title&#39;       quote: &#39;This is my book quote&#39;   movie:       title: &#39;This is my movie title&#39;       quote: &#39;This is my movie quote&#39;   game:       title: &#39;This is my game title&#39;       quote: &#39;This is my game quote&#39;   timeout: 10000</code></pre><ul><li>user: 你的豆瓣ID。打开豆瓣，登入账户，然后在右上角点击 ”个人主页“，这时候地址栏的URL大概是这样：<a href="https://www.douban.com/people/xxxxxx/" target="_blank" rel="noopener">https://www.douban.com/people/xxxxxx/</a> ，其中的”xxxxxx”就是你的个人ID了。</li><li>builtin：是否将生成页面的功能嵌入 <code>hexo s</code> 和 <code>hexo g</code> 中，默认是 <code>false</code> ，另一可选项为 <code>true</code>。</li><li>title： 该页面的标题。</li><li>quote： 写在页面开头的一段话,支持<code>html</code>语法。</li><li>timeout： 爬取数据的超时时间，默认是 10000ms，如果在使用时发现报了超时的错(ETIMEOUT)可以把这个数据设置的大一点。</li></ul><p>如果只想显示某一个页面(比如movie)，那就把其他的配置项注释掉即可。</p><h3 id="3-然后再主题配置文件-config-yml中添加关于此页面的菜单：-下面是我的配置"><a href="#3-然后再主题配置文件-config-yml中添加关于此页面的菜单：-下面是我的配置" class="headerlink" title="3. 然后再主题配置文件_config.yml中添加关于此页面的菜单：(下面是我的配置)"></a>3. 然后再主题配置文件<code>_config.yml</code>中添加关于此页面的菜单：(下面是我的配置)</h3><pre><code>menu:    媒体:       url: /       icon: fas fa-list       children:         - name: 电影           url: /movies           icon: fas fa-film         - name: 书单           url: /books           icon: fas fa-book         - name: 游戏           url: /games           icon: fas fa-gamepad</code></pre><h3 id="4-适配Matery主题："><a href="#4-适配Matery主题：" class="headerlink" title="4. 适配Matery主题："></a>4. 适配Matery主题：</h3><p>在 <code>/themes/hexo-theme-matery/layout</code>文件夹下面创建一个名为 <code>douban.ejs</code> 的文件，并将下面的内容复制进去：</p><pre><code>&lt;%- partial(&#39;_partial/post-cover&#39;) %&gt; &lt;style&gt;     .hexo-douban-picture img {        width: 100%;     } &lt;/style&gt;&lt;main class=&quot;content&quot;&gt;     &lt;div id=&quot;contact&quot; class=&quot;container chip-container&quot;&gt;         &lt;div class=&quot;card&quot;&gt;             &lt;div class=&quot;card-content&quot; style=&quot;padding: 30px&quot;&gt;                 &lt;h1 style=&quot;margin: 10px 0 10px 0px;&quot;&gt;&lt;%= page.title %&gt;&lt;/h1&gt;                 &lt;%- page.content %&gt;             &lt;/div&gt;         &lt;/div&gt;         &lt;div class=&quot;card&quot;&gt;             &lt;div class=&quot;card-content&quot; style=&quot;text-align: center&quot;&gt;                 &lt;h3 style=&quot;margin: 5px 0 5px 5px;&quot;&gt;如果你有好的内容推荐，欢迎在下面留言！&lt;/h3&gt;             &lt;/div&gt;         &lt;/div&gt;         &lt;div class=&quot;card&quot;&gt;             &lt;% if (theme.gitalk &amp;&amp; theme.gitalk.enable) { %&gt;                &lt;%- partial(&#39;_partial/gitalk&#39;) %&gt;            &lt;% } %&gt;             &lt;% if (theme.gitment.enable) { %&gt;                 &lt;%- partial(&#39;_partial/gitment&#39;) %&gt;             &lt;% } %&gt;             &lt;% if (theme.disqus.enable) { %&gt;                 &lt;%- partial(&#39;_partial/disqus&#39;) %&gt;             &lt;% } %&gt;             &lt;% if (theme.livere &amp;&amp; theme.livere.enable) { %&gt;                 &lt;%- partial(&#39;_partial/livere&#39;) %&gt;             &lt;% } %&gt;             &lt;% if (theme.valine &amp;&amp; theme.valine.enable) { %&gt;                 &lt;%- partial(&#39;_partial/valine&#39;) %&gt;             &lt;% } %&gt;         &lt;/div&gt;     &lt;/div&gt; &lt;/main&gt;</code></pre><h3 id="5-然后"><a href="#5-然后" class="headerlink" title="5. 然后"></a>5. 然后</h3><p>在博客站点目录下的<code>node_modules</code>文件夹下找到<code>hexo-douban/lib</code>，我的是<code>C:\Users\user\Desktop\lovelijunyi\node_modules\hexo-douban\lib</code>文件夹下有三个js文件，分别为：<code>books-generator.js</code> 、<code>games-generator.js</code> 、<code>movies-generator.js</code>，用文本编辑器打开这三个文件，并将其文件内容末尾的代码修改为一下内容：</p><pre><code>/* 原文件内容为 layout: [`page`, `post`] ，将其修改为下面的内容*/layout: [`page`, `douban`]</code></pre><h3 id="6-最后就是使用并生成相应的页面，执行命令如下"><a href="#6-最后就是使用并生成相应的页面，执行命令如下" class="headerlink" title="6. 最后就是使用并生成相应的页面，执行命令如下:"></a>6. 最后就是使用并生成相应的页面，执行命令如下:</h3><pre><code>hexo douban</code></pre><p><strong>需要注意的是</strong>，通常大家都喜欢用<code>hexo d</code>来作为<code>hexo deploy</code>命令的简化，但是当安装了<code>hexo douban</code>之后，就不能用<code>hexo d</code>了，因为<code>hexo douban</code>跟<code>hexo deploy</code>的前缀都是<code>hexo d</code>，你以后执行的<code>hexo d</code>将不再是<code>Hexo</code>页面的生成，而是豆瓣页面的生成。</p><p>以下是可选的命令参数：</p><pre><code>-h, --help    # 帮助页面-b, --books   # 只生成书单页面-g, --games   # 只生成游戏页面-m, --movies  # 只生成电影页面</code></pre><p>重要提醒：</p><ul><li>出现编译时无法载入豆瓣数据</li></ul><p>当站点配置文件的builtin的值为<code>true</code>时，生成页面的功能会嵌入到<code>hexo g</code>和<code>hexo s</code>中，在进行部署生成操作，会自动生成相应的页面。但我并不推荐这里写true，建议填写false，原因是因为该插件是通过爬虫机制获取到<code>douban</code>的信息，如果多次部署，则会触发反扒，ip被封锁(最好的解决办法：</p><ol><li>等待一天自动解封。</li><li>电脑换一个接入源，也就是换一个ip)，最明显的反应就是使用hexo douban命令编译时，载入的book，movies和games为0，所以如果豆瓣有较大更新时，再单独使用hexo douban命令编译。</li></ol><ul><li>无法载入豆瓣页面<br>如果我们不能载入豆瓣页面，这是因为，例如我的<code>C:\Users\user\Desktop\lovelijunyi\source</code>文件夹下新建对应的<code>movies</code>，<code>books</code>和<code>games</code>目录，并在内部新建<code>index.md</code>文件，这会导致网页会指向这个<code>index.md</code>文件。正确的做法是，置空。</li></ul><h2 id="2-2-Bilibili"><a href="#2-2-Bilibili" class="headerlink" title="2.2 Bilibili"></a>2.2 Bilibili</h2><p>拉取个人bilibili番剧页面所有番剧</p><h3 id="1-安装插件"><a href="#1-安装插件" class="headerlink" title="1. 安装插件"></a>1. 安装插件</h3><pre><code>npm install hexo-bilibili-bangumi --save</code></pre><p>更新插件</p><pre><code>npm install hexo-bilibili-bangumi --update --save</code></pre><h3 id="2-配置"><a href="#2-配置" class="headerlink" title="2. 配置"></a>2. 配置</h3><p>将下面的配置写入站点的配置文件<code>_config.yml</code>里 (不是主题的配置文件)。</p><pre><code>bangumi:  enable: true  vmid: 1234567  title: &#39;追番列表&#39;  quote: &#39;生命不息，追番不止！&#39;  show: 1  loading: &#39;/img/bangumi-loading.gif&#39;</code></pre><p><strong>配置介绍</strong></p><ul><li>enable: 是否启用</li><li>vmid: 哔哩哔哩番剧页面的 vmid(uid)</li><li>title: 该页面的标题</li><li>quote: 写在页面开头的一段话，支持 html 语法</li><li>show: 初始显示页面：0: 想看 , 1: 在看 , 2: 看过，默认为 1</li><li>loading: 图片加载完成前的 loading 图片</li></ul><p><strong>获取 uid</strong>：登录哔哩哔哩后前往 <a href="https://space.bilibili.com/" target="_blank" rel="noopener">https://space.bilibili.com/</a> 页面，网址最后的一串数字就是 uid</p><h3 id="3-使用"><a href="#3-使用" class="headerlink" title="3. 使用"></a>3. 使用</h3><p>前往你的 Hexo 博客的根目录，输入如下命令</p><pre><code> hexo new page bangumis</code></pre><p>找到<code>source/bangumis/index.md</code>这个文件，修改这个文件，添加 <code>type: &quot;bangumis&quot;</code>：</p><pre><code>---title: bangumisdate: 2020-01-05 00:00:00type: &quot;bangumis&quot;---</code></pre><p>防止请求次数过多插件不再自动获取番剧数据，所以请根据自己的需要在<code>hexo generate</code>或<code>hexo deploy</code>之前使用<code>hexo bangumi -u</code>命令更新番剧数据！</p><p>例如</p><pre><code>hexo clean &amp;&amp; hexo g &amp;&amp; hexo bangumi -u &amp;&amp; hexo s</code></pre><p>删除数据命令:</p><pre><code>hexo bangumi -d</code></pre><p>最后注意一下，和豆瓣不同，不要每次都执行<code>hexo bangumi -u</code>，只有你自己番剧更新时才需要执行更新指令，之前的番剧数据会一直保留，直到被你删除</p><h1 id="3-页面获取标题"><a href="#3-页面获取标题" class="headerlink" title="3. 页面获取标题"></a>3. 页面获取标题</h1><p>之前比如我们打开例如相册，留言板等最上方是没有标题的，看起来不是很舒服，加完标题如下</p><p>修改<code>themes\matery\layout\_partial</code>中的<code>bg-cover-content.ejs</code>文件，其中原主题中这个文件的代码为(大约在第4行)：</p><pre><code>&lt;div class=&quot;title center-align&quot;&gt;     &lt;% if (config.subtitle &amp;&amp; config.subtitle.length &gt; 0) { %&gt;            &lt;%= config.subtitle %&gt;     &lt;% } else { %&gt;              subtitle     &lt;% } %&gt;&lt;/div&gt;</code></pre><p>修改过后的代码为：</p><pre><code>&lt;div class=&quot;title center-align&quot;&gt;     &lt;% if (is_home() &amp;&amp; config.subtitle &amp;&amp; config.subtitle.length &gt; 0) { %&gt;        &lt;%= config.subtitle %&gt;     &lt;% } else { %&gt;        &lt;%= page.title %&gt;     &lt;% } %&gt;&lt;/div&gt;</code></pre><blockquote><p>这个有一点bug，归档页面标题无法显示，解决办法目前还没有</p></blockquote><p>然后保存，执行<code>hexo cl &amp;&amp; hexo g &amp;&amp; hexo s</code>查看效果即可。</p><p><strong>注意</strong>：获取的<code>title</code>标题在md文档中的<code>fromt-matter</code>属性中<code>title</code>的值，可自定义，你只需要去本地找到页面所在的md文档中，将其值修改为中文或者英文即可。</p><p>例如：友情链接这一块，你去博客文件的<code>F:\blog\source\friends</code>（这是我的本地路径）目录，打开目录下的<code>index.md</code>文档，将<code>title</code>后面的值由原来的<code>friends</code>值修改为中文的友情链接或者友人帐或者其他（自定义），然后保存，执行命令，查看效果即可，如没有问题，再部署！</p><h1 id="4-添加看板动画"><a href="#4-添加看板动画" class="headerlink" title="4. 添加看板动画"></a>4. 添加看板动画</h1><p>这个动画能一直看着你哦，会跟随你的鼠标，这里直接上图</p><p>首先检查博客主目录下面的<code>package.json</code>里是否有<br><code>&quot;hexo-helper-live2d&quot;: &quot;^3.0.3&quot;</code>,依赖，有的话可以先卸载<br>使用命令</p><pre><code>npm uninstall hexo-helper-live2d</code></pre><p>之后再安装：</p><pre><code>npm install --save hexo-helper-live2d</code></pre><blockquote><p>注意：命令都是在你的博客主目录执行，如果没有安装成功可以直接去其他网站下载，文件夹名为live2d-widget，然后放到主目录的node_modules的文件夹下</p></blockquote><p>安装完成之后检查主目录下<code>package.json</code>是否有安装的<code>model</code>，我这里是<code>&quot;hexo-helper-live2d&quot;: &quot;^3.1.1&quot;</code>，如果是文件夹安装的自行添加即可</p><pre><code>{  &quot;name&quot;: &quot;hexo-site&quot;,  &quot;version&quot;: &quot;0.0.0&quot;,  &quot;private&quot;: true,  &quot;scripts&quot;: {    &quot;build&quot;: &quot;hexo generate&quot;,    &quot;clean&quot;: &quot;hexo clean&quot;,    &quot;deploy&quot;: &quot;hexo deploy&quot;,    &quot;server&quot;: &quot;hexo server&quot;  },  &quot;hexo&quot;: {    &quot;version&quot;: &quot;4.2.0&quot;  },  &quot;dependencies&quot;: {    &quot;cheerio&quot;: &quot;^0.22.0&quot;,    &quot;hexo&quot;: &quot;^4.0.0&quot;,    &quot;hexo-deployer-git&quot;: &quot;^2.1.0&quot;,    &quot;hexo-external-link&quot;: &quot;^1.0.7&quot;,    &quot;hexo-generator-archive&quot;: &quot;^1.0.0&quot;,    &quot;hexo-generator-category&quot;: &quot;^1.0.0&quot;,    &quot;hexo-generator-index&quot;: &quot;^1.0.0&quot;,    &quot;hexo-generator-search&quot;: &quot;^2.4.0&quot;,    &quot;hexo-generator-tag&quot;: &quot;^1.0.0&quot;,    &quot;hexo-helper-live2d&quot;: &quot;^3.1.1&quot;,    &quot;hexo-lazyload-image&quot;: &quot;^1.0.6&quot;,    &quot;hexo-neat&quot;: &quot;^1.0.4&quot;,    &quot;hexo-permalink-pinyin&quot;: &quot;^1.1.0&quot;,    &quot;hexo-prism-plugin&quot;: &quot;^2.3.0&quot;,    &quot;hexo-renderer-ejs&quot;: &quot;^1.0.0&quot;,    &quot;hexo-renderer-marked&quot;: &quot;^2.0.0&quot;,    &quot;hexo-renderer-stylus&quot;: &quot;^1.1.0&quot;,    &quot;hexo-server&quot;: &quot;^1.0.0&quot;,    &quot;hexo-tag-mmedia&quot;: &quot;^0.1.2&quot;,    &quot;hexo-wordcount&quot;: &quot;^6.0.1&quot;  }}</code></pre><ol><li>下载模型<br> 地址：<a href="https://github.com/xiazeyu/live2d-widget-models.git" target="_blank" rel="noopener">https://github.com/xiazeyu/live2d-widget-models.git</a><br>然后放到主目录的<code>node_modules</code>的文件夹下即可</li></ol><p>这里我进行了排雷，选出以下好看的模型，目前发现只有作业妹能发出叫声和讲话</p><pre><code>live2d-widget-model-chitose-站街男live2d-widget-model-epsilon2_1-站街女live2d-widget-model-haruto-小男生live2d-widget-model-hibiki-御姐live2d-widget-model-hijiki-黑猫live2d-widget-model-izumi-小姐姐live2d-widget-model-koharu-小女生live2d-widget-model-miku-初音未来live2d-widget-model-shizuku-作业妹live2d-widget-model-tororo-白猫live2d-widget-model-tsumiki-绿头女live2d-widget-model-unitychan-黄头卡通女live2d-widget-model-wanko-小狗狗live2d-widget-model-z16-小护士</code></pre><p><strong>注意</strong>：不懂为啥，但是每次安装完hexo插件，模型就会消失，这点要注意需要重新放入文件夹</p><ol start="4"><li><p>配置博客主目录配置文件，<code>_config.yml</code></p><pre><code>live2d:# 是否开启enable: truepluginModelPath: assets/model: use: live2d-widget-model-epsilon2_1  # 模板目录，在node_modules里# 显示位置和大小display: position: right width: 150  height: 300mobile: show: false  # 是否在手机进行显示</code></pre></li><li><p>解决live2d和busuanzi不蒜子计数冲突<br>首先是将不蒜子的js插件保存到本地，我的主题中位于<code>\themes\hexo-theme-matery\source\libs\others\busuanzi.pure.mini.js</code>。如果使用的是来自外网的js文件，也请下载到本地。</p></li></ol><p>将js文件更改为如下：</p><pre><code>var bszCaller,bszTag;!function(){var c,d,e,a=!1,b=[];ready=function(c){return a||&quot;interactive&quot;===document.readyState||&quot;complete&quot;===document.readyState?c.call(document):b.push(function(){return c.call(this)}),this},d=function(){for(var a=0,c=b.length;c&gt;a;a++)b[a].apply(document);b=[]},e=function(){a||(a=!0,d.call(window),document.removeEventListener?document.removeEventListener(&quot;DOMContentLoaded&quot;,e,!1):document.attachEvent&amp;&amp;(document.detachEvent(&quot;onreadystatechange&quot;,e),window==window.top&amp;&amp;(clearInterval(c),c=null)))},document.addEventListener?document.addEventListener(&quot;DOMContentLoaded&quot;,e,!1):document.attachEvent&amp;&amp;(document.attachEvent(&quot;onreadystatechange&quot;,function(){/loaded|complete/.test(document.readyState)&amp;&amp;e()}),window==window.top&amp;&amp;(c=setInterval(function(){try{a||document.documentElement.doScroll(&quot;left&quot;)}catch(b){return}e()},5)))}(),bszCaller={fetch:function(a,b){var c=&quot;BusuanziCallback_&quot;+Math.floor(1099511627776*Math.random());window[c]=this.evalCall(b),a=a.replace(&quot;=BusuanziCallback&quot;,&quot;=&quot;+c),scriptTag=document.createElement(&quot;SCRIPT&quot;),scriptTag.type=&quot;text/javascript&quot;,scriptTag.defer=!0,scriptTag.src=a,document.getElementsByTagName(&quot;HEAD&quot;)[0].appendChild(scriptTag)},evalCall:function(a){return function(b){ready(function(){try{a(b),scriptTag.parentElement.removeChild(scriptTag)}catch(c){bszTag.hides()}})}}},bszCaller.fetch(&quot;//busuanzi.ibruce.info/busuanzi?jsonpCallback=BusuanziCallback&quot;,function(a){bszTag.texts(a),bszTag.shows()}),bszTag={bszs:[&quot;site_pv&quot;,&quot;page_pv&quot;,&quot;site_uv&quot;],texts:function(a){this.bszs.map(function(b){var c=document.getElementById(&quot;busuanzi_value_&quot;+b);c&amp;&amp;(c.innerHTML=a[b])})},hides:function(){this.bszs.map(function(a){var b=document.getElementById(&quot;busuanzi_container_&quot;+a);b&amp;&amp;(b.style.display=&quot;&quot;)})},shows:function(){this.bszs.map(function(a){var b=document.getElementById(&quot;busuanzi_container_&quot;+a);b&amp;&amp;(b.style.display=&quot;inline&quot;)})}};</code></pre><p>操作其实就是把其中的<code>b.style.display=&quot;none&quot;</code>中<code>none</code>去掉。</p><h1 id="5-自定义相册"><a href="#5-自定义相册" class="headerlink" title="5. 自定义相册"></a>5. 自定义相册</h1><h2 id="5-1-修改原因"><a href="#5-1-修改原因" class="headerlink" title="5.1 修改原因"></a>5.1 修改原因</h2><p>matery主题原有的相册效果不佳，原因在于全部采用平铺式，完全没有分类，这个对比一下你自己的相册就知道，这里我们的目的是要做出类似QQ相册的感觉，可以进行分类</p><p><strong>注意</strong>：本教程的图片全部为<strong>图床</strong>，非本地，图床采用<strong>gitee</strong></p><h2 id="5-2-新建相册目录"><a href="#5-2-新建相册目录" class="headerlink" title="5.2 新建相册目录"></a>5.2 新建相册目录</h2><p>执行下面的命令：</p><pre><code>hexo new page galleries</code></pre><p>然后到站点根目录的source目录下找名称为 <code>galleries</code> 的目录，打开目录下的 <code>index.md</code> 文档，在原有基础上添加一下配置：</p><pre><code>type: &quot;galleries&quot;layout: &quot;galleries&quot;</code></pre><p>紧接着，在主题配置文件的<code>menu</code>属性添加关于相册的菜单</p><pre><code>相册:  url: /galleries   icon: fas fa-image</code></pre><p>如果需要添加到二级菜单，添加格式为：</p><pre><code>- name: 相册  url: /galleries   icon: fas fa-image</code></pre><h2 id="5-3-添加ejs文件和css文件"><a href="#5-3-添加ejs文件和css文件" class="headerlink" title="5.3 添加ejs文件和css文件"></a>5.3 添加ejs文件和css文件</h2><p>首先新建<code>gallery.css</code>，填写的代码内容如下：</p><pre><code>.gallery-wrapper{  padding-top: 30px;}.gallery-wrapper .gallery-box{  padding: 5px !important;}.gallery-wrapper .gallery-item {  display: block;  overflow: hidden;  background-color: #fff;  padding: 5px;  padding-bottom: 0;  position: relative;  -moz-box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.22);  -webkit-box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.22);  box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.22);}.gallery-cover-box{  width: 100%;  padding-top: 60%;  text-align: center;  overflow: hidden;  position: relative;  background: center center no-repeat;  -webkit-background-size: cover;  background-size: cover;}.gallery-cover-box .gallery-cover-img {  display: inline-block;  width: 100%;  position: absolute;  left: 50%;  top: 50%;  transform: translate(-50%,-50%);}.gallery-item .gallery-name{  font-size: 14px;  line-height: 24px;  text-align: center;  color: #666;  margin: 0;}.waterfall {  column-count: 3;  column-gap: 1em;}.photo-wrapper{  padding-top: 20px;}.photo-item {  display: block;  padding: 10px;  padding-bottom: 0;  margin-bottom: 14px;  font-size: 0;  -moz-page-break-inside: avoid;  -webkit-column-break-inside: avoid;  break-inside: avoid;  background: white;  -moz-box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.22);  -webkit-box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.22);  box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.22);}.photo-item img {  width: 100%;}.photo-item .photo-name{  font-size: 14px;  line-height: 30px;  text-align: center;  margin-top: 10px;  margin-bottom: 10px;  border-top: 1px solid #dddddd;}/*适配移动端布局*/@media only screen and (max-width: 601px) {  .waterfall {    column-count: 2;    column-gap: 1em;  }}</code></pre><p>然后保存，将此文件放在主题目录下，路径为<code>matery/source/css</code>。</p><h2 id="5-4-自定义修改"><a href="#5-4-自定义修改" class="headerlink" title="5.4 自定义修改"></a>5.4 自定义修改</h2><p>主要需要增加<code>galleries.ejs</code>和<code>gallery.ejs</code> 文件并修改几处地方，新建<code>galleries.ejs</code>文件，添加以下代码：</p><ul><li>galleries.ejs这个文件主要修改，<strong>相册背景</strong>目录地址的</li></ul><pre><code>&lt;link rel=&quot;stylesheet&quot; href=&quot;/css/gallery.css&quot;&gt;&lt;%- partial(&#39;_partial/bg-cover&#39;) %&gt;&lt;main class=&quot;content&quot;&gt;    &lt;div class=&quot;container&quot;&gt;        &lt;% if (site.data &amp;&amp; site.data.galleries) { %&gt;        &lt;% var galleries = site.data.galleries; %&gt;        &lt;div class=&quot;gallery-wrapper row&quot;&gt;            &lt;% for (var i = 0, len = galleries.length; i &lt; len; i++) { %&gt;            &lt;% var gallery = galleries[i]; %&gt;            &lt;div class=&quot;col s6 m4 l4 xl3 gallery-box&quot;&gt;                &lt;a href=&quot;./&lt;%- gallery.name %&gt;&quot; class=&quot;gallery-item&quot; data-aos=&quot;zoom-in-up&quot;&gt;                     &lt;div class=&quot;gallery-cover-box&quot; style=&quot;background-image: url(你的链接&lt;%- gallery.cover%&gt;);&quot;&gt;                    &lt;/div&gt;                    &lt;p class=&quot;gallery-name&quot;&gt;                        &lt;%- gallery.name %&gt;                    &lt;/p&gt;                &lt;/a&gt;            &lt;/div&gt;            &lt;% } %&gt;        &lt;/div&gt;        &lt;% } %&gt;    &lt;/div&gt;&lt;/main&gt;</code></pre><blockquote><p>注意：在你的链接这填写你相册图床的根网址，解释一下什么叫根网址，例如gitee一张图片的网址如下：<a href="https://gitee.com/abcdfg/images/raw/master/xxx.jpg，其实建立图床的时候是建立在" target="_blank" rel="noopener">https://gitee.com/abcdfg/images/raw/master/xxx.jpg，其实建立图床的时候是建立在</a> images 仓库下的，那后面的 <code>/raw/master/</code> 是分支，就不算根网址，具体要自己去试试，这里仅以gitee为例，所以这里你的链接要填：<a href="https://gitee.com/abcdfg/images/" target="_blank" rel="noopener">https://gitee.com/abcdfg/images/</a></p></blockquote><p>将此文件放在 <code>matery/layout</code> 目录下，同时再此目录下接着新建<code>gallery.ejs</code>文件，添加以下代码：</p><ul><li>galleries.ejs</li></ul><pre><code>&lt;link rel=&quot;stylesheet&quot; href=&quot;/css/gallery.css&quot;&gt;&lt;link type=&quot;text/css&quot; href=&quot;/libs/fancybox/jquery.fancybox.css&quot; rel=&quot;stylesheet&quot;&gt;&lt;link type=&quot;text/css&quot; href=&quot;/libs/justifiedGallery/justifiedGallery.min.css&quot; rel=&quot;stylesheet&quot;&gt;&lt;%- partial(&#39;_partial/post-cover&#39;) %&gt;&lt;%let galleries = [];if (site.data &amp;&amp; site.data.galleries) {    galleries = site.data.galleries;}var pageTitle = page.title;function getCurrentGallery(galleries, pageTitle) {    for (let i = 0; i &lt; galleries.length; i++) {        if (galleries[i][&#39;name&#39;] == pageTitle) {            return galleries[i];        }    }}var currentGallery = getCurrentGallery(galleries, pageTitle)var photos = currentGallery.photos;let imageStr = &#39;&#39;for (var i = 0, len = photos.length; i &lt; len; i++) {    var photo = photos[i];     imageStr += &quot;&lt;a href=\&quot;你的链接&quot; + photo + &quot;\&quot;&quot; +            &quot;     class=\&quot;photo-item\&quot; rel=\&quot;example_group\&quot;&quot; +            &quot;     data-fancybox=\&quot;images\&quot;&gt;&quot; +            &quot;      &lt;img src=\&quot;你的链接&quot; + photo + &quot;\&quot;&quot; +            &quot;       alt=&quot; + photo + &quot;&gt;\n&quot; +            &quot;    &lt;/a&gt;&quot;}%&gt;&lt;div class=&quot;container&quot;&gt;    &lt;div class=&quot;photo-wrapper&quot;&gt;        &lt;% if (page.password ) { %&gt;            &lt;script src=&quot;/js/crypto-js.js&quot;&gt;&lt;/script&gt;            &lt;script src=&quot;/js/gallery-encrypt.js&quot;&gt;&lt;/script&gt;            &lt;div id=&quot;hbe-security&quot;&gt;                &lt;div class=&quot;hbe-input-container&quot;&gt;                    &lt;input type=&quot;password&quot; class=&quot;hbe-form-control&quot; id=&quot;pass&quot;  placeholder=&quot;请输入密码查看内容&quot;/&gt;                    &lt;a href=&quot;javascript:;&quot; class=&quot;btn-decrypt&quot; id=&quot;btn_decrypt&quot;&gt;解密&lt;/a&gt;                &lt;/div&gt;            &lt;/div&gt;            &lt;div  id=&quot;mygallery&quot;&gt;                &lt;div class=&quot;waterfall&quot; id=&quot;encrypt-blog&quot; style=&quot;display:none&quot;&gt;                    &lt;%- aes(imageStr, page.password) %&gt;                &lt;/div&gt;            &lt;/div&gt;        &lt;% } else { %&gt;            &lt;div class=&quot;waterfall&quot; id=&quot;encrypt-blog&quot;&gt;                &lt;%- imageStr %&gt;            &lt;/div&gt;        &lt;% } %&gt;    &lt;/div&gt;&lt;/div&gt;&lt;script src=&quot;/libs/fancybox/fancybox.js&quot;&gt;&lt;/script&gt;&lt;script src=&quot;/libs/justifiedGallery/justifiedGallery.min.js&quot;&gt;&lt;/script&gt;&lt;script&gt;  $(&quot;a[rel=example_group]&quot;).fancybox();  $(&quot;#encrypt-blog&quot;).justifiedGallery({margins: 5, rowHeight: 150});&lt;/script&gt;</code></pre><blockquote><p>同样需要在你的链接填写根网址，根网址见上，这里要修改两处</p></blockquote><h2 id="5-5-添加相册json配置文件"><a href="#5-5-添加相册json配置文件" class="headerlink" title="5.5 添加相册json配置文件"></a>5.5 添加相册json配置文件</h2><p>在根目录<code>urces/_data/</code>下新建一个 <code>galleries.json</code> 的文件，<code>json</code>代码如下：</p><pre><code>[  {    &quot;name&quot;: &quot;相册名字&quot;,    &quot;cover&quot;: &quot;raw/master/图片名字&quot;,    &quot;description&quot;: &quot;相片描述&quot;,    &quot;photos&quot;: [      &quot;raw/master/p1.png&quot;,      &quot;raw/master/p2.png&quot;,      &quot;raw/master/p3.png&quot;,      &quot;raw/master/p4.png&quot;    ]  }]</code></pre><blockquote><p>这里目录需要跟上分支，例如<code>raw/master/</code>(仅限码云)，其他没测试过</p></blockquote><p>字段含义：</p><ul><li>name是相册标题</li><li>cover是封面图片</li><li>description是相册介绍</li><li>photos是图片列表</li></ul><p>配置文件建好了之后还没完，只剩最后一个步骤了，在<code>galleries</code>目录下建立对应的相册名称目录和文件，比如我这个相册需要新建名称为 2020 目录，然后下面再分别新建index.md文件，文件内容为：</p><pre><code>---title: 2020date: 2020-02-19 10:51:50type: &quot;gallery&quot;layout: &quot;gallery&quot;---</code></pre><h2 id="5-6-安装插件-巨坑"><a href="#5-6-安装插件-巨坑" class="headerlink" title="5.6 安装插件(巨坑)"></a>5.6 安装插件(巨坑)</h2><p>到以上步骤，其实编译一下，图片应该可以显示了，但是布局丑陋，也没法放大，是因为还差了两个插件，这也是最蛋疼的步骤，就是这个相册的显示效果依赖jquery插件，分别是fancybox和justifiedGallery，一个是保证图片按照自身比例布局，一个是实现点击放大效果。</p><p>两个插件版本会发生冲突，所以网上的一些教程你复制过来不能用，报错，多半这个原因，经过大量测试，fancybox插件用v1.4.3版本，justifiedGallery可以用最新版本，我用的v4.0.0</p><p>然后把这两个插件文件放到主题<code>\source\libs</code>文件夹下，例如我的：<code>C:\Users\user\Desktop\lovelijunyi\themes\hexo-theme-matery\source\libs</code></p><p><strong>注意</strong>：另外这两个插件都有<strong>普通和min</strong>两个版本，必须选择min的版本</p><h2 id="5-7-加密相册"><a href="#5-7-加密相册" class="headerlink" title="5.7 加密相册"></a>5.7 加密相册</h2><p>首先在站点配置文件下添加下面的配置：</p><pre><code>#博文加密  npm install --save hexo-blog-encryptencrypt:   enable: true</code></pre><p>在主题目录下新建一下目录和文件，<code>scripts/helpers/encrypt.js，encrypt.js</code>内代码如下：</p><pre><code>/* global hexo */&#39;use strict&#39;;const CryptoJS = require(&#39;crypto-js&#39;);hexo.extend.helper.register(&#39;aes&#39;, function(content,password){  content = escape(content);  content = CryptoJS.enc.Utf8.parse(content);  content = CryptoJS.enc.Base64.stringify(content);  content = CryptoJS.AES.encrypt(content, String(password)).toString();  return content;});</code></pre><p>然后再主题目录的<code>source/css.my.css</code>内添加以下代码：</p><pre><code>.hbe-input-container  .btn-decrypt{  display: inline-block;  vertical-align: top;  width: 120px;  height: 32px;  line-height: 32px;  font-size: 16px;  color: #ffffff;  background-color: #3f90ff;  text-align: center;  -webkit-border-radius: 3px;  -moz-border-radius: 3px;  border-radius: 3px;}</code></pre><p>这里同样需要插件，如下两个，新建放到对应文件夹即可</p><ul><li><p><code>matery/source/js/crypto-js.js：https://cdn.jsdelivr.net/gh/Yafine/cdn@3.1.1/source/js/crypto-js.js</code></p></li><li><p><code>matery/source/js/gallery-encrypt.js：https://cdn.jsdelivr.net/gh/Yafine/cdn@3.1.1/source/js/gallery-encrypt.js</code></p></li></ul><p>在新建的<code>index.md</code>文章内添加<code>password</code>属性，后面写上你的密码即可，然后执行命令，查看本地效果即可</p><p><strong>注意事项</strong></p><p>加密相册需要用到<code>crypto-js.js</code>文件，这个文件是安装<code>hexo-blog-encrypt</code>插件，然后发布后才会生成的，如果不想安装这个插件，则需要手动安装，命令如下：</p><pre><code>npm install crypto-js</code></pre><p>然后在插件目录下找到<code>crypto-js.js</code>文件，复制出来放到主题目录下的<code>source/js</code>目录下，引用路径也要改一下。</p><p>当然你也可以用我的，这些加密所需的文件在搭建相册页面时，我已经集成到文件里了。都在上面提到了。</p><h1 id="6-增加载入动画"><a href="#6-增加载入动画" class="headerlink" title="6. 增加载入动画"></a>6. 增加载入动画</h1><h2 id="6-1-转跳页面增加加载动画"><a href="#6-1-转跳页面增加加载动画" class="headerlink" title="6.1 转跳页面增加加载动画"></a>6.1 转跳页面增加加载动画</h2><p>主目录下新建一个文件夹，名为<code>scripts</code>，紧接着在新建的文件夹下新建一个名为<code>loading-pages</code>的js文件，然后再这个js文件填入下面的代码：</p><pre><code>/* global hexo */&quot;use strict&quot;;hexo.extend.filter.register(&#39;after_render:html&#39;, function (htmlContent) {     const injectHead = `&lt;style type=&quot;text/css&quot; lang=&quot;css&quot;&gt;    #loading-container{        position: fixed;        top: 0;        left: 0;        min-height: 100vh;        width: 100vw;        z-index: 9999;        display: flex;        flex-direction: column;        justify-content: center;        align-items: center;        background: #FFF;        text-align: center;        /* loader页面消失采用渐隐的方式*/        -webkit-transition: opacity 1s ease;        -moz-transition: opacity 1s ease;        -o-transition: opacity 1s ease;        transition: opacity 1s ease;    }    .loading-image{        width: 120px;        height: 50px;        transform: translate(-50%);    }    .loading-image div:nth-child(2) {        -webkit-animation: pacman-balls 1s linear 0s infinite;        animation: pacman-balls 1s linear 0s infinite    }    .loading-image div:nth-child(3) {        -webkit-animation: pacman-balls 1s linear .33s infinite;        animation: pacman-balls 1s linear .33s infinite    }    .loading-image div:nth-child(4) {        -webkit-animation: pacman-balls 1s linear .66s infinite;        animation: pacman-balls 1s linear .66s infinite    }    .loading-image div:nth-child(5) {        -webkit-animation: pacman-balls 1s linear .99s infinite;        animation: pacman-balls 1s linear .99s infinite    }   .loading-image div:first-of-type {        width: 0;        height: 0;        border: 25px solid #49b1f5;        border-right-color: transparent;        border-radius: 25px;        -webkit-animation: rotate_pacman_half_up .5s 0s infinite;        animation: rotate_pacman_half_up .5s 0s infinite;    }    .loading-image div:nth-child(2) {        width: 0;        height: 0;        border: 25px solid #49b1f5;        border-right-color: transparent;        border-radius: 25px;        -webkit-animation: rotate_pacman_half_down .5s 0s infinite;        animation: rotate_pacman_half_down .5s 0s infinite;        margin-top: -50px;    }    @-webkit-keyframes rotate_pacman_half_up {0% {transform: rotate(270deg)}50% {transform: rotate(1turn)}to {transform: rotate(270deg)}}    @keyframes rotate_pacman_half_up {0% {transform: rotate(270deg)}50% {transform: rotate(1turn)}to {transform: rotate(270deg)}}    @-webkit-keyframes rotate_pacman_half_down {0% {transform: rotate(90deg)}50% {transform: rotate(0deg)}to {transform: rotate(90deg)}}    @keyframes rotate_pacman_half_down {0% {transform: rotate(90deg)}50% {transform: rotate(0deg)}to {transform: rotate(90deg)}}    @-webkit-keyframes pacman-balls {75% {opacity: .7}to {transform: translate(-100px, -6.25px)}}    @keyframes pacman-balls {75% {opacity: .7}to {transform: translate(-100px, -6.25px)}}    .loading-image div:nth-child(3),    .loading-image div:nth-child(4),    .loading-image div:nth-child(5),    .loading-image div:nth-child(6){        background-color: #49b1f5;        width: 15px;        height: 15px;        border-radius: 100%;        margin: 2px;        width: 10px;        height: 10px;        position: absolute;        transform: translateY(-6.25px);        top: 25px;        left: 100px;    }    .loading-text{        margin-bottom: 20vh;        text-align: center;        color: #2c3e50;        font-size: 2rem;        box-sizing: border-box;        padding: 0 10px;        text-shadow: 0 2px 10px rgba(0,0,0,0.2);    }    @media only screen and (max-width: 500px) {         .loading-text{            font-size: 1.5rem;         }    }    .fadeout {        opacity: 0;        filter: alpha(opacity=0);    }    /* logo出现动画 */    @-webkit-keyframes fadeInDown{0%{opacity:0;-webkit-transform:translate3d(0,-100%,0);transform:translate3d(0,-100%,0)}100%{opacity:1;-webkit-transform:none;transform:none}}    @keyframes fadeInDown{0%{opacity:0;-webkit-transform:translate3d(0,-100%,0);}} &lt;/style&gt; &lt;script&gt;(function () {    const loaded = function(){       setTimeout(function(){            const loader = document.getElementById(&quot;loading-container&quot;);            loader.className=&quot;fadeout&quot; ;//使用渐隐的方法淡出loading page            // document.getElementById(&quot;body-wrap&quot;).style.display=&quot;flex&quot;;            setTimeout(function(){                loader.style.display=&quot;none&quot;;            },1000);         },1000);//强制显示loading page 1s      };    loaded();})() &lt;/script&gt;`;     const injectBody = ` &lt;div id=&quot;loading-container&quot;&gt;     &lt;p class=&quot;loading-text&quot;&gt;玩命加载中 . . . &lt;/p&gt;      &lt;div class=&quot;loading-image&quot;&gt;         &lt;div&gt;&lt;/div&gt;         &lt;div&gt;&lt;/div&gt;         &lt;div&gt;&lt;/div&gt;         &lt;div&gt;&lt;/div&gt;          &lt;div&gt;&lt;/div&gt;     &lt;/div&gt; &lt;/div&gt;`;     if (/&lt;\/head&gt;/gi.test(htmlContent)) {         let lastIndex = htmlContent.lastIndexOf(&#39;&lt;/head&gt;&#39;);         htmlContent = htmlContent.substring(0, lastIndex) + injectHead + htmlContent.substring(lastIndex, htmlContent.length);     }     if (/&lt;body&gt;/gi.test(htmlContent)) {         let index = htmlContent.indexOf(&#39;&lt;body&gt;&#39;);         htmlContent = htmlContent.substring(0, index) + injectBody + htmlContent.substring(index, htmlContent.length);     }     return htmlContent; }, 1);</code></pre><h2 id="6-2-图片增加加载动画-懒加载"><a href="#6-2-图片增加加载动画-懒加载" class="headerlink" title="6.2 图片增加加载动画(懒加载)"></a>6.2 图片增加加载动画(懒加载)</h2><p>安装</p><pre><code>npm install hexo-lazyload-image --save</code></pre><p>之后在站点配置文件<code>config</code>下添加下面的代码，同时需要在<code>images</code>文件夹下放一张<code>loading.gif</code>的图片</p><pre><code># 图片懒加载lazyload:  enable: true # 是否开启图片懒加载  onlypost: false # 是否只对文章的图片做懒加载  loadingImg: /images/loading.gif</code></pre><p>如果在 markdown 或 html 中指定 img 标记的属性，也可以禁用延迟进程</p><pre><code>&lt;img no-lazy src=&quot;abc.png&quot; /&gt;</code></pre><p><strong>优化冲突</strong></p><p>查看大图，发现全部为loading加载图，原因是因为<strong>懒加载插件</strong>与其他插件发生了冲突。</p><p><strong>解决办法</strong>：修改主题文件下的<code>matery.js</code>，在108行左右添加以下代码：</p><pre><code>$(document).find(&#39;img[data-original]&#39;).each(function(){    $(this).parent().attr(&quot;href&quot;, $(this).attr(&quot;data-original&quot;));});</code></pre><p>加完后如下</p><pre><code>。。。        $(&#39;#articleContent, #myGallery&#39;).lightGallery({            selector: &#39;.img-item&#39;,            // 启用字幕            subHtmlSelectorRelative: true        });        // 懒加载防止插件冲突        $(document).find(&#39;img[data-original]&#39;).each(function(){        $(this).parent().attr(&quot;href&quot;, $(this).attr(&quot;data-original&quot;));        });        // progress bar init        const progressElement = window.document.querySelector(&#39;.progress-bar&#39;);        if (progressElement) {            new ScrollProgress((x, y) =&gt; {                progressElement.st。。。</code></pre><h2 id="修复主页logo"><a href="#修复主页logo" class="headerlink" title="修复主页logo"></a>修复主页logo</h2><p>点击首页logo不是跳转到首页，而是查看logo图片，解决办法如下：</p><p>修改主题文件夹下<code>layout/_partial/header.ejs</code>文件，原代码为：</p><pre><code class="javascript">&lt;div class=&quot;brand-logo&quot;&gt;    &lt;a href=&quot;&lt;%- url_for() %&gt;&quot; class=&quot;waves-effect waves-light&quot;&gt;         &lt;% if (theme.logo !== undefined &amp;&amp; theme.logo.length &gt; 0) { %&gt;         &lt;img src=&quot;&lt;%= theme.logo %&gt;&quot; class=&quot;logo-img&quot; alt=&quot;LOGO&quot;&gt;         &lt;% } %&gt;         &lt;span class=&quot;logo-span&quot;&gt;&lt;%- config.title %&gt;&lt;/span&gt;    &lt;/a&gt;&lt;/div&gt;</code></pre><p>修改为：</p><pre><code class="javascript">&lt;div class=&quot;brand-logo&quot;&gt;    &lt;a href=&quot;&lt;%- url_for() %&gt;&quot; class=&quot;waves-effect waves-light&quot;&gt;        &lt;div&gt;            &lt;% if (theme.logo !== undefined &amp;&amp; theme.logo.length &gt; 0) { %&gt;            &lt;img src=&quot;&lt;%= theme.logo %&gt;&quot; class=&quot;logo-img&quot; alt=&quot;LOGO&quot;&gt;            &lt;% } %&gt;            &lt;span class=&quot;logo-span&quot;&gt;&lt;%- config.title %&gt;&lt;/span&gt;        &lt;/div&gt;    &lt;/a&gt;&lt;/div&gt;</code></pre><h3 id="优化缓存"><a href="#优化缓存" class="headerlink" title="优化缓存"></a>优化缓存</h3><ul><li><p>其实第一次加载后本地都是有缓存的，如果每次都把loading显示出来就不那么好看</p></li><li><p>所以我们需要对插件进行魔改，让图片稍微提前加载，避开加载动画</p></li><li><p>打开<code>Hexo根目录&gt;node_modules &gt; hexo-lazyload-image &gt; lib &gt; simple-lazyload.js</code>文件</p></li><li><p>第9行修改为：</p></li></ul><pre><code class="js">// 懒加载优化&amp;&amp; rect.top &lt;= (window.innerHeight +240 || document.documentElement.clientHeight +240)</code></pre><ul><li>作用：提前240个像素加载图片；当然这个值也可以根据自己情况修改</li></ul><blockquote><p>参考：<a href="https://blog.sky03.cn/posts/42790.html#toc-heading-5" target="_blank" rel="noopener">https://blog.sky03.cn/posts/42790.html#toc-heading-5</a></p></blockquote><h1 id="7-关闭音乐的歌词显示"><a href="#7-关闭音乐的歌词显示" class="headerlink" title="7. 关闭音乐的歌词显示"></a>7. 关闭音乐的歌词显示</h1><p>默认音乐播放器会显示歌词，影响观感，这里说明如何关闭</p><p>找到，主题下的一个css文件，<code>APlayer.min.css</code>，例如我的是在这个目录下：<code>C:\Users\user\Desktop\我的博客\lovelijunyi\themes\hexo-theme-matery\source\libs\aplayer</code><br>打开后搜索<code>.aplayer-lrc{display:block}</code><br>将block改为none，即为<code>.aplayer-lrc{display:none}</code></p><h1 id="8-让博客支持脑图-思维导图"><a href="#8-让博客支持脑图-思维导图" class="headerlink" title="8. 让博客支持脑图 (思维导图)"></a>8. 让博客支持脑图 (思维导图)</h1><p>需要先安装插件</p><pre><code class="shell">npm install hexo-simple-mindmap</code></pre><pre><code>`mindmap` 是思维导图渲染的标志，画板尺寸有三种规格：- `mindmap-sm` 小号尺寸的画板- `mindmap-md` 中号尺寸的画板- `mindmap-lg` 大号尺寸的画板</code></pre><p>思维导图的内容和层级关系通过无序列表表示，支持基本的<strong>文字和超链接</strong>。</p><blockquote><p>在 Hexo 中使用思维导图前言操作指南准备需要的文件为主题添加 CSS/JS 文件使用方法</p></blockquote><h1 id="9-优化文章永久链接"><a href="#9-优化文章永久链接" class="headerlink" title="9. 优化文章永久链接"></a>9. 优化文章永久链接</h1><p>先解释一下什么叫<strong>文章永久链接</strong>，就是当时转发你网站的文章时会生成的一个链接。例如</p><pre><code>https://xxxxx.gitee.io/posts/f295.html目前hexo主要采用以下两种**文章永久链接**</code></pre><h2 id="9-1-年月和拼音生成永久链接"><a href="#9-1-年月和拼音生成永久链接" class="headerlink" title="9.1 年月和拼音生成永久链接"></a>9.1 年月和拼音生成永久链接</h2><p>采用年月和文章拼音组合，这种好处是易读，缺点很明显，太长</p><p><strong>先看看效果</strong></p><pre><code>https://lovelijunyi.gitee.io/2020/04/10/photoshop/ps-xuan-qu-yu-kou-tu-pian/</code></pre><p>安装插件</p><p><code></code> `bash<br>npm i hexo-permalink-pinyin –save</p><pre><code>然后在站点根目录config中设置两处，一个是修改`permalink````yamlpermalink: :year/:month/:day/:title/</code></pre><p>另外一个是添加配置<code>permalink_pinyin</code></p><pre><code class="yaml">permalink_pinyin:  enable: true #是否开启  separator: &#39;-&#39;   # default: &#39;-&#39;链接符</code></pre><h2 id="9-2-使用编码生成永久链接"><a href="#9-2-使用编码生成永久链接" class="headerlink" title="9.2 使用编码生成永久链接"></a>9.2 使用编码生成永久链接</h2><p>采用编码形式，这种缺点是可读性差，优点很明显，链接很短</p><p>先看看效果</p><pre><code>https://lovelijunyi.gitee.io/posts/f295.html</code></pre><p>安装插件</p><pre><code class="bash">npm install hexo-abbrlink --save</code></pre><p>然后在站点根目录config中设置两处，一个是修改<code>permalink</code></p><pre><code class="bash">permalink: posts/:abbrlink.html</code></pre><p>在根目录config添加如下配置</p><pre><code class="bash">abbrlink:  alg: crc32  #算法 crc16(default) and crc32  rep: hex    #进制 dec(default) and hex 十进制和十六进制，默认为10进制。</code></pre><p>不同算法组成的链接有如下几种，挑选自己喜欢的</p><pre><code>crc16 &amp; hexhttps://lovelijunyi.gitee.io/posts/66c8.htmlcrc16 &amp; dechttps://lovelijunyi.gitee.io/posts/65535.htmlcrc32 &amp; hexhttps://lovelijunyi.gitee.io/posts/8ddf18fb.htmlcrc32 &amp; dechttps://lovelijunyi.gitee.io/posts/1690090958.html</code></pre><h1 id="10-修改文章发布统计图的时间区间"><a href="#10-修改文章发布统计图的时间区间" class="headerlink" title="10. 修改文章发布统计图的时间区间"></a>10. 修改文章发布统计图的时间区间</h1><p>主要是修改这个图的时间区间，<strong>默认区间是一年</strong>(开始时间就是当前年月往前一年)，我要修改为3个月</p><p><img src="https://gitee.com/badenough/blogImage/raw/master/img/20200428213432.png" alt=""></p><p>主要修改<code>themes/matery/layout/_widget/post-charts.ejs</code>，大约在39行左右，源文件的代码为：</p><pre><code>var startDate = moment().subtract(1, &#39;years&#39;).startOf(&#39;month&#39;);</code></pre><p>说明：</p><ol><li>startDate变量为开始时间，也就是文章发布统计图中X轴中的开始时间</li><li>subtract(Number, String)，这里表示一年</li><li>startOf(‘month’)，这里表示当月</li></ol><p><strong>简单说明</strong>：这串代码的意思就是，起始时间当前时间往前推1年，假设现在是2020的4月，往前推一年就是2019的4月，那么统计区间就等是<code>[2019.4，2020.4]</code></p><p>修改方法：</p><p>一般来说可以把时间区间<strong>改成3个月</strong>，假设现在是2020的4月，往前推2个月就是2019的2月，先要把，years改成months，再改数字，如下</p><pre><code>var startDate = moment().subtract(1, &#39;years&#39;).startOf(&#39;month&#39;);</code></pre><p>改为：</p><pre><code>var startDate = moment().subtract(2, &#39;months&#39;).startOf(&#39;month&#39;);</code></pre><p>这样区间就是<code>[2020.2，2020.4]</code>，当然这串代码会一直统计进三个月的文章数量，推广一下就是</p><p>文章的统计区间就是<code>[2020.2+n，2020.4+n]</code>，n是月数。</p><h1 id="11-tag标签增强"><a href="#11-tag标签增强" class="headerlink" title="11. tag标签增强"></a>11. tag标签增强</h1><p>添加方法：</p><p>首先在<strong>主题目录</strong>（不是根目录）下新建scripts目录，接着在此目录下新建<code>block.js</code>文件，填入以下代码：</p><pre><code>hexo.extend.tag.register(&#39;r&#39;, function(args, content){  var className =  args.join(&#39; &#39;);  return &#39;&lt;div class=&quot;uk-alert uk-alert-danger&quot;&gt;&lt;i class=&quot;fas fa-exclamation-triangle&quot;&gt;&lt;/i&gt; &#39; + content + &#39;&lt;/div&gt;&#39;;}, {ends: true});hexo.extend.tag.register(&#39;g&#39;, function(args, content){  var className =  args.join(&#39; &#39;);  return &#39;&lt;div class=&quot;uk-alert uk-alert-success&quot;&gt;&lt;i class=&quot;fa fa-check-circle&quot;&gt;&lt;/i&gt; &#39; + content + &#39;&lt;/div&gt;&#39;;}, {ends: true});hexo.extend.tag.register(&#39;y&#39;, function(args, content){  var className =  args.join(&#39; &#39;);  return &#39;&lt;div class=&quot;uk-alert uk-alert-warning&quot;&gt;&lt;i class=&quot;fa fa-exclamation-circle&quot;&gt;&lt;/i&gt; &#39; + content + &#39;&lt;/div&gt;&#39;;}, {ends: true});</code></pre><p>然后在<code>head.ejs</code>文件添加以下<code>css</code>样式，注意是在文件最顶端添加：</p><pre><code>&lt;style type=&quot;text/css&quot;&gt;        .uk-alert {            margin-bottom: 15px;            padding: 10px;            background: #ebf7fd;            color: #2d7091;            border: 1px solid rgba(45, 112, 145, 0.3);            border-radius: 4px;            text-shadow: 0 1px 0 #ffffff;        }        .uk-alert-success {            background: #e8ece2;            color: #659f13;            border-left: 6px solid rgba(120, 199, 9);            font-weight: 600;        }        .uk-alert-warning {            background: #fff1f0;            color: rgb(73, 59, 156);            border-left: 6px solid rgb(83, 27, 184, 0.3);            font-weight: 600;        }        .uk-alert-danger {            background: #f8f8f6;            color: #eb360d;            border-left: 6px solid#eb360d;            font-weight: 600;        } &lt;/style&gt;</code></pre><p>使用方法：</p><pre><code>{%r%}紅色{%endr%}{%g%}綠色{%endg%}{%y%}黃色{%endy%}</code></pre><p>效果如下：</p><p><img src="https://gitee.com/badenough/blogImage/raw/master/img/20200428203923.png" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> matery主题 </tag>
            
            <tag> 博客优化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>小米启动MIUI12手机操作系统内测</title>
      <link href="/p/ef50.html"/>
      <url>/p/ef50.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>来源：中国证券网<br>上证报中国证券网讯（记者 温婷）</p></blockquote><p>小米27日发布MIUI12手机操作系统，并于同日开启内测报名申请。预计到6月底，将有超过40款小米机型迎来MIUI12稳定版的陆续推送升级。</p><p>对于最新发布的MIUI12，小米集团董事长兼CEO雷军给予了高度认可。“MIUI是小米的第一个产品，快速奔跑的十年离不开每一位发烧友的支持，”他表示，“MIUI12是小米的巅峰之作，在设计理念、隐私保护等方面都是安卓领域的领跑者。”</p><p>据悉，首批启动的MIUI12系统内测支持小米10 Pro、小米10、小米10青春版、小米9 Pro 5G、小米9尊享透明版、小米9、Redmi K30 Pro系列、Redmi K30系列、Redmi K20 Pro、Redmi K20等机型升级。</p><p>新系统除了在界面设计、壁纸以及互动方面的升级外，通过照明弹、拦截网、隐匿面具三个模块的功能设计，特别强调对于用户隐私及使用安全的考虑。此外，MIUI12新增小米健康功能。通过小米健康可便捷记录和跟踪用户的健康状况，如运动跟踪、睡眠监测、体重跟踪、经期助手与站立提醒等，用户可以轻松获得健康评估建议。</p><p>同时，基于小米深度学习推理框架MACE Micro，小米自研了离线AI运动行为感知算法“灵弦”，用户可在手机上体验到高精确度且低功耗的自动运动跟踪服务，一整天耗电不足1%。</p><p>小米同日还发布了小米10青春版、小米手表Color X Keith Haring联名版和小米蓝牙耳机Line Free。其中小米10青春版进一步针对5G中端市场以及年轻消费者，4月27日16点开启预售，售价2099元起。</p>]]></content>
      
      
      <categories>
          
          <category> 新闻 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 小米 </tag>
            
            <tag> MIUI12 </tag>
            
            <tag> 新系统 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo博客进阶－相册和独立域名</title>
      <link href="/p/39c6.html"/>
      <url>/p/39c6.html</url>
      
        <content type="html"><![CDATA[<p>之前我已经写了一篇文章详细的讲述了如何使用hexo搭建github博客。如果还没有看的可以去看看，hexo搭建博客</p><p>其实，根据这篇文章的过程我们就能够搭建一个专属于自己，并且非常美观的博客了。但是如果你像我一样喜欢折腾，喜欢做到极致，比如添加打赏，添加文章导航，以及文章阅读次数，这些都很简单，按照主题文件的模版一点点修改，就能实现自己想要的效果了。</p><p>这篇文章主要记录我折腾的两个功能： 相册和独立域名。</p><h1 id="相册"><a href="#相册" class="headerlink" title="相册"></a>相册</h1><p>首先，看看效果是非常好的。</p><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>然后我们分析一下，想要获取相册图片，首先得拿到图片得线上地址，其次，我们可以想到，既然我们的博客内容都放在了github得服务器，那么图片又何尝不能呢？</p><p>使用hexo搭建博客的同学都知道，github上会建立一个名为username.github.io的仓库，而且仓库只存储了整个项目的一部分（source文件夹的内容），而且貌似这个仓库有大小限制，总之就是说不能把图片放在这个仓库里。</p><p>我们再考虑另一个问题，假如我们有一天需要在另一台电脑写博客怎么办？所以博客备份就是需要的了。那么好，我们在Github 上再建一个仓库，用来存储整个博客项目的文件，假如某一天换个环境，直接全部down下来，就能拿到所有文章的源文件了，所以正好，我们可以在根目录下新建一个photos文件夹用来存放相册需要展示的图片文件了。</p><h4 id="ok，分析结束，敲定技术方案："><a href="#ok，分析结束，敲定技术方案：" class="headerlink" title="ok，分析结束，敲定技术方案："></a>ok，分析结束，敲定技术方案：</h4><p>我们新建文件夹photos用来存放图片文件，然后新建一个基于nodejs的js文件用来读取所有图片再生成一个json接口文件供相册页面的js文件使用。</p><h2 id="存放照片"><a href="#存放照片" class="headerlink" title="存放照片"></a>存放照片</h2><p>在博客的根目录下创建一个photos的文件夹，里面存放你想要展示的照片文件。然后把整个项目部署到github上，才能访问到图片的线上地址。</p><h1 id="生成json文件"><a href="#生成json文件" class="headerlink" title="生成json文件"></a>生成json文件</h1><p>在根目录下创建一个nodejs文件tool.js，内容如下：</p><pre><code>&quot;use strict&quot;;var fs = require(&quot;fs&quot;);var path = &quot;./photos/&quot;;fs.readdir(path, function (err, files) {    if (err) {        return;    }    var arr = [];    (function iterator(index) {        if (index == files.length) {            fs.writeFile(&quot;./source/photos/data.json&quot;, JSON.stringify(arr, null, &quot;\t&quot;));            console.log(&#39;get img success!&#39;);            return;        }        fs.stat(path + files[index], function (err, stats) {            if (err) {                return;            }            if (stats.isFile()) {                arr.push(files[index]);            }            iterator(index + 1);        })    }(0));});</code></pre><p>运行这个文件<code>node tool.js</code>，运行之后，会在<code>/source/photos/</code>目录下创建一个<code>data.json</code>文件，内容如下：</p><pre><code>[    &quot;IMG_0011.JPG&quot;,    &quot;IMG_0019.JPG&quot;,    &quot;IMG_0020.JPG&quot;,    &quot;IMG_0022.JPG&quot;,    &quot;IMG_0045.JPG&quot;,    &quot;IMG_0099.JPG&quot;,    &quot;IMG_0106.JPG&quot;,    &quot;IMG_0191.JPG&quot;,    &quot;IMG_0306.JPG&quot;,    &quot;IMG_0438.JPG&quot;,    &quot;IMG_0451.JPG&quot;,    &quot;IMG_0648.JPG&quot;,    &quot;IMG_0670.JPG&quot;,    &quot;IMG_0842.JPG&quot;,    &quot;IMG_1078.JPG&quot;,    &quot;IMG_1239.JPG&quot;,    &quot;IMG_1429.JPG&quot;,    &quot;IMG_1634.JPG&quot;]</code></pre><p>每次修改<code>photos</code>文件夹里的照片，都得运行一下这个<code>js</code>文件，以更新生成的<code>data.json</code>文件。</p><h2 id="创建相册页面"><a href="#创建相册页面" class="headerlink" title="创建相册页面"></a>创建相册页面</h2><p>在根目录下执行命令：</p><pre><code>hexo page photos</code></pre><p>会在<code>source/photos</code>目录下生成一个<code>index.md</code>文件，编辑文件内容如下：</p><pre><code>&lt;link type=&quot;text/css&quot; href=&quot;/fancybox/jquery.fancybox.css&quot; rel=&quot;stylesheet&quot;&gt;&lt;div class=&quot;instagram&quot;&gt;    &lt;section class=&quot;archives album&quot;&gt;        &lt;ul class=&quot;img-box-ul&quot;&gt;&lt;/ul&gt;    &lt;/section&gt;&lt;/div&gt;</code></pre><p><strong>修改</strong> <code>themes/yilia/js/photo.js</code>：</p><pre><code>...init: function () {    var that = this;    $.getJSON(&quot;/photos/data.json&quot;, function (data) {        that.render(that.page, data);        that.scroll(data);    });},render: function (page, data) {    var begin = (page - 1) * this.offset;    var end = page * this.offset;    if (begin &gt;= data.length) return;    var html, li = &quot;&quot;;    for (var i = begin; i &lt; end &amp;&amp; i &lt; data.length; i++) {        li += &#39;&lt;li&gt;&lt;div class=&quot;img-box&quot;&gt;&#39; + &#39;&lt;a class=&quot;img-bg&quot; rel=&quot;example_group&quot; href=&quot;https://raw.githubusercontent.com/jarson7426/blog-back-up/master/photos/&#39; + data[i] + &#39;&quot;&gt;&lt;/a&gt;&#39; + &#39;&lt;img lazy-src=&quot;https://raw.githubusercontent.com/jarson7426/blog-back-up/master/photos/&#39; + data[i] + &#39;&quot; /&gt;&#39; + &#39;&lt;/li&gt;&#39;;    }    $(&quot;.img-box-ul&quot;).append(li);    $(&quot;.img-box-ul&quot;).lazyload();    $(&quot;a[rel=example_group]&quot;).fancybox();},...</code></pre><p>上述文件读取json文件，将图片的线上url拼接起来渲染在页面上，相册样式使用yilia主题提供。然后上传这些文件，根据自定义的路径访问url，就能看到相册了。那么，到这里就基本完成了相册的制作。</p><h1 id="独立域名"><a href="#独立域名" class="headerlink" title="独立域名"></a>独立域名</h1><p>到目前为止，我们的博客都是使用github分配的二级域名luckykun.github.io来访问的， 那么我们会想如果能自己设置个域名，是多么cool的事！要怎么办呢？那就继续往下看吧！</p><h2 id="购买域名"><a href="#购买域名" class="headerlink" title="购买域名"></a>购买域名</h2><p>去卖域名的网站去买一个域名，我是在万网买的域名，如图所示：</p><p>找到自己喜欢的域名，购买就好了。</p><h2 id="域名解析"><a href="#域名解析" class="headerlink" title="域名解析"></a>域名解析</h2><p>有了自己的域名之后，luckykun.github.io替换成luckykun.com，只要设置下解析即可，进入万网的云解析页面，添加如下解析：</p><p>说明：IPv4是github服务器对应的ip地址，这步一定要设置，否则访问不了。</p><h2 id="添加CNAME"><a href="#添加CNAME" class="headerlink" title="添加CNAME"></a>添加CNAME</h2><p>然后回到博客项目根目录，在source/下新建一个名为CNAME的文件，里面的内容写入luckykun.com即可。</p><p>然后在浏览器输入luckykun.com，即可代替之前的github.io的域名，访问到自己的博客页面了。实在是台、太cool了！</p><h1 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h1><p>好的，文章写道这里就结束了，感谢大家的阅读，如果文章能给大家带来帮助就最好了，如果读者还有任何疑问，欢迎留言，我会尽力解答。再见啦～～</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> node.js/photo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo Indigo主题添加友链</title>
      <link href="/p/de0c.html"/>
      <url>/p/de0c.html</url>
      
        <content type="html"><![CDATA[<p>Indigo主题是一款HEXO的基于material设计的主题，个人比较喜欢material设计的主题，由于之前硬盘损坏且没有备份原主题material，于是换上了Indigo，但是没有友链功能，抽了点时间加上了。<br>现在开始吧！</p><h2 id="首先"><a href="#首先" class="headerlink" title="首先"></a>首先</h2><blockquote><p>在hexo，blog，themes，indigo，layout下新建links.ejs和link.ejs</p></blockquote><p>代码如下</p><p><code>links.ejs</code><br>如图这样：<br><img src="https://gitee.com/badenough/blogImage/raw/master/img/20200428190501.png" alt=""></p><pre><code>&lt;%- partial(&#39;_partial/header&#39;, {    title: locals.title || theme.links_title,    hdClass: &#39;links-header&#39;}) %&gt;&lt;div class=&quot;container body-wrap fade&quot;&gt;    &lt;% if (theme.links &amp;&amp; theme.links.length) { %&gt;    &lt;h3 class=&quot;archive-separator&quot;&gt;        &lt;%=theme.links_title%&gt;    &lt;/h3&gt;    &lt;div class=&quot;waterfall&quot;&gt;        &lt;% theme.links.forEach(function(links) { %&gt;        &lt;div class=&quot;waterfall-item&quot;&gt;            &lt;article class=&quot;article-card archive-article&quot;&gt;                &lt;h3 class=&quot;post-title&quot; itemprop=&quot;name&quot;&gt;                    &lt;a class=&quot;post-title-link&quot; href=&quot;&lt;%- links.url %&gt;&quot; target=&quot;_blank&quot; itemprop=&quot;url&quot;&gt;                         &lt;%- links.name %&gt; ||                         &lt;%- links.intro %&gt;                                   &lt;/a&gt;                    &lt;img src=&quot; &lt;%- links.avatar %&gt; &quot; width=&quot;25px&quot; height=&quot;25px&quot; /&gt;                &lt;/h3&gt;            &lt;/article&gt;        &lt;/div&gt;        &lt;%})%&gt;    &lt;/div&gt;    &amp;nbsp;    &lt;p&gt;添加以下资料，相互添加友链吧！&lt;/p&gt;    &lt;p&gt;&lt;strong&gt;我的站点资料：&lt;/strong&gt;&lt;/p&gt;    &lt;p&gt;- 名字：思空の笔记 &lt;/p&gt;    &lt;p&gt;- Blog 地址： https://www.ilovea.asia/ &lt;/p&gt;    &lt;p&gt;- Blog 头像： https://www.ilovea.asia/img/bdenough.jpg &lt;/p&gt;    &lt;p&gt;- Blog 简介： 一个爱学习的小渣渣！ &lt;/p&gt;       &lt;% }%&gt;    &lt;%- partial(&#39;_partial/paginator&#39;) %&gt;&lt;/div&gt;</code></pre><p><code>link.ejs</code></p><p>这个直接建一个空壳子就好了，其他不用。</p><h2 id="更改CSS"><a href="#更改CSS" class="headerlink" title="更改CSS"></a>更改CSS</h2><p>然后在<code>cmd/shell</code>中执行<code>hexo new page &#39;Links&#39;</code>，然后到hexo的文件夹中，blog文件夹打开，source文件夹，Links文件，更改<code>index.md</code>为如下内容<br>如图这样：<br><img src="https://gitee.com/badenough/blogImage/raw/master/img/20200428190809.png" alt=""></p><pre><code>layout: linkscomments: false---</code></pre><p>接着在hexo文件夹中，blog文件夹打开，themes文件夹，indigo文件夹，source文件夹，css文件夹， <code>_partial</code>文件夹中的<code>header.less</code>搜索:<br><img src="https://gitee.com/badenough/blogImage/raw/master/img/20200428191317.png" alt=""></p><pre><code>.tags-header,.categories-header</code></pre><p>更改为:</p><pre><code>.tags-header,.categories-header,.links-header </code></pre><h2 id="config-yml设置"><a href="#config-yml设置" class="headerlink" title="config.yml设置"></a>config.yml设置</h2><p>最终如图所示：<br><img src="https://gitee.com/badenough/blogImage/raw/master/img/20200428191530.png" alt=""></p><p>在主题的config.yml中设置menu项，去除link前面的注释:</p><pre><code>  link:    text: 测试    url: /Links</code></pre><p>在主题的config.yml中设置# 页面标题项，添加</p><pre><code>links_title: 友情链接    </code></pre><p>最后，在主题的config.yml最后添加links项目，格式如下</p><pre><code>links:  - name: &quot;名称&quot;    url: &quot;链接&quot;  - name: &quot;名称&quot;    url: &quot;链接&quot;  - name: &quot;名称&quot;    url: &quot;链接&quot;  - name: &quot;名称&quot;    url: &quot;链接&quot;</code></pre><p>最终修改的文档如下:</p><pre><code>然后 cmd/shell 执行 hexo g 重新生成页面</code></pre>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo博客 </tag>
            
            <tag> indigo主题 </tag>
            
            <tag> 友链 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Brackets编辑器使用</title>
      <link href="/p/85ea.html"/>
      <url>/p/85ea.html</url>
      
        <content type="html"><![CDATA[<h2 id="常用快捷操作"><a href="#常用快捷操作" class="headerlink" title="常用快捷操作"></a>常用快捷操作</h2><pre><code>Ctrl + b 当选中一个文本时，离该文本最近的相同的文本会被高亮显示，这样，相同的2个文本就全部获得了焦点，可以同时更改高亮文本。（对，只会找寻最近的且只找到一个就不找了！惰性查找...）Ctrl+e 打开或关闭快速编辑Ctrl+d 复制当前行Ctrl+shift+d 删除当前行Ctrl+L 选中当前行Ctrl+Shift+O 打开快速导航Ctrl+/ 单行注释Ctrl+Shift+/ 多行注释Ctrl+x 剪切当前行Ctrl+Shift+a 标签环绕Ctrl+g 跳到至指定行（输行号）Ctrl+f 查找Ctrl+h 替换</code></pre><h2 id="期待改进之处"><a href="#期待改进之处" class="headerlink" title="期待改进之处"></a>期待改进之处</h2><ol><li><p>自带缩进参考线，无须再借助扩展。</p></li><li><p>不支持双击选中混在连续中文里的英文（实际上Brackets是原生支持简体和繁体中文），双击”Brackets“，期望只是想选中这个英文单词，而不是整段文字。</p></li><li><p>不支持Javascript函数的跳转（在函数调用的地方，点击函数名，跳转到该函数定义的目标点）。不支持相同单词的选中的高亮</p></li></ol><h2 id="解决的方法有两种："><a href="#解决的方法有两种：" class="headerlink" title="解决的方法有两种："></a>解决的方法有两种：</h2><ol><li><p><code>***，顺利爬墙...</code></p></li><li><p><code>brackets-registry.aboutweb.com</code>，这个网站罗列出了Brackets的所有扩展，找到所需的插件，下载压缩包，然后把扩展压缩包<code>（*.zip）</code>拖至扩展管理器右下角，重载即可。</p></li></ol><h2 id="常用扩展推荐"><a href="#常用扩展推荐" class="headerlink" title="常用扩展推荐"></a>常用扩展推荐</h2><ol><li><p>Emmet</p></li><li><p>Brackets SASS 将sass文件编译成css</p></li><li><p>Brackets Vue 支持Vue.js开发，及支持创建Vue组件<code>（*.vue）</code>文件及语法高亮等。</p></li><li><p>Indent Guides 缩进参看考线（这个扩展找寻了好久…）</p></li><li><p>Markdown Preview<code>*.md文件预览与编辑</code></p></li><li><p>Open In Browser 将html文件在浏览器中打开</p></li></ol><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><ol><li><p>Beautify 一键规整你的代码</p></li><li><p>Emmet 加快打码速度，提供诸如div&gt;ul&gt;li的快捷生成代码</p></li><li><p>Extension Highlighter 不同的文件后缀显示不同的颜色</p></li><li><p>JSHint 检查JS</p></li><li><p>tabs 把打开的文件列表从左边移动到头部</p></li><li><p>Themes for Brackets 众多的主题</p></li><li><p>Quick Search 选择一个单词，其他同名的也标注出来</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编辑器 </tag>
            
            <tag> Brackets </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>热工基础之制冷循环</title>
      <link href="/p/f1f0.html"/>
      <url>/p/f1f0.html</url>
      
        <content type="html"><![CDATA[<a id="more"></a><h1 id="掌握蒸气压缩式制冷循环。"><a href="#掌握蒸气压缩式制冷循环。" class="headerlink" title="掌握蒸气压缩式制冷循环。"></a>掌握蒸气压缩式制冷循环。</h1><blockquote><p>热工基础之制冷循环笔记，如有问题可以在下面评论区写出。</p></blockquote><p>制冷装置：<br><img src="https://gitee.com/badenough/blogImage/raw/master/img/20200426150512.png" alt="图片"></p><p>只要理解看到这张图片就可以了。</p><p>蒸气压缩制冷循环：<br><img src="https://gitee.com/badenough/blogImage/raw/master/img/20200426150541.png" alt="图片"></p><h1 id="题目练习："><a href="#题目练习：" class="headerlink" title="题目练习："></a>题目练习：</h1><ol><li>对压缩蒸气制冷循环，如果提高蒸发温度、降低冷凝温度，其： B</li></ol><p>A、耗功量增加、制冷系数降低</p><p>B、耗功量减小、制冷系数增大</p><p>C、耗功量和制冷系数均降低</p><p>D、耗功量和制冷系数均增大</p><ol start="2"><li>压缩蒸汽制冷装置由蒸发器、压缩机、冷凝器和 <strong><em>_D</em></strong>组成。</li></ol><p>A、喷管</p><p>B、扩压管</p><p>C、膨胀机</p><p>D、膨胀阀</p><ol start="3"><li>压缩蒸汽制冷循环由定压吸热、绝热压缩、定压放热和  A 和 C  过程组成。</li></ol><p>A、绝热膨胀</p><p>B、绝热流动</p><p>C、绝热节流</p><p>D、绝热混合</p><ol start="4"><li>窗式空调器处于夏天工况时，在室外的热交换器是<strong><em>A</em></strong>。</li></ol><p>A、冷凝器</p><p>B、蒸发器</p><p>C、增压器</p><p>D、中间冷却器</p><ol start="5"><li>窗式空调器处于冬天工况时，在室外的热交换器是<strong><em>B</em></strong>。</li></ol><p>A、冷凝器</p><p>B、蒸发器</p><p>C、增压器</p><p>D、中间冷却器</p><ul><li>柴油机混合加热循环，若要提高其热效率，应在一定范围内适当采用措施（ B）</li></ul><p>A、增加压缩比，减小升压比和预胀比</p><p>B、增加压缩比和升压比，减小预胀比</p><p>C、增加升压比，减小压缩比和预胀比</p><p>D、增加压缩比和预胀比，减小升压比</p><ul><li>内燃机定容加热理想循环由绝热压缩、绝热膨胀和     过程组成（ A ）</li></ul><p>A、定容吸热和定容放热</p><p>B、定压吸热和定压放热</p><p>C、定容吸热和定压放热</p><p>D、定压吸热和定容放热</p><p>制冷就是这几个公式的使用，和旧图的使用。</p>]]></content>
      
      
      <categories>
          
          <category> 热工基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 热处理 </tag>
            
            <tag> 热工 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Win10家庭版没有Hyper-V虚拟机安装方法</title>
      <link href="/p/78a2.html"/>
      <url>/p/78a2.html</url>
      
        <content type="html"><![CDATA[<h1 id="Win10家庭版没有Hyper-V虚拟机安装方法"><a href="#Win10家庭版没有Hyper-V虚拟机安装方法" class="headerlink" title="Win10家庭版没有Hyper-V虚拟机安装方法"></a>Win10家庭版没有Hyper-V虚拟机安装方法</h1><p>Win10家庭版相对于Win10专业版及企业版等高版本来说，缺少一了些功能，如Win10家庭版没有Hyper-V虚拟机让很多电脑预装Win10家庭版的用户不得不去重装Win10专业版，其实Win10家庭版也是可以安装Hyper-V虚拟机功能的，不过很多朋友不知道，下面一起来看看这个技巧吧。</p><h1 id="操作方法如下："><a href="#操作方法如下：" class="headerlink" title="操作方法如下："></a>操作方法如下：</h1><p>1、首先我们确定下自己的电脑是否支持虚拟化技术，不然Hyper-V虚拟机也没办法使用。<br>打开命令提示符，输入</p><pre><code>systeminfo</code></pre><p>查看下自己的处理器是否支持虚拟化技术，不支持的话，就别费劲找回Hyper-V功能了，重点信息的最后，4个要求是不是全都是“是”。<br><img src="https://gitee.com/badenough/blogImage/raw/master/img/20180925041850957.png" alt="图片"></p><p>2、然后确定电脑支持虚拟化技术之后，我们再把下面的代码复制到文本文档（记事本）中；</p><pre><code>pushd &quot;%~dp0&quot;dir /b %SystemRoot%\servicing\Packages\*Hyper-V*.mum &gt;hyper-v.txtfor /f %%i in (&#39;findstr /i . hyper-v.txt 2^&gt;nul&#39;) do dism /online /norestart /add-package:&quot;%SystemRoot%\servicing\Packages\%%i&quot;del hyper-v.txtDism /online /enable-feature /featurename:Microsoft-Hyper-V-All /LimitAccess /ALL</code></pre><p>3、将文本的后缀.txt改成.cmd（或者改为.bat，这个也可以的），之后以管理员身份打开这个文件，重启完成就能使用功能完整的Hyper-V了。（注意添加功能需要联网哦）</p><p>旭果安装之后没有开启Hyper-V那么可以去打开或关闭Windows功能中开启。</p>]]></content>
      
      
      <categories>
          
          <category> 分享推荐 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows10家庭版 </tag>
            
            <tag> 虚拟机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux 服务器常用命令整理</title>
      <link href="/p/c354.html"/>
      <url>/p/c354.html</url>
      
        <content type="html"><![CDATA[<h1 id="linux-服务器常用命令整理"><a href="#linux-服务器常用命令整理" class="headerlink" title="linux 服务器常用命令整理"></a>linux 服务器常用命令整理</h1><h2 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h2><ul><li><p>网络分析 - tcpdump \ telnet \ (netstat \ ss \ lsof) \ nload</p></li><li><p>网络传输 - scp \ rsync \ (rz \ sz) \ nc</p></li><li><p>抓包工具 - charles</p></li><li><p>内存检查 - free \ meminfo</p></li><li><p>系统监控 - vmstat \ iostat \ top \ ps \ sar \ dstat</p></li><li><p>系统调用追踪 - strace \ gcore</p></li><li><p>文件相关 - find \ awk \ sed \ grep \ tail \ df \ du \ locate</p></li><li><p>开发效率 - tmux</p></li></ul><h2 id="网络分析"><a href="#网络分析" class="headerlink" title="网络分析"></a>网络分析</h2><h3 id="tcpdump"><a href="#tcpdump" class="headerlink" title="tcpdump"></a>tcpdump</h3><pre><code>tcp:用来过滤数据报的类型-i eth1 : 只抓经过接口eth1的包-t : 不显示时间戳-s 0 : 抓取数据包时默认抓取长度为68字节, 加上-S 0 后可以抓到完整的数据包-c 100 : 只抓取100个数据包dst port !22: 不抓取目标端口是22数据包src net 10.99.184.0/24 : 数据包的源网络地址为10.99.184.0/24-A：显示数据包内容</code></pre><p>示例：</p><pre><code>tcpdump -i any -v port 8888tcpdump -i any -A port 8888</code></pre><h3 id="netstat"><a href="#netstat" class="headerlink" title="netstat"></a>netstat</h3><p>查看所有连接</p><pre><code>netstat -autnp</code></pre><p>查看监听的tcp服务</p><pre><code>netstat -altnp</code></pre><p>看tcp端口</p><pre><code>netstat -ltnp</code></pre><h3 id="ss"><a href="#ss" class="headerlink" title="ss"></a>ss</h3><pre><code>ss -pl 查看每个进程及其监听的端口ss -t -a 查看所有的tcp连接ss -u -a 查看所有的udp连接</code></pre><h3 id="lsof"><a href="#lsof" class="headerlink" title="lsof"></a>lsof</h3><pre><code>lsof -i :8888 查看端口8888进程信息lsof -p 7915 查看进程7915打开的fd信息</code></pre><h3 id="scp"><a href="#scp" class="headerlink" title="scp"></a>scp</h3><pre><code>scp -r src remote:/tmp 本地拷贝到远端scp -r remote:/tmp/src . 远端拷贝到本地scp -3 remote:/tmp/a.tar remote2:/tmp/ 以本地为跳板机，将remote机器上文件拷贝到remote2</code></pre><h3 id="rsync"><a href="#rsync" class="headerlink" title="rsync"></a>rsync</h3><pre><code>rsync -av /home/mail/ 192.168.11.12:/home/mail/rsync -av 192.168.11.11:/home/mail/ /home/mail/</code></pre><h3 id="nc"><a href="#nc" class="headerlink" title="nc"></a>nc</h3><pre><code>nc -l 8888 本地启动8888端口nc -l 8888 &gt; a.tgz 接收文件nc ali-.bj:8888 &lt; a.tgz 发送文件到远端</code></pre><h3 id="vmstat"><a href="#vmstat" class="headerlink" title="vmstat"></a>vmstat</h3><pre><code>vmstat 1 10对内存监控，重点关注swpd、free、si、so。一般系统不繁忙的状态下，swpd、so的值不会持续很高，经常为0。如果swpd过高，那么就是系统内存经常不够用。对CPU监控，我们可以查看r（运行进程数）、us、sy、id（CPU空闲），如果r的数字大于系统CPU个数，则面临CPU不够用的危险，通过id分析，如果过小，则可以判断是CPU不足。</code></pre><h3 id="iostat"><a href="#iostat" class="headerlink" title="iostat"></a>iostat</h3><pre><code>iostat -x 一般情况下，%util应该越小越好，10%以下正常，30%IO比较繁忙。50%以上一般是有问题的</code></pre><h3 id="top"><a href="#top" class="headerlink" title="top"></a>top</h3><p>按CPU核数查看</p><pre><code>PMc 查看完整进程命令top -Hp pid 查看线程数</code></pre><h3 id="ps"><a href="#ps" class="headerlink" title="ps"></a>ps</h3><pre><code>ps -eo “pid,cmd,lstart” | grep pid 查看进程启动时间ps -ef f 查看最近进程（常用）</code></pre><h3 id="find"><a href="#find" class="headerlink" title="find"></a>find</h3><pre><code>find . -type f -mtime +3 修改时间大于3天的文件find . -type f -mtime +3 | xargs rm -rf 查找并删除</code></pre><h3 id="du"><a href="#du" class="headerlink" title="du"></a>du</h3><pre><code>du -sk * | sort -n | cut -f2 | xargs -d &#39;\n&#39; du -sh 按文件大小排序显示du -hs 常用</code></pre><h3 id="awk"><a href="#awk" class="headerlink" title="awk"></a>awk</h3><pre><code>grep &#39;update_profile.*Android&#39; access-20180131.log |awk -F &#39;POST&#39; &#39;{print $2}&#39;|awk -F &#39;&amp;&#39; &#39;{print $26}&#39;|awk -F &#39; &#39; &#39;{print $1}&#39;|awk -F &#39;=&#39; &#39;{print $2}&#39;|sort -n|uniq -c|sort -nr|head -100-F &#39; &#39;以空格分割</code></pre><h3 id="ab"><a href="#ab" class="headerlink" title="ab"></a>ab</h3><pre><code>ab -c 200 -n 1000 -T &#39;application/x-www-form-urlencoded&#39; -p postdata.txt http://domain/test.php</code></pre>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 后端 </tag>
            
            <tag> 命令行 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>激光加工资料</title>
      <link href="/p/9400.html"/>
      <url>/p/9400.html</url>
      
        <content type="html"><![CDATA[<h1 id="关于激光加工的文献综述"><a href="#关于激光加工的文献综述" class="headerlink" title="关于激光加工的文献综述"></a>关于激光加工的文献综述</h1><blockquote><p>ZJT（台州学院  机械设计及其自动化专业  17机械2班）</p></blockquote><a id="more"></a><h2 id="摘要-："><a href="#摘要-：" class="headerlink" title="摘要 ："></a>摘要 ：</h2><p>本文将介绍一下赵林杰研究了熔石英光学元件的CO2激光加工技术的优点和缺点，他采用的是一种叫熔石英元件的元件制作CO2激光加工技术，而这种材料是一种典型的硬脆性材料，作为一种难加工材料，在传统机械加工中的加工效率极低，并且加工过程中引入的机械弱化层，严重影响了熔石英元件在强冲击、高载荷、高能量环境下的使用寿命。和传统机械加工方法相比，CO2 激 光加工技术的优点在于可实现非接触式加工，并且去除精度高和去除效率高。尤其重要的是，CO2 激光加工后的熔石英光学 元件无表面/亚表面裂纹、划痕等缺陷，使得 CO2激光加工技术在熔石英元件的加工中得到了重要且广泛的应用。</p><p>关键词：熔石英元件；激光加工；</p><h1 id="正文："><a href="#正文：" class="headerlink" title="正文："></a>正文：</h1><p>光的物理概念：既有波粒二象性，电磁波和粒子流等技术。</p><p>发光原理的主要原理是——原子的激发和跃迁。基态时原子可长时间存在，激发态时原子停留时间很短。有些原子在某些能级上停留时间较长，即亚稳态能级——是形成激光的重要条件。</p><p>了解了激光的形成条件和原理，那么激光加工设备有哪几部分组成：激光器、激光器光源、光学系统和机械系统。那么在世界上有激光器的几种方式呢：目前有固体、气体、液体和半导体的。</p><p>现在我索要说的研究就是气体的一种激光器。二氧化碳激光器：这种激光器以二氧化碳作为工作物质，连续输出功率可达到10KW.目前连续输出功率最高的气体激光器，效率高达20%以上。理论上的材料是石英玻璃管的，但是这种的缺点太多了，所以现在开发了新的二氧化碳激光器，熔石英材料。</p><h2 id="第一点：新材料的开始"><a href="#第一点：新材料的开始" class="headerlink" title="第一点：新材料的开始"></a>第一点：新材料的开始</h2><p>CO2 激光作用于熔石英材料时，材料发生相变， 并且伴随着熔融流动、烧蚀等物理过程的发生。为 了研究该过程中的温度分布、形貌产生机制、材料 改性以及应力产生情况，需要对 CO2 激光和熔石英材料的相互作用过程进行理论研究。</p><p>熔石英的主要成分为 SiO2，其硬度高，热膨胀 系数低，耐高温，化学稳定性好，透紫外光和红外 光。因其优良的热学、光学和机械性能多用于半导 体、电光源、光导通信、激光等技术和光学仪器中。在国防领域，半球谐振子构成的半球谐振陀螺在国 防战略武器及高空卫星的导航、定位中发挥着关键 作用。在微结构中，熔石英可用于制造微流体通道、 微透镜阵列、光栅及全息结构等。在数据通信中， 石英光纤以其极低耗、宽带的特点广泛应用于有线 电视和通信系统。在高功率固体激光终端光学组件 中，熔石英用于制作紫外光学元件，如屏蔽片(窗口 玻璃)、取样光栅、聚焦透镜等。</p><p>在进行温度场仿真时，选择不同的 热源方式以平衡仿真的计算速度和计算精度。而材 料熔融流动的主驱动力为表面张力的切向分力，即 马兰哥尼效应，这是由于材料表面温度分布不均造 成的。</p><p>马兰哥尼效应使得材料表面变得光滑，是获得光滑表面的重要理论依据。在材料进行烧蚀仿真时，应当注意激光的功率密度，当功率密度小于 1 kW/cm2 时，可使用气态动力学和热力学评估材料 烧蚀速度；当功率密度达到 1 MW/cm2时，材料开 始喷发，Hertz– Knudsen–Schrage 公式和能量守恒原 理将用来评估材料喷发速度，而且，需要计算该功 率密度下的材料蒸发温度Tv 。 </p><p>哈尔滨工业大学的 ZHAO 等也建立了 CO2 激光作用下熔石英材料的蒸发去除模型。熔石英材料吸收 CO2激光的能量，其表面温度迅速增加。热量通过热传导向材料内部传递，而在材料边缘存在热辐射和自然对流散失热量。在加工区域材料蒸发 也会带走大量的热量，而且通过蒸发损失的热量和材料蒸发量有关。</p><p>材料蒸发时，材料的气-固界面向材料内部移动，移动速度即为材料的蒸发速度，在 气-固界面处能量达到动态平衡，可用下式表达:</p><pre><code> Hv Hu n n ρΔ = ρ ΦΦ Φ Δ ⋅= − ⋅ n = Δ</code></pre><p>式中，</p><ul><li>ΔH 为蒸发潜热；</li><li>ρ 为材料密度；</li><li>Φ 1 为材料吸收的能量；</li><li>Φ 2 为材料内部热传导以及边界热辐射和自然对流散热的能量； </li><li>ΔΦ 为材料蒸发带走的 能量；</li><li>nv 为气-固界面法向移动速度。</li></ul><h2 id="第二点关于熔石英元件的大口径器件加工工艺的论述："><a href="#第二点关于熔石英元件的大口径器件加工工艺的论述：" class="headerlink" title="第二点关于熔石英元件的大口径器件加工工艺的论述："></a>第二点关于熔石英元件的大口径器件加工工艺的论述：</h2><p>针对尺寸在数十到数百毫米的大口径熔石英光 学器件，目前主要的加工方式为机械加工，主要包 括成型、磨削及抛光。然而这种传统机械加工后光 学元件表面产生的加工缺陷，在强冲击、高载荷、 高能量使用环境下易诱导元件产生损伤，降低光学 元件的使用寿命。因此需要改进现有光学元件的加 工工艺，降低光学元件的加工缺陷。和传统抛光加 工方法相比，CO2 激光加工熔石英的优点在于可实 现非接触式加工，且去除精度高和去除效率高。尤 其重要的是，CO2 激光非接触式抛光后熔石英光学 元件的表面/亚表面无裂纹、划痕等缺陷。因此，CO2 激光加工技术作为一种高效、高精度以及无损加工 技术，可为光学元件的加工提供一种新的技术手段。</p><h2 id="第三点熔石英元件的局部区域损伤修复"><a href="#第三点熔石英元件的局部区域损伤修复" class="headerlink" title="第三点熔石英元件的局部区域损伤修复"></a>第三点熔石英元件的局部区域损伤修复</h2><p>传统机械加工后的熔石英光学元件易在元件表 面局部区域引入加工缺陷，这些缺陷在强激光辐照 下易诱导产生局部损伤，损伤直径从数十微米到数 毫米不等。并且，随着激光辐照次数的增加，损伤 区域面积呈指数性增长。而熔石英材料在 CO2激光 的辐照下迅速升温并达到熔融、蒸发状态，从而修 复熔石英表面局部损伤，以提高熔石英元件损伤区 域的抗激光损伤能力，抑制损伤区域进一步扩展。 因此，世界各国对 CO2激光修复技术进行了大量的 研究。针对损伤类型的不同，可将损伤修复分为局 部区域点损伤修复和局部区域划痕损伤修复；针对 修复方式的不同可将损伤修复分为减材损伤修复和 增材损伤修复。同时，分析了 CO2激光局部区域损 伤修复过程中的材料改性，以消除或降低 CO2激光 损伤修复时的负面影响。</p><h2 id="第四点熔石英元件的表面微结构加工"><a href="#第四点熔石英元件的表面微结构加工" class="headerlink" title="第四点熔石英元件的表面微结构加工"></a>第四点熔石英元件的表面微结构加工</h2><p>CO2 激光加工技术以其高效率、高柔性等优点 在很多领域得到应用。而且，CO2 激光的光斑大小 和功率可连续调整，实现不同尺度的微结构加工。 在激光辐照下，材料升温达到熔融状态，表面张力 驱动表面材料发生迁移，从而降低材料表面的粗糙 度或形成特殊的结构。在高功率密度激光辐照下， 材料迅速达到烧蚀状态，实现微结构的快速成型加 工。激光作为电磁波，在激光与材料相互作用时， 入射光与表面声子极化产生干涉，造成激光光强波 动，从而在加工表面诱导产生周期性结构。</p><h2 id="最后总结："><a href="#最后总结：" class="headerlink" title="最后总结："></a>最后总结：</h2><p>作为一种典型的难加工材料，熔石英元件的加 工效率极低，并且传统机械加工后的光学元件会残 留加工缺陷，导致光学元件在强冲击、高载荷、高 能量使用环境下易产生损伤。随着先进制造技术的 发展，采用高效、高精度以及无损加工的光学元件 已经成为满足强冲击、高载荷、高能量使用环境要 求的必然选择。CO2 激光是实现熔石英光学元件高 效、高精度以及无损加工的一种有效途径。因此发 展并研究熔石英元件的 CO2 激光加工技术，是高效 加工精密光学元件的关键。</p><p>在熔石英元件大口径器件加工中，CO2 激光 加工后引入的残余应力、面型畸变以及残留表面 波纹，恶化了光学元件表面质量，无法满足高质 量光束输出要求。因此，改进 CO2 激光加工工艺， 使加工后的光学元件表面粗糙度优于 10 nm，且 无裂纹和残余应力，可为强冲击、高载荷、高能 量使用环境下的光学元件加工提供一种新的技术 手段。进一步，在熔石英元件局部区域损伤修复 中，CO2 激光修复后损伤区域存在的热改性层以 及修复后产生的修复坑仍是该区域再次发生损伤的主要原因，并且增加了下游光学元件的损伤概率。因此，进一步改进现有修复工艺以及研究新 的修复方式(增材修复)、减少激光加工热影响区，可为我国高功率固体激光装置的稳定运行提供保障。在熔石英元件的表面微结构加工中，CO2 激光加工技术以其高效率、高柔性的优点得到广泛 应用，随着加工工艺的完善与成熟，CO2激光加工技术必将在更多的领域得到应用。</p><p>然而，CO2激光加工是一种热加工作用过程，在熔石英元件加工中引入的负面效应(热影响区)是 限制该技术发展的瓶颈难题。改善现有 CO2激光加 工工艺，减少熔石英元件在大口径器件加工、局部 区域损伤修复以及微结构加工中引入的负面效应，满足光学元件在强冲击、高载荷、高能量使用环境下的使用要求，将是CO2 激光加工技术在熔石英元件加工得到广泛应用的前提条件，也是 CO2激光加工技术的发展方向。</p><h2 id="参考文献："><a href="#参考文献：" class="headerlink" title="参考文献："></a>参考文献：</h2><p>[1] CAMP D W，KOZLOWSKI M R，SHEEHAN L M，et al. Subsurface damage and polishing compound affect the 355-nm laser damage threshold of fused silica surfaces[J].Proc. SPIE，1998，3244：356-364.<br>[2] HUNT J T. National ignition facility performance review 1999[R]. Livermore：Lawrence Livermore National Lab. (LLNL),2000.<br>[3] SPAETH M L，WEGNER P J，SURATWALA T I，et al. Optics recycle loop strategy for NIF operations above UV laser-induced damage threshold[J]. Fusion Science and Technology，2016，69(1)：265-294.<br>[4] SUN L X，LIU H J，HUANG J，et al. Reaction ion etching process for improving laser damage resistance of fused silica optical surface[J]. Optics Express，2016，24(1)： 199-211.<br>[5] SURATWALA T I，MILLER P E，BUDE J D，et al. HFbased etching processes for improving laser damage resistance of fused silica optical surfaces[J]. Journal of the American Ceramic Society，2011，94(2)： 416-428.</p>]]></content>
      
      
      <categories>
          
          <category> 特种加工 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 激光加工 </tag>
            
            <tag> 文献综述 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>热工基础之热量传递笔记</title>
      <link href="/p/4306.html"/>
      <url>/p/4306.html</url>
      
        <content type="html"><![CDATA[<a id="more"></a><h1 id="热处理之热量传递笔记"><a href="#热处理之热量传递笔记" class="headerlink" title="热处理之热量传递笔记"></a>热处理之热量传递笔记</h1><blockquote><p>本人自己总结，简易，可能不完善。如有问题可以在下面评论区写出。</p></blockquote><h2 id="条件和原因："><a href="#条件和原因：" class="headerlink" title="条件和原因："></a>条件和原因：</h2><p>相互接触（内部）<br>粒子的热运动</p><h2 id="导热"><a href="#导热" class="headerlink" title="导热"></a>导热</h2><ul><li>直接接触</li><li>各部分之间不需要宏观位移</li><li>粒子的无规则的热运动</li><li>固有本质（温差，在固液气中都可以导热）</li></ul><p>这里只要记住公式和使用的场景就可以了，如下图所展示的：<br><img src="https://gitee.com/badenough/blogImage/raw/master/img/20200424162513.png" alt=""></p><p>按照上图的内容记住就没有问题了。</p><p>热阻越小传热越大。</p><h2 id="热对流"><a href="#热对流" class="headerlink" title="热对流"></a>热对流</h2><ul><li>宏观运动不同温度流体位移传递</li><li>微观粒子热运动而产生的导热</li><li>对流换热：液固传热的现象</li><li>导热和热对流共同作用的结果</li></ul><h3 id="牛顿冷却："><a href="#牛顿冷却：" class="headerlink" title="牛顿冷却："></a>牛顿冷却：</h3><p><img src="https://gitee.com/badenough/blogImage/raw/master/img/20200424165302.png" alt=""></p><h2 id="热辐射：波长（0-1-100um）"><a href="#热辐射：波长（0-1-100um）" class="headerlink" title="热辐射：波长（0.1-100um）"></a>热辐射：波长（0.1-100um）</h2><p>是电磁理论与量子理论的结合体，电波和光子的结合。<br>粒子的运动使物体向外自发的发射辐射能。<br>1.紫外<br>2.可见光<br>3.红外</p><h2 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h2><ul><li>只要温度大于0K的物体都可以发出辐射能</li><li>物体有吸收热辐射的能力</li><li>不依靠中间媒介</li><li>热量传递是双向的</li></ul><p><img src="https://gitee.com/badenough/blogImage/raw/master/img/20200424185607.png" alt=""></p><p>只要记住上面哪个图的公式就可以了。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>使用一道题目来总的概括吧！<br><img src="https://gitee.com/badenough/blogImage/raw/master/img/20200424185806.png" alt=""></p><p>这个题目是两个过程的综合，而讲解中的第三点热辐射不考虑，热辐射由于过于平凡，不加入计算。</p>]]></content>
      
      
      <categories>
          
          <category> 热工基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 热处理 </tag>
            
            <tag> 热工 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>阿里云的OSS</title>
      <link href="/p/4c2a.html"/>
      <url>/p/4c2a.html</url>
      
        <content type="html"><![CDATA[<h1 id="阿里云的OSS"><a href="#阿里云的OSS" class="headerlink" title="阿里云的OSS"></a>阿里云的OSS</h1><blockquote><p>这个是我最开始接触云服务器的东西，本来就是玩玩，但是没有想着一玩就玩大了。</p></blockquote><p>一开始我买了阿里的OSS（大概在1月份的时候吧！），后来我看到OSS是可以绑定域名的之后我就去买了阿里里面的域名（ilovea.asia）买了这个域名的时候是2月的上旬了，本以为就这样可以绑定我的OSS，可以让别人可以快速的下载了，但是没有想到的是：在中国国内域名必须要绑定服务器，并且备案才可以使用，所以我那是有点难过，就是因为这个东西既花钱，你还得不到仍和的好处。</p><p>于是我想了一想不能让域名和OSS空着不用啊！</p><p>既然要备案，那我再去买一个服务器不就好了，所以我直接去看了阿里云的服务器，看到学生版的每月10元钱感觉不贵，所以我直接开始有了服务器，等到我要备案的时候，才发现备案需要服务器时长3个月以上才可以，所以我等着等着。先用服务器的IP地址干点事情吧！</p><p>我一开始使用服务器搭建的是一个最简单的，根本不用什么脑子的网站，Halo博客框架，这个博客框架真的十分的简单，现在回想起来是非常简单，但是不知道那个时候是怎么了，也有可能是那个时候对于后端的知识一点都不懂。</p><p>我不会干等着，所以我去哔哩哔哩搜了很多资料，最后安装UP主的方式完完全全的复制，模仿了一个网站出来，这是我第一次品尝到服务器的好处，之后我开始各种的魔改式的改造我模仿来的网站。</p><p>直到我在网站上发现一个新的框架（贝塔面板框架），这个框架安装有点麻烦的，但是它证明了我开始向上学习的信号，也为我后来学习HTML和CSS基本网页框架语言打下了坚实的基础，没有这些一点点的学习开始我根本不可能去制作新的网站，目前的网站的服务器已经降到很低水平了，主要也是没有钱的原因，毕竟我还只是一个穷学生，还是单亲家庭的孩子，从小教育的节俭，没有办法。</p><p>但是说回来这个网站建设现在的成本还是可以支撑的，贝塔面板的方式是可视化的（这个我以前写过的，关于怎么样在服务器上建立一个贝塔面板）这里就不说了，贝塔面板内部有太多的东西了，它几乎涵盖了我在当时对网页的所有需求了，例如，它内部集成了wordpress博客框架，Eblog框架等的，这些非常常见的都有了，满足了我当时的所有需求，所以我在那边停留学习了很久，之后我搭建了我第一个wordpress框架的博客网站，这个是我博客开始全面自己修改的预兆，因为wordpress中内部的广告太多了都要自己手动去清理掉，例如：footer中的脚注什么的。</p><p>从那个时候起，我开始学习PHP语言和HTML语言了，但是那个时候什么都不懂只知道是这样改的，百度上已经有很多过于这样的经验了，直接学习。边完善边学习，那个我持续了有一段时间，直到有一天发现，网站登入不到后台了，这使我查了好久的百度，最后发现是有代码被编译成别的东西的，被人加密了——也就是被黑客攻击了。于是我找了很多资料只要将那段被加密的代码解密就好了，我下载了D什么的软件，解密了那段加密代码，最后完成拯救了我的服务器。</p><p>其实在那个时候我就知道了这个服务器还是很危险的，这个wordpress也是很危险的，最好还是要一个稳妥一点的框架才可以，最后我还是返回到我以前的框架那边了，正好碰上，Halo博客的大改版到了3.0版本了所以我顺势安装了halo博客的3.0版本，相比于2.1版本感觉更新了很多，还是及其喜欢的。</p><p>但是halo的缺点是可变性太差了，像我这种这么喜欢搞事情的人这么会安于平凡呢？于是我就去找更多的框架。</p><p>终于有一天让我遇到了，Hexo博客框架，这个的改动性就很强了，但是我也意识到了，我知识盲区的漏洞越来越大了，所以我赶紧去哔哩哔哩学习了HTML和CSS的前端基础知识，这之后我才敢玩hexo博客，要不然根本看不懂，那玩个屁。知识就是这样，你越到学的多你越发现自己欠缺的知识就越多，如果你不学习，那你恐怕是这辈子都不会明白这里面的道理的。</p><p>我在这里挖个坑，我如果有机会我一定把我所学习的HTML和CSS知识最精简版的分享给大家。</p><p>现在还在探索这要的静态网站和学习JavaScript的有关知识。</p><p>那今天就写到这里了，以后再分享。。</p>]]></content>
      
      
      <categories>
          
          <category> 随笔录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 阿里云 </tag>
            
            <tag> OSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CNPM 镜像是什么?</title>
      <link href="/p/66e4.html"/>
      <url>/p/66e4.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>这是一个完整 npmjs.org 镜像，你可以用此代替官方版本(只读)，同步频率目前为 10分钟 一次以保证尽量与官方服务同步。</p></blockquote><ul><li>当前 registry.npm.taobao.org 是从 r.cnpmjs.org 进行全量同步的.</li><li>当前 npm.taobao.org 运行版本是: <a href="mailto:cnpmjs.org@3.0.0-rc.32">cnpmjs.org@3.0.0-rc.32</a></li><li>本系统运行在 <a href="mailto:Node.js@v12.8.1">Node.js@v12.8.1</a> 上.</li><li>开源镜像: <a href="http://npm.taobao.org/mirrors" target="_blank" rel="noopener">http://npm.taobao.org/mirrors</a></li><li>Node.js 镜像: <a href="http://npm.taobao.org/mirrors/node" target="_blank" rel="noopener">http://npm.taobao.org/mirrors/node</a></li><li>alinode 镜像: <a href="http://npm.taobao.org/mirrors/alinode" target="_blank" rel="noopener">http://npm.taobao.org/mirrors/alinode</a></li><li>phantomjs 镜像: <a href="http://npm.taobao.org/mirrors/phantomjs" target="_blank" rel="noopener">http://npm.taobao.org/mirrors/phantomjs</a></li><li>ChromeDriver 镜像: <a href="http://npm.taobao.org/mirrors/chromedriver" target="_blank" rel="noopener">http://npm.taobao.org/mirrors/chromedriver</a></li><li>OperaDriver 镜像: <a href="http://npm.taobao.org/mirrors/operadriver" target="_blank" rel="noopener">http://npm.taobao.org/mirrors/operadriver</a></li><li>Selenium 镜像: <a href="http://npm.taobao.org/mirrors/selenium" target="_blank" rel="noopener">http://npm.taobao.org/mirrors/selenium</a></li><li>Node.js 文档镜像: <a href="http://npm.taobao.org/mirrors/node/latest/docs/api/index.html" target="_blank" rel="noopener">http://npm.taobao.org/mirrors/node/latest/docs/api/index.html</a></li><li>NPM 镜像: <a href="https://npm.taobao.org/mirrors/npm/" target="_blank" rel="noopener">https://npm.taobao.org/mirrors/npm/</a></li><li>electron 镜像: <a href="https://npm.taobao.org/mirrors/electron/" target="_blank" rel="noopener">https://npm.taobao.org/mirrors/electron/</a></li><li>node-inspector 镜像: <a href="https://npm.taobao.org/mirrors/node-inspector/" target="_blank" rel="noopener">https://npm.taobao.org/mirrors/node-inspector/</a><table><thead><tr><th></th><th></th><th></th><th></th><th></th><th></th></tr></thead><tbody><tr><td>1292001</td><td>个模块</td><td>13103259</td><td>个模块版本</td><td>316</td><td>次删除</td></tr><tr><td>1992509</td><td>次本日下载</td><td>235091648</td><td>次本周下载</td><td>1049244173</td><td>次本月下载</td></tr><tr><td>57156500</td><td>次昨日下载</td><td>325571280</td><td>次上周下载</td><td>1357728230</td><td>次上月下载</td></tr></tbody></table></li></ul><h3 id="Version-Badge"><a href="#Version-Badge" class="headerlink" title="Version Badge"></a>Version Badge</h3><p>Default style is flat-square.</p><p>Badge URL: <a href="https://npm.taobao.org/badge/v/cnpmjs.org.svgcnpmjs.org-badge" target="_blank" rel="noopener">https://npm.taobao.org/badge/v/cnpmjs.org.svgcnpmjs.org-badge</a></p><ul><li><code>&lt;0.1.0 &amp; &gt;=0.0.0: red-badge</code></li><li><code>&lt;1.0.0 &amp; &gt;=0.1.0: red-badge</code></li><li><code>&gt;=1.0.0: red-badge</code></li></ul><h1 id="使用说明"><a href="#使用说明" class="headerlink" title="使用说明"></a>使用说明</h1><p>你可以使用我们定制的 cnpm (gzip 压缩支持) 命令行工具代替默认的 npm:</p><pre><code>$ npm install -g cnpm --registry=https://registry.npm.taobao.org</code></pre><p>或者你直接通过添加 npm 参数 alias 一个新命令:</p><pre><code>alias cnpm=&quot;npm --registry=https://registry.npm.taobao.org \--cache=$HOME/.npm/.cache/cnpm \--disturl=https://npm.taobao.org/dist \--userconfig=$HOME/.cnpmrc&quot;# Or alias it in .bashrc or .zshrc$ echo &#39;\n#alias for cnpm\nalias cnpm=&quot;npm --registry=https://registry.npm.taobao.org \  --cache=$HOME/.npm/.cache/cnpm \  --disturl=https://npm.taobao.org/dist \  --userconfig=$HOME/.cnpmrc&quot;&#39; &gt;&gt; ~/.zshrc &amp;&amp; source ~/.zshrc</code></pre><h1 id="安装模块"><a href="#安装模块" class="headerlink" title="安装模块"></a>安装模块</h1><p>从 registry.npm.taobao.org 安装所有模块. 当安装的时候发现安装的模块还没有同步过来, 淘宝 NPM 会自动在后台进行同步, 并且会让你从官方 NPM registry.npmjs.org 进行安装. 下次你再安装这个模块的时候, 就会直接从 淘宝 NPM 安装了.</p><pre><code>$ cnpm install [name]</code></pre><h1 id="同步模块"><a href="#同步模块" class="headerlink" title="同步模块"></a>同步模块</h1><p>直接通过 sync 命令马上同步一个模块, 只有 cnpm 命令行才有此功能:</p><pre><code>$ cnpm sync connect</code></pre><p>当然, 你可以直接通过 web 方式来同步: /sync/connect</p><pre><code>$ open https://npm.taobao.org/sync/connect</code></pre><h1 id="其它命令"><a href="#其它命令" class="headerlink" title="其它命令"></a>其它命令</h1><p>支持 npm 除了 publish 之外的所有命令, 如:</p><pre><code>$ cnpm info connect</code></pre><h1 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h1><h2 id="检查是否安装完成"><a href="#检查是否安装完成" class="headerlink" title="检查是否安装完成"></a>检查是否安装完成</h2><pre><code>cnpm -v或者 npm -v</code></pre>]]></content>
      
      
      <categories>
          
          <category> 分享推荐 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> npm </tag>
            
            <tag> cnpm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>npm 和 cnpm</title>
      <link href="/p/d2b0.html"/>
      <url>/p/d2b0.html</url>
      
        <content type="html"><![CDATA[<h2 id="npm"><a href="#npm" class="headerlink" title="npm"></a>npm</h2><ul><li>允许用户从NPM服务器下载别人编写的第三方包到本地使用。</li><li>允许用户从NPM服务器下载并安装别人编写的命令行程序到本地使用。</li><li>允许用户将自己编写的包或命令行程序上传到NPM服务器供别人使用</li></ul><h2 id="npm命令"><a href="#npm命令" class="headerlink" title="npm命令"></a>npm命令</h2><ul><li><code>npm -v</code> 来测试是否成功安装</li><li>查看当前目录已安装插件：<code>npm list</code></li><li>更新全部插件： <code>npm update [ --save-dev ]</code></li><li>使用 npm 更新对应插件：<code>npm update &lt;name&gt; [ -g ] [ --save-dev]</code></li><li>使用 npm 卸载插件： <code>npm uninstall &lt;name&gt; [ -g ] [ --save-dev ]</code></li></ul><h2 id="cnpm"><a href="#cnpm" class="headerlink" title="cnpm"></a>cnpm</h2><p>淘宝团队做的国内镜像，因为npm的服务器位于国外可能会影响安装。淘宝镜像与官方同步频率目前为 10分钟 一次以保证尽量与官方服务同步。<br>安装：命令提示符执行</p><pre><code>npm install cnpm -g --registry=https://registry.npm.taobao.org</code></pre><p><code>cnpm -v</code> 来测试是否成功安装</p><h2 id="通过改变地址来使用淘宝镜像"><a href="#通过改变地址来使用淘宝镜像" class="headerlink" title="通过改变地址来使用淘宝镜像"></a>通过改变地址来使用淘宝镜像</h2><ul><li>npm的默认地址是<a href="https://registry.npmjs.org/" target="_blank" rel="noopener">https://registry.npmjs.org/</a></li><li>可以使用npm config get registry查看npm的仓库地址</li><li>可以使用npm config set registry <code>https://registry.npm.taobao.org</code>来改变默认下载地址，达到可以不安装cnpm就能采用淘宝镜像的目的，然后使用上面的get命令查看是否成功。</li></ul><h2 id="nrm"><a href="#nrm" class="headerlink" title="nrm"></a>nrm</h2><ul><li>nrm包安装命令： <code>npm i nrm -g</code></li><li>nrm能够管理所用可用的镜像源地址以及当前所使用的镜像源地址，但是只是单纯的提供了几个url并能够让我们在这几个地址之间方便切换</li><li>nrm ls即nrm list，查看所有可用的镜像，并可以切换。<code>*号表示当前npm使用的地址，可以使用命令nrm use taobao或 nrm use npm来进行两者之间的切换。</code></li></ul><p><img src="https://gitee.com/badenough/blogImage/raw/master/img/14847866.webp" alt="nrm ls命令"></p><h2 id="g-S-D"><a href="#g-S-D" class="headerlink" title="-g -S -D"></a>-g -S -D</h2><ul><li><code>-g</code>：全局安装。 将会安装在<code>C：\ Users \ Administrator \ AppData \ Roaming \ npm</code>，并且写入系统环境变量；非全局安装：将会安装在当前定位目录;全局安装可以通过命令行任何地方调用它，本地安装将安装在定位目录的node_modules文件夹下，通过要求调用;</li><li><code>-S</code>：即<code>npm install module_name --save</code>,写入<code>package.json</code>的dependencies ,dependencies 是需要发布到生产环境的，比如jq，vue全家桶，ele-ui等ui框架这些项目运行时必须使用到的插件就需要放到dependencies</li><li><code>-D</code>：即<code>npm install module_name --save-dev</code>,写入package.json的<code>devDependencies</code> ,devDependencies 里面的插件只用于开发环境，不用于生产环境。比如一些babel编译功能的插件、webpack打包插件就是开发时候的需要，真正程序打包跑起来并不需要的一些插件。</li></ul><blockquote><p>为什么要保存在package.json 因为node_module包实在是太大了。用一个配置文件保存，只打包安装对应配置文件的插件，按需导入。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 分享推荐 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> npm </tag>
            
            <tag> cnpm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>npm和cnpm（windows）安装步骤</title>
      <link href="/p/da93.html"/>
      <url>/p/da93.html</url>
      
        <content type="html"><![CDATA[<h1 id="一、什么是npm和cnpm"><a href="#一、什么是npm和cnpm" class="headerlink" title="一、什么是npm和cnpm"></a>一、什么是npm和cnpm</h1><p>npm（node package manager）：nodejs的包管理器，用于node插件管理（包括安装、卸载、管理依赖等）<br>cnpm:因为npm安装插件是从国外服务器下载，受网络的影响比较大，可能会出现异常，如果npm的服务器在中国就好了，所以我们乐于分享的淘宝团队干了这事。来自官网：“这是一个完整 npmjs.org 镜像，你可以用此代替官方版本(只读)，同步频率目前为 10分钟 一次以保证尽量与官方服务同步。”</p><h1 id="二、安装nodejs"><a href="#二、安装nodejs" class="headerlink" title="二、安装nodejs"></a>二、安装nodejs</h1><p>1、首先前往nodejs官网下载nodejs<br><img src="https://gitee.com/badenough/blogImage/raw/master/img/20180523154557789.png" alt=""><br>2、然后点击安装，选择自己要安装的路径，此处我选择的是：D:\Program Files\nodejs，安装至完成。<br>3.window+R,输入cmd,打开命令提示符窗口，输入：</p><pre><code>npm -v</code></pre><p>检测是否安装成功，如果输出版本号，则表示安装成功，如图：<br><img src="https://gitee.com/badenough/blogImage/raw/master/img/2018052315555254.png" alt=""></p><h1 id="二、改变原有的环境变量"><a href="#二、改变原有的环境变量" class="headerlink" title="二、改变原有的环境变量"></a>二、改变原有的环境变量</h1><p>1、首先配置npm的全局模块的存放路径、cache的路径，此处我选择放在：D:\Program Files\nodejs<br>输入如下命令：</p><pre><code>npm config set prefix &quot;D:\Program Files\nodejs\node_global&quot;npm config set cache&quot;D:\Program Files\nodejs\node_cache&quot;</code></pre><p>如下图所示：<br><img src="https://gitee.com/badenough/blogImage/raw/master/img/20180523160410397.png" alt=""></p><p>完成后可以在文件夹中看到相应名字的文件夹，如下：<br><img src="https://gitee.com/badenough/blogImage/raw/master/img/20180523160449935.png" alt=""></p><p>2、在系统环境变量添加NODE_PATH,输入路径为：<br>D:\Program Files\nodejs\node_global<br>操作如下：我的电脑右击，打开属性-&gt;高级系统设置-&gt;环境变量-&gt;新建（系统变量下）-&gt;输入变量名<code>NODE_PATH-&gt;</code>变量值：输入上面路径，确定即可。<br><img src="https://gitee.com/badenough/blogImage/raw/master/img/20180523161053682.png" alt=""></p><p>3、在命令行输入以下命令安装express（注：“-g”表示安装到global目录下，就是上面设置的node_global中）</p><pre><code>npm install express -g</code></pre><p><img src="https://gitee.com/badenough/blogImage/raw/master/img/20180523161825863.png" alt=""></p><p>可以看到node_global/node_modules下有express了，如图：<br><img src="https://gitee.com/badenough/blogImage/raw/master/img/20180523162017581.png" alt=""></p><p>4、在命令行输入node进入编辑模式，输入以下代码检测是否能正常加载模块：</p><pre><code>require(&#39;express&#39;)</code></pre><p><img src="https://gitee.com/badenough/blogImage/raw/master/img/20180523162312296.png" alt=""></p><p>如果成功，如上图显示；如果出错，检测下上面配置的NODE_PATH是否配置或者配置正确。</p><h1 id="三、安装cnpm"><a href="#三、安装cnpm" class="headerlink" title="三、安装cnpm"></a>三、安装cnpm</h1><p>1、安装cnpm，输入以下命令：</p><pre><code>npm install -g cnpm --registry=https://registry.npm.taobao.org</code></pre><p>如下图：<br><img src="https://gitee.com/badenough/blogImage/raw/master/img/20180523163423189.png" alt=""></p><p>2、输入cnpm -v ，检测是否正常，但是这里会报错。<br>3、添加系统变量path的内容<br>因为cnpm会被安装到D:\Program Files\nodejs\node_global下，而系统变量path并未包含该路径。在系统变量path下添加该路径即可正常使用cnpm。<br>如图，修改系统变量path：<br><img src="https://gitee.com/badenough/blogImage/raw/master/img/20180523164113628.png" alt=""></p><p>然后再次输入cnpm -v ，结果如下：</p><p><img src="https://gitee.com/badenough/blogImage/raw/master/img/20180523164303830.png" alt=""></p><h1 id="参考文章："><a href="#参考文章：" class="headerlink" title="参考文章："></a>参考文章：</h1><p><a href="https://blog.csdn.net/shelly1072/article/details/51524029" target="_blank" rel="noopener">https://blog.csdn.net/shelly1072/article/details/51524029</a><br><a href="https://www.cnblogs.com/yominhi/p/7039795.html" target="_blank" rel="noopener">https://www.cnblogs.com/yominhi/p/7039795.html</a></p>]]></content>
      
      
      <categories>
          
          <category> 分享推荐 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> npm </tag>
            
            <tag> cnpm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker 入门</title>
      <link href="/p/fe90.html"/>
      <url>/p/fe90.html</url>
      
        <content type="html"><![CDATA[<h1 id="什么是-Docker"><a href="#什么是-Docker" class="headerlink" title="什么是 Docker"></a>什么是 Docker</h1><p>Docker 使用 Google 公司推出的 Go 语言 进行开发实现，基于 Linux 内核的 cgroup，namespace，以及 AUFS 类的 Union FS 等技术，对进程进行封装隔离，属于 操作系统层面的虚拟化技术。由于隔离的进程独立于宿主和其它的隔离的进程，因此也称其为容器。<br>传统虚拟机技术是虚拟出一套硬件后，在其上运行一个完整操作系统，在该系统上再运行所需应用进程；而容器内的应用进程直接运行于宿主的内核，容器内没有自己的内核，而且也没有进行硬件虚拟。因此容器要比传统虚拟机更为轻便。</p><h1 id="安装-Docker"><a href="#安装-Docker" class="headerlink" title="安装 Docker"></a>安装 Docker</h1><p>以 <code>Ubuntu</code> 为例，使用国内阿里云源进行安装。</p><pre><code># 安装必要的一些系统工具sudo apt-get updatesudo apt-get -y install apt-transport-https ca-certificates curl software-properties-common# 安装 GPG 证书curl -fsSL https://mirrors.aliyun.com/docker-ce/linux/ubuntu/gpg | sudo apt-key add -# 写入软件源信息sudo add-apt-repository &quot;deb [arch=amd64] https://mirrors.aliyun.com/docker-ce/linux/ubuntu $(lsb_release -cs) stable&quot;sudo apt-get -y update# 安装 Dockersudo apt-get -y install docker-ce</code></pre><h1 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h1><h2 id="镜像（Image）"><a href="#镜像（Image）" class="headerlink" title="镜像（Image）"></a>镜像（Image）</h2><p>Docker 镜像是一个特殊的文件系统，除了提供容器运行时所需的程序、库、资源、配置等文件外，还包含了一些为运行时准备的一些配置参数（如匿名卷、环境变量、用户等）。镜像不包含任何动态数据，其内容在构建之后也不会被改变，是只读的。例如官方的镜像 ubuntu:18.04 就包含了完整的一套 Ubuntu 18.04 最小系统的 root 文件系统。</p><p>在 Docker 中，镜像是一层一层构成的，在构建之初就是这种分层存储的架构。因此在构建镜像的时候需要格外小心不必要的文件，避免构建的镜像体积过大。</p><h2 id="容器（Container）"><a href="#容器（Container）" class="headerlink" title="容器（Container）"></a>容器（Container）</h2><p>镜像和容器的关系，就像是面向对象程序设计中的 类和 实例 一样，镜像是静态的定义，容器是镜像运行时的实体。容器可以被创建、启动、停止、删除、暂停等。<br>容器可以拥有自己完整的root文件系统，其实质是宿主机中的一个进程，但是容器拥有自己独立的命名空间。这种隔离的特性使得使用 Docker 会变得更安全。<br>类似的，容器也是分层存储的，只是每个容器运行时，是以镜像为基础层，在其上创建一个当前容器的存储层，该层可以进行读写。</p><h2 id="仓库（Repository）"><a href="#仓库（Repository）" class="headerlink" title="仓库（Repository）"></a>仓库（Repository）</h2><p>Docker Registry 是用来集中存储、分发镜像的服务。而一个 Docker Registry 可以对应多个仓库，每个仓库可以包含多个标签（Tag），每一个标签对应着一个确定的镜像。<br>一般的，标签用来指定仓库的不同版本，默认使用latest作为默认。我们可以通过 &lt;仓库名&gt;:&lt;标签&gt; 的格式来指定具体是这个软件哪个版本的镜像。</p><h1 id="使用镜像"><a href="#使用镜像" class="headerlink" title="使用镜像"></a>使用镜像</h1><h2 id="基本操作"><a href="#基本操作" class="headerlink" title="基本操作"></a>基本操作</h2><h3 id="获取镜像"><a href="#获取镜像" class="headerlink" title="获取镜像"></a>获取镜像</h3><p><code>docker pull [选项] [Docker Registry 地址[:端口号]/]仓库名[:标签]</code></p><ul><li>选项：-a参数表示下载该镜像的所有标签。</li><li><code>[Docker Registry 地址[:端口号]]</code> 表示 Docker 镜像仓库地址，格式为<code>&lt;域名/IP&gt;[:端口号]</code>，默认为 Docker Hub，可以省略。</li><li>仓库名：仓库名包含了两个内容，用户名/仓库名。对于 Docker Hub，可省略用户名，此时默认为 library，即官方镜像。</li><li>标签：默认为 latest。</li></ul><h3 id="查看镜像"><a href="#查看镜像" class="headerlink" title="查看镜像"></a>查看镜像</h3><pre><code>docker images# 查看所有镜像docker image ls -a</code></pre><h3 id="删除镜像"><a href="#删除镜像" class="headerlink" title="删除镜像"></a>删除镜像</h3><pre><code>docker image ls rm &lt;镜像1&gt; [&lt;镜像2&gt; 。。。]</code></pre><p>其中，<code>&lt;镜像&gt;</code>可以是镜像名、镜像 ID、镜像摘要等。</p><h3 id="使用镜像运行容器"><a href="#使用镜像运行容器" class="headerlink" title="使用镜像运行容器"></a>使用镜像运行容器</h3><pre><code>docker run [OPTIONS] IMAGE [COMMAND] [ARG...]# 例如：docker run --name tmp -itd ubuntu bash</code></pre><p>使用docker run来启动一个容器</p><ul><li>–name：为该容器设置一个名称，缺省为随机名称。</li><li>-i：交互式操作，保持标准的输入流对容器开放。</li><li>-t：为该容器分配一个虚拟的终端。</li><li>-d：保持该容器后台运行。即先不进入该容器，至于怎么进入，后面会讲到。</li><li>&lt;镜像:标签&gt;：指定镜像。若本地不存在，则从 Docker Hub 进行下载。</li><li>命令：镜像启动时执行的命令，这里使用bash是希望有一个交互式的终端。</li></ul><h1 id="使用容器"><a href="#使用容器" class="headerlink" title="使用容器"></a>使用容器</h1><h2 id="启动容器"><a href="#启动容器" class="headerlink" title="启动容器"></a>启动容器</h2><pre><code># 新建容器并启动docker run ...# 启动终止状态的容器docker &lt;容器&gt; start# container 为容器的名称，可以通过 docker ps -a 来查看所有的容器</code></pre><h2 id="终止容器"><a href="#终止容器" class="headerlink" title="终止容器"></a>终止容器</h2><pre><code># 当 Docker 容器中指定的应用终结时，容器会自动终止# 当使用 exit 退出非守护态的容器时容器立即终止# 终止运行状态的容器docker &lt;容器&gt; stop</code></pre><h2 id="进入容器"><a href="#进入容器" class="headerlink" title="进入容器"></a>进入容器</h2><p>当使用 <code>-d</code> 参数启动容器时，容器会进入后台守护态运行，此时可通过两种方式进入后台</p><pre><code># 1. attach 命令docker attach &lt;容器&gt;# 2. exec 命令（推荐）docker exec -it &lt;容器&gt; bash# 使用 exec 命令本意是向容器中发送命令，但由于发送的是 bash，且使用了 -t 参数，所以进入了容器的终端。此时通过 exit 退出不会导致容器的终止！</code></pre><h2 id="删除容器"><a href="#删除容器" class="headerlink" title="删除容器"></a>删除容器</h2><pre><code>docker container rm &lt;容器&gt;</code></pre><h2 id="定制镜像"><a href="#定制镜像" class="headerlink" title="定制镜像"></a>定制镜像</h2><p>镜像的定制实际上就是定制每一层所添加的配置、文件。如果我们可以把每一层修改、安装、构建、操作的命令都写入一个脚本，用这个脚本来构建、定制镜像，那么之前提及的无法重复的问题、镜像构建透明性的问题、体积的问题就都会解决。这个脚本就是 Dockerfile。</p><h2 id="详细"><a href="#详细" class="headerlink" title="详细:"></a>详细:</h2><p>设置 Dockerfile 请参见 <a href="https://yeasy.gitbooks.io/docker_practice/content/image/build.html" target="_blank" rel="noopener">https://yeasy.gitbooks.io/docker_practice/content/image/build.html</a></p><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><blockquote><p><a href="https://yeasy.gitbooks.io/docker_practice/content/" target="_blank" rel="noopener">https://yeasy.gitbooks.io/docker_practice/content/</a><br><a href="https://juejin.im/post/5cacbfd7e51d456e8833390c" target="_blank" rel="noopener">https://juejin.im/post/5cacbfd7e51d456e8833390c</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
            <tag> 容器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>都2020年了，个人云存储服务该选哪一家？</title>
      <link href="/p/ed06.html"/>
      <url>/p/ed06.html</url>
      
        <content type="html"><![CDATA[<h1 id="2020年个人云盘该怎么选择？"><a href="#2020年个人云盘该怎么选择？" class="headerlink" title="2020年个人云盘该怎么选择？"></a>2020年个人云盘该怎么选择？</h1><blockquote><p>经过多年的野蛮生长、商业竞争、政府监管，当初火爆的国内云盘市场终于又归于平静。在市场环境趋于稳定之后，我们终于可以再来谈一谈如何选择网盘了。</p></blockquote><h2 id="2019-年被称为-5G-元年"><a href="#2019-年被称为-5G-元年" class="headerlink" title="2019 年被称为 5G 元年"></a>2019 年被称为 5G 元年</h2><p>##而2020年是5G大发展的一年</p><blockquote><p>网络在快速发展，许多人对「云存储」的概念却依旧停留在几年前，认为只是用来备份文件、分享文件这么简单。其实「云存储服务」早已有了许多改变。</p></blockquote><p>而如何选择云服务，也是很多人一直以来面临的问题。有的需要大量备份照片，有的需要快速同步文件，有的非国外网盘不用，有的希望享受国内服务的便捷……不同的需求带来的就是网盘市场的差异化竞争。云存储服务的选择，其实就是在价格、容量、功能这些维度上展开的竞争。</p><p>所以，我为大家整理了一份完备的表格，方便各位对各家云存储服务商的数据进行对比.</p><p><img src="https://gitee.com/badenough/blogImage/raw/master/img/350.png" alt="tup"></p><p>这个图就可以说明了比较，大家还是自己考虑一下。</p><p>这里我没有将阿里的OSS服务和腾讯的COS服务放进去，是因为这两个要去自己购买，可能后面的资费会更高，所以这里不推荐了。</p><ul><li>这里再给一个更详细的各大网盘的比较图表：<a href="https://www.notion.so/feef77a2e9fd4db2994189dfaa489d1e?v=88eb87190bdb4503bcfe533175cee03f" target="_blank" rel="noopener">https://www.notion.so/feef77a2e9fd4db2994189dfaa489d1e?v=88eb87190bdb4503bcfe533175cee03f</a></li></ul><p>如果你真的想要也可以去了解一下。下方链接：<br><a href="https://www.aliyun.com/product/oss?spm=5176.12825654.h2v3icoap.37.3dbd2c4ajh77Tc&aly_as=edyZS-kDQ" target="_blank" rel="noopener">阿里云OSS</a><br><a href="https://cloud.tencent.com/product/cos" target="_blank" rel="noopener">腾讯云COS</a></p>]]></content>
      
      
      <categories>
          
          <category> 分享推荐 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 云盘 </tag>
            
            <tag> 个人网盘 </tag>
            
            <tag> 储存服务 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo+github打造个人博客系列之Coding Pages去广告</title>
      <link href="/p/3ed.html"/>
      <url>/p/3ed.html</url>
      
        <content type="html"><![CDATA[<h1 id="hexo-github打造个人博客系列之Coding-Pages去广告"><a href="#hexo-github打造个人博客系列之Coding-Pages去广告" class="headerlink" title="hexo+github打造个人博客系列之Coding Pages去广告"></a>hexo+github打造个人博客系列之Coding Pages去广告</h1><h2 id="尴尬的广告"><a href="#尴尬的广告" class="headerlink" title="尴尬的广告"></a>尴尬的广告</h2><p>大家应该可以看到，在第一次以自定义域名访问Coding Pages时，会有一个跳转广告。是不是很尴尬？经查阅官方说明，得知原因。</p><blockquote><p>银牌会员的 Coding Pages 在访问时默认会先加载 Pages 跳转页，您可选择在网站首页任意位置放置「Hosted by Coding Pages」的文字版或图片版，然后勾选下方的「已放置 Hosted by Coding Pages」选项，通过审核后您的 Pages 将不会显示跳转页。请务必将「Hosted by Coding Pages」持续保留在网站首页，撤掉后跳转页会再次出现。</p></blockquote><p>本来以为这个广告是去不掉了，看到这里我觉得Coding还算人性化。最多就是在首页底部声明一下「Hosted by Coding Pages」，总比每个人第一次一打开你的博客就是广告要舒服。</p><h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><p>官方已经提供了文字或者图片两种策略。我个人偏向于加文字声明。</p><pre><code>&lt;p&gt;Hosted by &lt;a href=&quot;https://pages.coding.me&quot; style=&quot;font-weight: bold&quot;&gt;Coding Pages&lt;/a&gt;&lt;/p&gt;</code></pre><p>找到<code>footer.swig</code>文件，将这段代码加在自己觉得合适的位置就好，保存一下，看下效果。如果正常渲染了，就部署一下，然后在Coding Pages服务中提交审核申请。</p><blockquote><p>Hosted by Coding Pages 已提交审核，我们会在两个工作日内为您处理。</p></blockquote><p>然后就等待审核结束就OK。</p><p>毕竟人家也是要吃饭的嘛！那就只能这样了。</p>]]></content>
      
      
      <categories>
          
          <category> 分享推荐 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo博客 </tag>
            
            <tag> coding </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Optimizing Shadowsocks</title>
      <link href="/p/c25a.html"/>
      <url>/p/c25a.html</url>
      
        <content type="html"><![CDATA[<h1 id="Optimizing-Shadowsocks"><a href="#Optimizing-Shadowsocks" class="headerlink" title="Optimizing Shadowsocks"></a>Optimizing Shadowsocks</h1><p>If you see a lot of <code>error: too many open files</code> in your log, you should optimize your system. This tutorial applies to all shadowsocks servers (Python, libev, etc).</p><p>On Debian 7:</p><p>Create <code>/etc/sysctl.d/local.conf</code> with the following content:</p><pre><code># max open filesfs.file-max = 51200# max read buffernet.core.rmem_max = 67108864# max write buffernet.core.wmem_max = 67108864# default read buffernet.core.rmem_default = 65536# default write buffernet.core.wmem_default = 65536# max processor input queuenet.core.netdev_max_backlog = 4096# max backlognet.core.somaxconn = 4096# resist SYN flood attacksnet.ipv4.tcp_syncookies = 1# reuse timewait sockets when safenet.ipv4.tcp_tw_reuse = 1# turn off fast timewait sockets recyclingnet.ipv4.tcp_tw_recycle = 0# short FIN timeoutnet.ipv4.tcp_fin_timeout = 30# short keepalive timenet.ipv4.tcp_keepalive_time = 1200# outbound port rangenet.ipv4.ip_local_port_range = 10000 65000# max SYN backlognet.ipv4.tcp_max_syn_backlog = 4096# max timewait sockets held by system simultaneouslynet.ipv4.tcp_max_tw_buckets = 5000# turn on TCP Fast Open on both client and server sidenet.ipv4.tcp_fastopen = 3# TCP receive buffernet.ipv4.tcp_rmem = 4096 87380 67108864# TCP write buffernet.ipv4.tcp_wmem = 4096 65536 67108864# turn on path MTU discoverynet.ipv4.tcp_mtu_probing = 1# for high-latency networknet.ipv4.tcp_congestion_control = hybla# for low-latency network, use cubic instead# net.ipv4.tcp_congestion_control = cubic</code></pre><p>Then:</p><pre><code>sysctl --system</code></pre><p>Older system:</p><pre><code>sysctl -p /etc/sysctl.d/local.conf</code></pre><p>Warning: DO NOT ENABLE net.ipv4.tcp_tw_recycle!!! See <a href="">this article</a>.</p><p>If you use Supervisor, Make sure you have the following line in <code>/etc/default/supervisor</code>. Once you added that line, restart Supervisor (service stop supervisor &amp;&amp; service start supervisor).</p><pre><code>ulimit -n 51200</code></pre><p>If you run shadowsocks in the background in other ways, make sure to add <code>ulimit -n 51200</code> in your init script.</p><p>After optimizing, a busy Shadowsocks server that handles thousands of connections, takes about 30MB memory and 10% CPU. Notice that at the same time, Linux kernel usually uses &gt;100MB RAM to hold buffer and cache for those connections. By using the sysctl config above, you are trading off RAM for speed. If you want to use less RAM, reduce the size of rmem and wmem.</p><p>OK!</p>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VPN </tag>
            
            <tag> 翻墙 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何架设自己的VPN服务器翻墙</title>
      <link href="/p/95f8.html"/>
      <url>/p/95f8.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>翻墙这个词在网上容易被和谐，所以通常使用“科学上网”这个词！在国内，强大的长城防火墙GWF防止了很多人访问国外网站，本文使用shadowsocks，架设个人的VPN，实现科学上网。</p></blockquote><h1 id="一、准备"><a href="#一、准备" class="headerlink" title="一、准备"></a>一、准备</h1><h2 id="1、购买一台国外的服务器（CentOS），可以在阿里云等平台上购买。该服务器用于搭建-shadowsocks-的服务器。"><a href="#1、购买一台国外的服务器（CentOS），可以在阿里云等平台上购买。该服务器用于搭建-shadowsocks-的服务器。" class="headerlink" title="1、购买一台国外的服务器（CentOS），可以在阿里云等平台上购买。该服务器用于搭建 shadowsocks 的服务器。"></a>1、购买一台国外的服务器（CentOS），可以在阿里云等平台上购买。该服务器用于搭建 shadowsocks 的服务器。</h2><h2 id="2、下载-shadowsocks的客户端和服务端"><a href="#2、下载-shadowsocks的客户端和服务端" class="headerlink" title="2、下载 shadowsocks的客户端和服务端"></a>2、下载 shadowsocks的客户端和服务端</h2><ul><li><p>服务端：以前的<a href="/2020/03/22/vpn2/">一篇文章</a> </p></li><li><p>客户端软件：<a href="https://share.weiyun.com/5ijfNM2" target="_blank" rel="noopener">https://share.weiyun.com/5ijfNM2</a></p></li></ul><h1 id="二、操作"><a href="#二、操作" class="headerlink" title="二、操作"></a>二、操作</h1><h2 id="1-购买阿里云的境外服务器，放开要使用的端口，这里我使用10000"><a href="#1-购买阿里云的境外服务器，放开要使用的端口，这里我使用10000" class="headerlink" title="1.购买阿里云的境外服务器，放开要使用的端口，这里我使用10000"></a>1.购买阿里云的境外服务器，放开要使用的端口，这里我使用10000</h2><p><img src="https://gitee.com/badenough/blogImage/raw/master/img/image30.png" alt="aliyun"></p><h2 id="2-在服务器上安装-shadowsocks-服务端-可能需要升级python"><a href="#2-在服务器上安装-shadowsocks-服务端-可能需要升级python" class="headerlink" title="2.在服务器上安装 shadowsocks 服务端(可能需要升级python)"></a>2.在服务器上安装 shadowsocks 服务端(可能需要升级python)</h2><pre><code>yum install python-setuptools &amp;&amp; easy_install pippip install shadowsocks</code></pre><h2 id="3-创建配置文件"><a href="#3-创建配置文件" class="headerlink" title="3.创建配置文件"></a>3.创建配置文件</h2><pre><code>vi/etc/shadowsocks.json{&quot;server&quot;:&quot;0.0.0.0&quot;,&quot;server_port&quot;:10000,&quot;local_port&quot;:1080,&quot;password&quot;:&quot;pwd_wuxl&quot;,&quot;timeout&quot;:600,&quot;method&quot;:&quot;aes-256-cfb&quot;}</code></pre><h2 id="3-启动服务端"><a href="#3-启动服务端" class="headerlink" title="3.启动服务端"></a>3.启动服务端</h2><p>前台启动</p><pre><code>ssserver -p 443 -k password -m rc4-md5</code></pre><p>如果要后台运行：</p><pre><code>sudo ssserver -p 443 -k password -m rc4-md5 --user nobody -d start</code></pre><p>如果要停止：</p><pre><code>sudo ssserver -d stop</code></pre><p>如果要检查日志：</p><pre><code>sudo less /var/log/shadowsocks.log</code></pre><h2 id="4-安装启动客户端"><a href="#4-安装启动客户端" class="headerlink" title="4.安装启动客户端"></a>4.安装启动客户端</h2><p>windows下的客户端截图如下，在托盘区有个纸飞机，右键会弹出以下窗口：<br><img src="https://gitee.com/badenough/blogImage/raw/master/img/image34.png" alt="tup"></p><p>启用系统代理：是否运用代理的开关。<br>系统代理模式：PAC表示智能选择代理，需要代理的域名列表在PAC文件列表中。全局模式表示所有的网站都运用代理。推荐用PAC。<br>服务器：下有几个选项，可以选择用哪个代理服务器。点击编辑服务器，会弹出一个框。<br><img src="https://gitee.com/badenough/blogImage/raw/master/img/image35.png" alt="tup"></p><p>在弹出的框中输入服务器域名（就是你的 shadowsocks的服务器地址）、端口、密码（端口和密码在第2步定义了），然后点击OK。<br><img src="https://gitee.com/badenough/blogImage/raw/master/img/image36.png" alt="tup"></p><p>PAC是指那些需要代理的域名列表。可以选择是用本地的PAC文件还是用线上的PAC文件。你也可以自行编辑。若使用本地的PAC文件，可以每隔一段时间更新一下这个文件(点击从GFWList更新到本地PAC)。<br><img src="https://gitee.com/badenough/blogImage/raw/master/img/image37.png" alt="t"></p><p>其他基本上很少用到。暂不做介绍。<br>Mac系统的客户端如下，大体类似，就不再赘述。<br><img src="https://gitee.com/badenough/blogImage/raw/master/img/14361170071470.jpg" alt="ae"></p><p><img src="https://gitee.com/badenough/blogImage/raw/master/img/14361170061221.jpg" alt="b"></p><h2 id="15、验证成果。输入谷歌-https-www-google-com-，如下，成功！"><a href="#15、验证成果。输入谷歌-https-www-google-com-，如下，成功！" class="headerlink" title="15、验证成果。输入谷歌 https://www.google.com/ ，如下，成功！"></a>15、验证成果。输入谷歌 <a href="https://www.google.com/" target="_blank" rel="noopener">https://www.google.com/</a> ，如下，成功！</h2>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VPN </tag>
            
            <tag> 翻墙 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>从零搭建Hexo博客并部署阿里云服务器</title>
      <link href="/p/c804.html"/>
      <url>/p/c804.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>前天刚买了个云主机，就开始学着搭博客了，参考了挺多大手的博客，最终还是选择使用Hexo来作为自己的博客框架。测试结束了，今天也将自己搭博客过程中踩过的坑做一个输出，希望对有想法要做自己的博客的同学们有一些帮助。</p><h2 id="一、云服务器和域名的购买"><a href="#一、云服务器和域名的购买" class="headerlink" title="一、云服务器和域名的购买"></a>一、云服务器和域名的购买</h2><h3 id="云服务器"><a href="#云服务器" class="headerlink" title="云服务器"></a>云服务器</h3><p>服务器我选择的是阿里云的，由于自己是学生所以体验了一把阿里云的云翼计划（每个月只要10元钱，也不是很贵。），当然阿里云和腾讯云的价格都差不多，同学们可以自行选择。<br>这里就这样了，不强硬推荐了，你们随便买吧！！</p><h3 id="域名"><a href="#域名" class="headerlink" title="域名"></a>域名</h3><p>域名可以上万网自己找自己喜欢的，在这里要说的是，如果是国内的域名是要备案的，我的域名也正在备案当中，大概是6-20个工作日，如果不想等的同学可以购买国外的域名。</p><h2 id="二、关于云服务器的操作"><a href="#二、关于云服务器的操作" class="headerlink" title="二、关于云服务器的操作"></a>二、关于云服务器的操作</h2><h3 id="1-配置安全组规则"><a href="#1-配置安全组规则" class="headerlink" title="1.配置安全组规则"></a>1.配置安全组规则</h3><p>由于阿里云是默认不授权80端口的访问的，所以我们要手动配置。</p><p>打开阿里云服务器管理控制台-&gt;点击左侧安全组-&gt;点击右侧的配置规则-&gt;点击添加安全组规则</p><h4 id="如下图："><a href="#如下图：" class="headerlink" title="如下图："></a>如下图：</h4><p><img src="https://gitee.com/badenough/blogImage/raw/master/img/2020041401.jpg" alt="配置"></p><p>这是个大坑，如果不设置就无法访问服务器，所以放在第一点说。</p><h3 id="2-配置服务器环境"><a href="#2-配置服务器环境" class="headerlink" title="2.配置服务器环境"></a>2.配置服务器环境</h3><h4 id="1-服务器环境搭建"><a href="#1-服务器环境搭建" class="headerlink" title="1.服务器环境搭建"></a>1.服务器环境搭建</h4><p>我们需要nginx作为我们的服务器，所以我们首先要安装nginx。可以使用yum命令直接进行安装。<br>安装执行命令如下</p><pre><code>yum install -y nginx</code></pre><p>启动服务器：</p><pre><code>systemctl start nginxsystemctl enable nginx</code></pre><p>我们要记住的是/etc/nginx/是nginx默认的配置路径，一会要用到。</p><h4 id="2-配置服务器路由"><a href="#2-配置服务器路由" class="headerlink" title="2.配置服务器路由"></a>2.配置服务器路由</h4><p>安装并启动服务器后，我们就完成了第一步，现在我们可以尝试使用自己的电脑去访问服务器的公网IP。我们可以惊喜地发现，公网IP可以打开一个nginx的默认网页。这样，我们就成功了第一步。</p><p><img src="https://gitee.com/badenough/blogImage/raw/master/img/201908151.jpg" alt="服务器"></p><p>但是我们实际上是想要让这个地址指向我们的博客，而不是nginx的默认网址，这就需要我们去配置nginx的配置文件。我在配置的时候在网上查到的关于nginx配置文件的有关资料，大部分关于centOS的资料都是说配置位于etc/nginx/conf.d/ 下的dafault.conf 这个配置文件，但是我在配置的时候并没有找到它，后来查看了一下文件结构，阿里云默认的库下载的是fedora版本的nginx，所以我们应该配置的是位于 etc/nginx/ 下的 nginx.conf 。</p><p>我们先不急着打开这个文件，因为我并不建议直接配置这个文件，我们应该先创建一个新的文件，然后采用include的方式，将这个文件包含进nginx.conf中。</p><p>操作如下：<br>在/etc/nginx/目录下创建一个文件夹 叫 vhost</p><pre><code>cd /etc/nginx/amkdir vhostcd vhostvim blog.conf</code></pre><p>编辑 blog.conf文件内容</p><pre><code>server{    listen    80;    root /home/www/website;这里填博客目录存放的地址    server_name 这里填域名如(www.baidu.com) 如果暂时没有域名就填阿里云的公网ip，以后有了再改回来;    location /{    }}</code></pre><p>保存并退出<br>:wq</p><p>打开/etc/nginx/目录下的nginx.conf文件<br>vi /etc/nginx/nginx.conf<br><img src="https://gitee.com/badenough/blogImage/raw/master/img/20190815.png" alt="文件"></p><p>如果以后还想添加新的网站，也可以在vhost目录下新建一个conf配置文件。</p><p>在刚才我们自己写的blog.conf配置文件中root的路径相应路径建立博客的目录：</p><pre><code>cd /homemkdir wwwcd /wwwmkdir website</code></pre><p>这样我们就可以得到 /home/www/website 作为博客的根路径，就和配置文件中的路径对应上了。</p><h3 id="3-安装Git以及Node-js"><a href="#3-安装Git以及Node-js" class="headerlink" title="3.安装Git以及Node.js"></a>3.安装Git以及Node.js</h3><h4 id="1-安装Node-js"><a href="#1-安装Node-js" class="headerlink" title="1.安装Node.js"></a>1.安装Node.js</h4><p>安装nodejs有很多种方式，我这边就说一种</p><pre><code>curl -sL https://rpm.nodesource.com/setup_10.x | bash -yum install -y nodejs</code></pre><p>安装完成后执行 node -v 和 npm -v 如果打印版本号则安装成功</p><pre><code>[root@localhost /]# node -vv10.9.0[root@localhost /]# npm -v6.2.0</code></pre><h5 id="2-安装Git及配置仓库"><a href="#2-安装Git及配置仓库" class="headerlink" title="2.安装Git及配置仓库"></a>2.安装Git及配置仓库</h5><p>这一部分主要目的是让我们个人的电脑可以通过ssh方式连接到云服务器，然后我们就可以通过命令行方式将我们的博客Po到服务器上。操作如下：<br>安装git:<br>yum install git<br>配置git用户<br>adduser git<br>修改用户权限:</p><pre><code>chmod 740 /etc/sudoersvi /etc/sudoers</code></pre><p>找到这个位置添加下面这句话<br>git ALL=(ALL) ALL<br><img src="https://gitee.com/badenough/blogImage/raw/master/img/201908151.png" alt="tup"><br>保存退出后 将sudoers文件权限改回原样<br>chmod 400 /etc/sudoers<br>设置git用户的密码<br>sudo passwd git<br>切换到git用户，然后在~目录下创建.ssh文件夹</p><pre><code>su gitcd ~mkdir .sshcd .ssh</code></pre><p>生成公钥密钥文件(这一步很重要，也是我踩过的坑)<br>ssh-keygen<br>此时在目录下就会有两个文件，分别是<br>id_rsa 和 id_rsa.pub<br>其中 id_rsa.pub 就是公钥文件 我们复制一份<br>cp id_rsa.pub authorized_keys<br>这样目录下就会有一个authorized_keys文件，它和id_rsa.pub一模一样。<br>最后我们修改它的权限</p><pre><code>chmod 600 ~/.ssh/authorized_keyschmod 700 ~/.ssh</code></pre><p>然后我们在自己的电脑上自己的电脑上自己的电脑上（重要的事说三遍），打开cmd，使用ssh方式连接我们的云服务器。<br><img src="https://gitee.com/badenough/blogImage/raw/master/img/20190815132324323.png" alt="sL"></p><p>输入以下内容：<br>git –work-tree=/home/www/website –git-dir=/home/git/blog.git checkout -f<br>保存退出并授予该文件可执行权限<br>chmod +x ~/blog.git/hooks/post-receive<br>至此我们就完成了所有关于服务器端的配置。、</p><h2 id="三、关于本地主机的操作"><a href="#三、关于本地主机的操作" class="headerlink" title="三、关于本地主机的操作"></a>三、关于本地主机的操作</h2><h3 id="1-安装Node-js-1"><a href="#1-安装Node-js-1" class="headerlink" title="1.安装Node.js"></a>1.安装Node.js</h3><p>下载地址：<a href="https://nodejs.org/en/" target="_blank" rel="noopener">Node.js</a><br>安装过程基本直接 下一步 就可以了。<br>安装完成后使用cmd查看是否安装成功</p><pre><code>node -vv10.16.2npm -v6.9.0</code></pre><p>出现版本号说明安装成功</p><h3 id="2-安装Hexo"><a href="#2-安装Hexo" class="headerlink" title="2.安装Hexo"></a>2.安装Hexo</h3><p>由于使用npm直接下载会有很多人遇到卡顿的问题(国外服务器)，所以我们要做的第一步工作是将npm换成淘宝的服务器。<br>cmd输入下面的命令：</p><pre><code>npm config set registry https://registry.npm.taobao.org# 然后安装cnpmnpm install -g cnpm --registry=https://registry.npm.taobao.org</code></pre><h3 id="接下来就直接安装-hexo"><a href="#接下来就直接安装-hexo" class="headerlink" title="接下来就直接安装 hexo"></a>接下来就直接安装 hexo</h3><pre><code>cnpm install -g hexo-cli</code></pre><p>然后我们选一个目录用来初始化博客程序<br>例如G:/Blog</p><p>cmd输入：</p><pre><code>G:cd Bloghexo init</code></pre><p>执行成功后安装两个插件</p><pre><code>npm install hexo-deployer-git --savenpm install hexo-server</code></pre><p>之后我们就可以在自己的本机上查看自己的博客了</p><pre><code>hexo ghexo s</code></pre><p>打开浏览器访问 <a href="http://localhost:4000" target="_blank" rel="noopener">http://localhost:4000</a></p><h3 id="3-配置-config-yml完成服务器的部署"><a href="#3-配置-config-yml完成服务器的部署" class="headerlink" title="3.配置_config.yml完成服务器的部署"></a>3.配置_config.yml完成服务器的部署</h3><p>在刚才生成hexo的目录下，找到_config.yml，打开它。<br>找到deploy 做如下配置</p><pre><code>deploy:type: gitrepo: git@这里改为服务器公网IP:/home/git/blog.git       branch: master                           message:                                  </code></pre><p>保存退出<br>然后尝试写一篇文章并且发布到服务器上</p><pre><code>hexo new &quot;Hello My First Blog&quot;hexo clean &amp;&amp; hexo generate --deploy</code></pre><p>在服务器上重新运行nginx服务器</p><pre><code>nginx -s reload</code></pre><h2 id="四、完成部署"><a href="#四、完成部署" class="headerlink" title="四、完成部署"></a>四、完成部署</h2><p>完成部署后可以去Hexo主题下载自己喜欢的主题，美化博客。<br>现在去本地主机浏览器上输入域名或者公网IP，访问你的博客吧！</p>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 阿里云 </tag>
            
            <tag> 服务器 </tag>
            
            <tag> hexo博客 </tag>
            
            <tag> matery主题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo框架下无法生成主页等文件</title>
      <link href="/p/3449.html"/>
      <url>/p/3449.html</url>
      
        <content type="html"><![CDATA[<h2 id="hexo-g-无法生成-index-html"><a href="#hexo-g-无法生成-index-html" class="headerlink" title="hexo g 无法生成 index.html"></a>hexo g 无法生成 index.html</h2><p>如果发现这样的问题就说明是你在hexo博客在建立过程中出现了，插件少了的问题，只有当你使用的插件没有安装的时候才会出现这样的问题，我也发生了，所以去找问题了。</p><p>找了半天发现，好像是插件少了：</p><h3 id="检查代码："><a href="#检查代码：" class="headerlink" title="检查代码："></a>检查代码：</h3><pre><code>cnpm ls --depth 0  //由于我是cnpm直接指向了npm.taobao.com所以我这里就直接使用cpnm了，如果你没有导向的话，你只能：npm ls --depth 0</code></pre><p>检查代码下去后，发现了问题，有好多插件没有安装或者是git搜索不到，所以就无法生成页面。</p><h2 id="hexo-的一些插件未安装插件"><a href="#hexo-的一些插件未安装插件" class="headerlink" title="hexo 的一些插件未安装插件"></a>hexo 的一些插件未安装插件</h2><blockquote><p>npm ERR! missing npm ERR! missing hexo-generator-archive…</p></blockquote><h3 id="代码页面："><a href="#代码页面：" class="headerlink" title="代码页面："></a>代码页面：</h3><pre><code>hexo-site@0.0.0 D:\blog2+-- hexo@4.2.0+-- UNMET DEPENDENCY hexo-deployer-git@^2.1.0+-- UNMET DEPENDENCY hexo-dohexouban@^1.1.3+-- UNMET DEPENDENCY hexo-external-link@^1.0.7+-- hexo-generator-archive@1.0.0+-- hexo-generator-category@1.0.0+-- UNMET DEPENDENCY hexo-generator-feed@^2.2.0+-- hexo-generator-index@1.0.0+-- UNMET DEPENDENCY hexo-generator-search@^2.4.0+-- hexo-generator-tag@1.0.0+-- hexo-neat@1.0.4+-- hexo-renderer-ejs@1.0.0+-- hexo-renderer-marked@2.0.0+-- hexo-renderer-stylus@1.1.0+-- hexo-server@1.0.0`-- UNMET DEPENDENCY hexo-wordcount@^6.0.1</code></pre><p>那就只能对着这些没有安装的插件，一个个的安装了：</p><pre><code>//把上面所有显示不了的插件都安装一下就好了。cnpm install hexo-deployer-git --savecnpm install hexo-douban --savecnpm install hexo-external-link --savecnpm install hexo-generator-feed --savecnpm install hexo-generator-search  --savecnpm install hexo-wordcount  --save</code></pre><p>安装完后重新构建即可解决。</p><h3 id="最后，完成了。"><a href="#最后，完成了。" class="headerlink" title="最后，完成了。"></a>最后，完成了。</h3><blockquote><p>可以生成页面了。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git问题 </tag>
            
            <tag> hexo博客 </tag>
            
            <tag> 插件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>将Hexo博客部署到云主机</title>
      <link href="/p/1400.html"/>
      <url>/p/1400.html</url>
      
        <content type="html"><![CDATA[<h1 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h1><blockquote><p>在云主机上搭建一个git裸仓库，然后使用nginx作为网页服务器，就可以轻松将Hexo博客通过git部署到云主机上。</p></blockquote><h2 id="这是一个忧伤的故事"><a href="#这是一个忧伤的故事" class="headerlink" title="这是一个忧伤的故事"></a>这是一个忧伤的故事</h2><p>我的博客之前部署在Coding Pages上，挺不错的，还可以一键启用HTTPS。作为一个喜欢折腾的人，我突然打算使用CDN加速一下访问速度，然而，国内的CDN服务要求网站必须备案。特意邮件问了Coding的客服，看来他们近期是不打算支持备案的，于是我就不得不考虑弄个云主机来玩玩了。</p><h2 id="后来，"><a href="#后来，" class="headerlink" title="后来，"></a>后来，</h2><p>Coding Pages忽然添加了跳转页面，也就是说访问我的博客的话，会先弹出5秒钟的Coding广告页面。买个Coding年费199的会员就可以去掉，也不算贵，毕竟占着人家的资源。然而，我还琢磨着备案后用CND呢…</p><p>于是，我调研了一下各个云服务的价格，1核1G的云主机一年大概都是600+，比Coding会员贵了不少。不过腾讯云最近在搞采购节，1核1G的云主机一年只要238，果断买了!</p><p>然而，备案这事貌似要折腾很久……此处省略1万字。</p><h1 id="0-准备工作"><a href="#0-准备工作" class="headerlink" title="0. 准备工作"></a>0. 准备工作</h1><p>我的云主机的操作系统是<code>****Ubuntu Server 16.04.1 LTS 64****位********。不妨假设它的IP地址是****152.92.13.78****</code><br>(我当然不会告诉你真实IP)，你需要做的第一步就是配置SSH公钥登陆，这样Hexo通过git部署博客时就不需要输入密码了。</p><h2 id="SSH公钥登陆将不需要输入密码"><a href="#SSH公钥登陆将不需要输入密码" class="headerlink" title="SSH公钥登陆将不需要输入密码"></a>SSH公钥登陆将不需要输入密码</h2><pre><code>ssh root@152.92.13.78</code></pre><p>为了省事，我将直接使用root用户，这是<code>********不符合安全规范********</code>的。但是，一方面我只是为了部署博客，不担心黑客干坏事；另一方面，我也做了必要的安全防范，比如配置腾讯云安全组，禁止SSH密码登陆以及配置UFW防火墙。</p><p>这篇的博客参考了利用 GIT HOOKS 部署 HEXO 到 VPS，原文图文并茂。我做了一些优化，例如使用root用户，简化nginx配置文件，简化post-receive脚本，同时简单地介绍一下原理。</p><h2 id="1-安装git和nginx"><a href="#1-安装git和nginx" class="headerlink" title="1. 安装git和nginx"></a>1. 安装git和nginx</h2><pre><code>apt-get updateapt-get install git-core nginx</code></pre><h2 id="2-配置Nginx"><a href="#2-配置Nginx" class="headerlink" title="2. 配置Nginx"></a>2. 配置Nginx</h2><pre><code>****/var/www/blog****目录用于放置生成的静态文件mkdir /var/www/blog编写nginx配置文件vim /etc/nginx/conf.d/blog.conf</code></pre><p>由于我的备案还没弄好，还不能使用80端口，所以暂时使用8080端口部署博客。</p><pre><code>server{    listen 8080;    root /var/www/blog;}</code></pre><h3 id="重启nginx"><a href="#重启nginx" class="headerlink" title="重启nginx"></a>重启nginx</h3><p>ubuntu 16.04的init系统换成了systemd，因此使用systemctl命令来重启nginx。</p><pre><code>systemctl restart nginx</code></pre><h2 id="3-配置Git-Hooks"><a href="#3-配置Git-Hooks" class="headerlink" title="3. 配置Git Hooks"></a>3. 配置Git Hooks</h2><h3 id="创建Git裸仓库"><a href="#创建Git裸仓库" class="headerlink" title="创建Git裸仓库"></a>创建Git裸仓库</h3><pre><code>****blog.git****作为远程Git仓库，Hexo在本地生成的博客静态文件可以通过push与其同步。mkdir ~/blog.git &amp;&amp; cd ~/blog.gitgit init --bare</code></pre><h3 id="配置Hooks脚本"><a href="#配置Hooks脚本" class="headerlink" title="配置Hooks脚本"></a>配置Hooks脚本</h3><pre><code>****post-receive****脚本将在****blog.git****仓库接收到push时执行。vim blog.git/hooks/post-receive脚本非常简单，删除原有的****/var/www/blog****目录，然后从****blog.git****仓库clone新的博客静态文件。#!/bin/bashrm -rf /var/www/bloggit clone /root/blog.git /var/www/blog给****post-receive****脚本执行权限chmod +x blog.git/hooks/post-receive</code></pre><h2 id="4-部署Hexo博客"><a href="#4-部署Hexo博客" class="headerlink" title="4. 部署Hexo博客"></a>4. 部署Hexo博客</h2><p>修改_config.yml</p><pre><code>deploy:  type: git  repo: root@152.92.13.78:blog.git</code></pre><h1 id="部署博客"><a href="#部署博客" class="headerlink" title="部署博客"></a>部署博客</h1><p>hexo先生成新的博客静态文件，然后通过git将其同步到云主机的<code>****blog.git****</code>仓库。</p><pre><code>hexo d</code></pre><p>然后通过<a href="http://178.118.84.78:8080/即可访问博客。" target="_blank" rel="noopener">http://178.118.84.78:8080/即可访问博客。</a></p><p>备案之后，将ngnix端口改为80，把server_name设为域名，然后修改DNS解析到云主机就好了。</p>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 阿里云 </tag>
            
            <tag> 服务器 </tag>
            
            <tag> hexo博客 </tag>
            
            <tag> matery主题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>修改HTTPS加密协议TLS1.0为TLS1.2</title>
      <link href="/p/dcf6.html"/>
      <url>/p/dcf6.html</url>
      
        <content type="html"><![CDATA[<h2 id="一：首先为什么要改为TLS1-2"><a href="#一：首先为什么要改为TLS1-2" class="headerlink" title="一：首先为什么要改为TLS1.2"></a>一：首先为什么要改为TLS1.2</h2><blockquote><p>因为各大浏览器相继发布声明将停止支持 TLS 1.0 和 TLS 1.1<br>简评：TLS 1.0 发布至今已将近 20 周年即将寿终正寝，期间为我们保障了千亿次甚至万亿次的数据请求安全。</p></blockquote><p>TLS 工作组几个月前发布声明文件弃用 TLS 1.0 和 TLS 1.1。</p><p>包括火狐，Safari，Chorme，Edge 在内的几个浏览器大厂同时发表声明将于 2020 年全面停止支持 TLS 1.0 和 1.1，对于停止支持后还在使用的网页将会向用户弹窗网页安全提示。</p><p><img src="https://gitee.com/badenough/blogImage/raw/master/img/f.jpg" alt="浏览器"></p><h2 id="TLS-是一种网络数据安全的加密协议，防止数据被攻击和窃听"><a href="#TLS-是一种网络数据安全的加密协议，防止数据被攻击和窃听" class="headerlink" title="TLS 是一种网络数据安全的加密协议，防止数据被攻击和窃听"></a>TLS 是一种网络数据安全的加密协议，防止数据被攻击和窃听</h2><p>使用这个协议最广的便是 HTTPS ，它是 HTTP over SSL 的简称，即工作在 SSL （或 TLS）上的 HTTP，这也是为什么 HTTPS 比 HTTP 传输更安全更可靠</p><h2 id="TLS-各个版本现状"><a href="#TLS-各个版本现状" class="headerlink" title="TLS 各个版本现状"></a>TLS 各个版本现状</h2><p>TLS 1.0 作为最早的版本，加密算法依赖于 MD5 和 SHA-1 已经不再强大，有被破解的风险和其他缺陷，最重要的是 TLS 1.0 不支持现代加密算法。</p><p>TLS 1.1 对于 1.0 的缺点并没有很大的改善。</p><p>直到十年前发布的 TLS 1.2 解决了 TLS 1.0 和 1.1 中的弱点，并从那时起就被广泛采用，如今只有极少数的网页 HTTPS 连接还在使用 TLS 1.0 或 1.1。<br><img src="https://gitee.com/badenough/blogImage/raw/master/img/5.jpg" alt="Firefox Beta 62，2018年8月至9月建立的所有连接的TLS版本比重"></p><h2 id="二：下载windows服务器安全管理工具-IISCrypto"><a href="#二：下载windows服务器安全管理工具-IISCrypto" class="headerlink" title="二：下载windows服务器安全管理工具 IISCrypto"></a>二：下载windows服务器安全管理工具 IISCrypto</h2><p>百度网盘：<br>链接: <a href="https://pan.baidu.com/s/1uzQDhlYiFEX3UPShMMdnEg" target="_blank" rel="noopener">https://pan.baidu.com/s/1uzQDhlYiFEX3UPShMMdnEg</a><br>提取码: j1xq</p><h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><p><img src="https://gitee.com/badenough/blogImage/raw/master/img/3.jpg" alt="图片"></p><p>其实TLS1.0和TLS1.1勾选不去掉也行，会优先使用TLS1.2，但是不去掉你的服务器还是支持这两种加密方式。</p><p>Apply后会自动重启服务器的，完结撒花<em>★,°</em>:.☆(￣▽￣)/$:<em>.°★</em> 。</p>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 程序员 </tag>
            
            <tag> https </tag>
            
            <tag> ssl </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PicGo + Gitee(码云)实现markdown图床</title>
      <link href="/p/4b9d.html"/>
      <url>/p/4b9d.html</url>
      
        <content type="html"><![CDATA[<h2 id="PicGo-Gitee-码云-实现markdown图床"><a href="#PicGo-Gitee-码云-实现markdown图床" class="headerlink" title="PicGo + Gitee(码云)实现markdown图床"></a>PicGo + Gitee(码云)实现markdown图床</h2><blockquote><p>markdown是一门易于上手能帮助作者专心写作的文档编辑语言，它的好处太多了，建议想自己动手做笔记写博客的朋友都可以学一学，10分钟上手。</p></blockquote><p>Tpyora是一款优雅的markdown编辑器，也推荐给大家，至于安装和配置，比安装word还简单，就不赘述了<br>但是，这都不是重点，重点是咱们写博客的时候，总是需要插入图片的，图片存在本地的话上传到博客网站去就没法显示了，就算一个图一个图的复制粘贴上去，想移植到其他的博客网站，图就会失效，我们就需要图床</p><h3 id="图床是干什么的？"><a href="#图床是干什么的？" class="headerlink" title="图床是干什么的？"></a>图床是干什么的？</h3><p>图床就是一个便于在博文中插入在线图片连接的个人图片仓库。设置图床之后，在自己博客中插入的图片链接就可以随时随地在线预览了，并且不会因为任何意外原因无法查看，除非自己亲自删除。</p><p>神奇的PicGo就是为了解决这个问题诞生的，它可以将图片上传到指定的图床上，然后返回markdown链接，直接粘贴到你的文档中，就搞定啦!</p><p>问题又来了，网上推荐七牛云阿里云都是要租赁服务器的，太麻烦还要钱，微博现在挂链接又很厉害。大部分人选择用github，但是github虽好却是国外的网站，速度终究比不上国内网站，研究了小半天，终于发现完美的解决方案.</p><p>最终决定使用PicGo + 国内的github - 码云来实现markdown图床<br>废话说到这里，开始进入正题</p><h2 id="1-安装"><a href="#1-安装" class="headerlink" title="1. 安装"></a>1. 安装</h2><ul><li>PicGo</li><li>picgo-plugin-gitee-uploader插件</li></ul><h3 id="首先打开picgo官网，下载安装包"><a href="#首先打开picgo官网，下载安装包" class="headerlink" title="首先打开picgo官网，下载安装包"></a>首先打开picgo官网，下载安装包</h3><p>速度超级慢，没关系，PicGo2.2.2的安装包：<a href="">点击此处</a>吧！</p><h3 id="安装之后打开主界面"><a href="#安装之后打开主界面" class="headerlink" title="安装之后打开主界面"></a>安装之后打开主界面</h3><p>点进去就是一个上传的界面，干净整洁！还是比较好看的。<br><img src="https://gitee.com/badenough/blogImage/raw/master/img/20524049-e6194df4e0b60.webp" alt="上传界面"></p><h3 id="选择最底下的插件设置，搜索gitee"><a href="#选择最底下的插件设置，搜索gitee" class="headerlink" title="选择最底下的插件设置，搜索gitee"></a>选择最底下的插件设置，搜索gitee</h3><p><img src="https://gitee.com/badenough/blogImage/raw/master/img/20524049-8ebcd31954e4c76c.webp" alt="插件图"></p><h3 id="点击右边的gitee-uploader-1-1-2开始安装"><a href="#点击右边的gitee-uploader-1-1-2开始安装" class="headerlink" title="点击右边的gitee-uploader 1.1.2开始安装"></a>点击右边的gitee-uploader 1.1.2开始安装</h3><blockquote><p>这里注意一下，必须要先安装node.js才能安装插件，没装的自己装一下，然后重启就行。</p></blockquote><p>这个地方有两个插件，我试了一遍，两个都能用，大家看心情选择，先说一下右边这个gitee-uploader 1.1.2，用不了的同学就选左边那个，我都会讲一遍配置</p><h2 id="2-建立gitee（码云）图床库"><a href="#2-建立gitee（码云）图床库" class="headerlink" title="2. 建立gitee（码云）图床库"></a>2. 建立gitee（码云）图床库</h2><p>注册码云的方法很简单，网站引导都是中文，不多说了，我们直接建立自己的图床库。</p><h3 id="点击右上角的-号，新建仓库"><a href="#点击右上角的-号，新建仓库" class="headerlink" title="点击右上角的+号，新建仓库"></a>点击右上角的+号，新建仓库</h3><p><img src="https://gitee.com/badenough/blogImage/raw/master/img/20524049.webp" alt="新建仓库"></p><p>新建仓库的要点如下：</p><ul><li>输入一个仓库名称</li><li>其次将仓库设为公开</li><li>勾选使用Readme文件初始化这个仓库</li></ul><p>这个选项勾上，这样码云会自动给你的仓库建立master分支，这点很重要!!! 我因为这点折腾了很久，因为使用github做图床picgo好像会自动帮你生成master分支，而picgo里的gitee插件不会帮你自动生成分支。</p><p><img src="https://gitee.com/badenough/blogImage/raw/master/img/2052409-092faaf928f931c2.webp" alt="图"></p><p>点击创建进入下一步</p><h2 id="3-配置PicGo"><a href="#3-配置PicGo" class="headerlink" title="3. 配置PicGo"></a>3. 配置PicGo</h2><p>安装了gitee-uploader 1.1.2插件之后，我们开始配置插件</p><h3 id="配置插件的要点如下："><a href="#配置插件的要点如下：" class="headerlink" title="配置插件的要点如下："></a>配置插件的要点如下：</h3><p><img src="https://gitee.com/badenough/blogImage/raw/master/img/20524049-a496e0ff6a5661e5.webp" alt="图片"></p><ul><li><p>repo：用户名/仓库名称，比如我自己的仓库leonG7/blogImage，也可以直接复制仓库的url</p></li><li><p>branch：分支，这里写上master</p></li><li><p>token：填入码云的私人令牌</p></li><li><p>path：路径，一般写上img</p></li><li><p>customPath：提交消息，这一项和下一项customURL都不用填。在提交到码云后，会显示提交消息，插件默认提交的是 Upload 图片名 by picGo - 时间</p></li></ul><h3 id="这个token怎么获取，下面登录进自己的码云"><a href="#这个token怎么获取，下面登录进自己的码云" class="headerlink" title="这个token怎么获取，下面登录进自己的码云"></a>这个token怎么获取，下面登录进自己的码云</h3><p>1.点击头像，进入设置<br><img src="https://gitee.com/badenough/blogImage/raw/master/img/20200407191823.png" alt="gitee"></p><p>2.找到右边安全设置里面的私人令牌<br><img src="https://gitee.com/badenough/blogImage/raw/master/img/20200407192331.png" alt="私人令牌"></p><p>3.点击生成新令牌，把projects这一项勾上，其他的不用勾，然后提交<br><img src="https://gitee.com/badenough/blogImage/raw/master/img/20200407192744.png" alt="projects"></p><p>这里需要验证一下密码，验证密码之后会出来一串数字，这一串数字就是你的token，将这串数字复制到刚才的配置里面去。</p><blockquote><p>注意：这个令牌只会明文显示一次，建议在配置插件的时候再来生成令牌，直接复制进去，搞丢了又要重新生成一个。</p></blockquote><h2 id="现在保存你刚才的配置，然后将它设置为默认图床，大功告成。"><a href="#现在保存你刚才的配置，然后将它设置为默认图床，大功告成。" class="headerlink" title="现在保存你刚才的配置，然后将它设置为默认图床，大功告成。"></a>现在保存你刚才的配置，然后将它设置为默认图床，大功告成。</h2><p>还有一个插件gitee gitee-uploader 1.1.2，功能差不多，刚才那个能用的话就不需要用这个，配置的内容有点差别，简单说一下：</p><p><img src="https://gitee.com/badenough/blogImage/raw/master/img/20200407194001.png" alt="插件gitee"></p><ul><li>url：图床网站，这里写码云的主页 <a href="https://gitee.com" target="_blank" rel="noopener">https://gitee.com</a></li><li>owner：所有者，写上你的码云账号名，如果你不知道你的账号名，进入你刚才的仓库，浏览器url里面有</li><li>repo：仓库名称，只要写上仓库名称就行，比如我自己的仓库blogImage</li><li>path：写上路径，一般是img，这几个项都不用加“ / “符号</li><li>token：刚才你获取的个人令牌，两个插件是通用的，如果你用了另一个再来用这个，它会自动读取另一个插件的部分配置，不用重新申请</li><li>message：不用填</li></ul><h2 id="4-测试"><a href="#4-测试" class="headerlink" title="4.测试"></a>4.测试</h2><p>完成了，别去折腾那个bete版的了，很不稳定，还老是有一段，每一段的，有时候可以传图片，有时候又不能传图片，这个样子的。</p><p>所以直接安装稳定版就好了。</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 码云 </tag>
            
            <tag> 图床 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在CentOS7中安装.net core2.2环境</title>
      <link href="/p/46c4.html"/>
      <url>/p/46c4.html</url>
      
        <content type="html"><![CDATA[<h2 id="【基本说明】"><a href="#【基本说明】" class="headerlink" title="【基本说明】"></a>【基本说明】</h2><p>1.服务器系统：CentOS 7 </p><p>2.服务器连接工具：Xshell、xftp</p><p>3.环境：.net core 2.2</p><p>项目发布就不不多做介绍…</p><h2 id="【安装-net-core环境】"><a href="#【安装-net-core环境】" class="headerlink" title="【安装.net core环境】"></a>【安装.net core环境】</h2><h3 id="安装-net-core-sdk或者-net-core-runtime都可以，二选其一"><a href="#安装-net-core-sdk或者-net-core-runtime都可以，二选其一" class="headerlink" title="安装.net core sdk或者.net  core runtime都可以，二选其一"></a>安装.net core sdk或者.net  core runtime都可以，二选其一</h3><p>下载地址：<a href="https://dotnet.microsoft.com/download" target="_blank" rel="noopener">https://dotnet.microsoft.com/download</a><br><img src="https://gitee.com/badenough/blogImage/raw/master/img/10.png" alt="net"></p><p>选择自己需要安装的SDK或者Runtime<br><img src="https://gitee.com/badenough/blogImage/raw/master/img/108.png" alt="sdk"></p><h3 id="根据服务器系统选择对应的版本"><a href="#根据服务器系统选择对应的版本" class="headerlink" title="根据服务器系统选择对应的版本"></a>根据服务器系统选择对应的版本</h3><blockquote><p>安装.net core 2.2 SDK命令：</p></blockquote><pre><code>sudo rpm -Uvh https://packages.microsoft.com/config/rhel/7/packages-microsoft-prod.rpmsudo yum install dotnet-sdk-2.2</code></pre><blockquote><p>安装.net core 2.2 Runtime命令：</p></blockquote><pre><code>sudo rpm -Uvh https://packages.microsoft.com/config/rhel/7/packages-microsoft-prod.rpmsudo yum install aspnetcore-runtime-2.2</code></pre><blockquote><p>安装完成后执行：</p></blockquote><pre><code>dotnet --info</code></pre><blockquote><p>如图所示:</p></blockquote><p><img src="https://gitee.com/badenough/blogImage/raw/master/img/103.png" alt="tupian "></p><blockquote><p>我这里安装的.net core Runtime，如果安装了SDK也可以执行</p></blockquote><pre><code>dotnet --version</code></pre><p>使用以上命令如果有信息表明安装成功。<br>最后祝你好运吧！</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CenOS7 </tag>
            
            <tag> net core2.2 </tag>
            
            <tag> 程序员 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于HEXO静态博客生成系统的站点建设</title>
      <link href="/p/4ede.html"/>
      <url>/p/4ede.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://gitee.com/badenough/blogImage/raw/master/img/hexogit665.png" alt="picture"></p><h1 id="HEXO静态博客生成系统"><a href="#HEXO静态博客生成系统" class="headerlink" title="HEXO静态博客生成系统"></a>HEXO静态博客生成系统</h1><p>在经历了2009年至今的若干次网站迁徙和改版之后，三年前就对自己持有的域名作出了重新规划，原则就是只记录精品信息，一些生活中的琐碎由第三方SNS来消化（有响应群体更容易产生互动）。但是再琐碎也是生活的一部分，第三方平台在一次又一次的变化中，曾经的记录也随之流失。几经思考后，既不想丢失数据，又不想产生开销，所以寻求了一套免费建站方案，具体实施如下：</p><h2 id="1-域名"><a href="#1-域名" class="headerlink" title="1. 域名"></a>1. 域名</h2><p>顶级域名基本就不要想了，如果不介意经常重新注册，可以考虑TK那一类的。最后我选择的是eu.org二级域名，这个后缀的域目前已经被Q，所以需要使用https访问模式，果断上cloudflare。</p><h2 id="2-空间"><a href="#2-空间" class="headerlink" title="2. 空间"></a>2. 空间</h2><p>免费的虚拟主机一搜一大片儿，根据以往经验，速度和性能简直惨不忍睹，而且动不动就被Q被封。所以要找就要找大企业下的免费方案，比如众多的PaaS，其中Github作为程序猿的地盘还是挺厚道的，就暂时用它好了。</p><h2 id="3-构架程序"><a href="#3-构架程序" class="headerlink" title="3. 构架程序"></a>3. 构架程序</h2><p>空间已经是静态的了，那么程序就不可能是WP或者其他的PHP/ASP，找用户数量多的例如HEXO算是稳妥的选择。为了拉近和动态网站的差距，除去使用NEXT主题并采用第三方评论系统“多说”，又做了如下设置：</p><h3 id="a-修正feed中的相对路径"><a href="#a-修正feed中的相对路径" class="headerlink" title="a) 修正feed中的相对路径"></a>a) 修正feed中的相对路径</h3><p>因为主要内容还是以图片居多，所以挂了一个专门放置图片的文件下在根目录下，在编辑日志时可以用相对路径插入图片（使用相对路径的好处是今后若是更换域名，站点文件不需做变动）。那么问题随之而来，在使用hexo-generator-feed产生feed后，其中的图片仍旧以相对路径出现，给之后使用IFTTT同步至blogger和facebook带来了不便，所以使用replace插件来修复feed。</p><h3 id="先安装replace"><a href="#先安装replace" class="headerlink" title="先安装replace"></a>先安装replace</h3><pre><code>npm install replace新建一个rss.js文件var replace = require(“replace”);replace({regex: “/p/”, //存放图片的相对路径replacement: “http://domain/p/”, //存放图片的绝对路径paths: [‘./public/atom.xml’], //feed文件所在路径recursive: true,silent: true,});</code></pre><h3 id="最后每次生成完网站后，"><a href="#最后每次生成完网站后，" class="headerlink" title="最后每次生成完网站后，"></a>最后每次生成完网站后，</h3><p>执行node rss.js即可。</p><p>为了调试和上传方便，分别写了两个脚本，完美滴实现了程序桌面化</p><pre><code>//debug.shhexo cleanhexo gnode rss.jshexo s//run.shhexo cleanhexo gnode rss.jshexo d</code></pre><h2 id="b-实现相册功能"><a href="#b-实现相册功能" class="headerlink" title="b) 实现相册功能"></a>b) 实现相册功能</h2><p>因为有好多图片是存在在lofter的，所以先把图片下载下来。<br>新建一个lofterphoto.js</p><pre><code>//依赖模块var fs = require(‘fs’);var request = require(“request”);var cheerio = require(“cheerio”);var mkdirp = require(‘mkdirp’);var http = require(‘http’);var urlparse = require(‘url’).parse;//目标网址var url = ‘http://xxxxxx.lofter.com/?page=’;//本地存储目录var dir = ‘./images’;//创建目录mkdirp(dir, function (err) {if (err) {console.log(err);}});function sleep(milliSeconds) {var startTime = new Date().getTime();while (new Date().getTime() &lt; startTime + milliSeconds); }; //发送请求 var getFile = function (url, i, max) { if (i &gt; max)return;request(url + i, function (error, response, body) {if (!error &amp;&amp; response.statusCode == 200) {var $ = cheerio.load(body);$(‘.img img’).each(function () {var src = $(this).attr(‘src’);getDetailFile($(this).parent().attr(‘href’));console.log(‘正在下载’ + src);var name = src.match(‘[^=/]\\w*\\.jpg\\w*’)[0];saveImg(src,dir, name);// sleep(2000);});i++;getFile(url,i,max);}});};var getDetailFile = function (url){request(url, function (error, response, body) {if (!error &amp;&amp; response.statusCode == 200) {var $ = cheerio.load(body);$(‘.img img’).each(function () {var src = $(this).attr(‘src’);console.log(‘正在下载detail’ + src);saveImg(src,dir, Math.floor(Math.random() * 100000) + src.substr(-4, 4));});}});}function saveImg(url, dir,name){sleep(500);http.get(url, function(res){res.setEncoding(‘binary’);var data=”;res.on(‘data’, function(chunk){data+=chunk;});res.on(‘end’, function(){fs.writeFile(dir + “/”+name, data, ‘binary’, function (err) {if (err) throw err;console.log(‘file saved ‘+name);});});}).on(‘error’, function(e) {console.log(‘error’+e)});}var i = 1;getFile(url, i, 100);</code></pre><p>然后我为了省事儿，直接用了一个相册生成器VisualLightBox产生一个网页，将网页中的主体代码复制到HEXO下新建page的index.md文件里，重命名并删除原先产生的index.html文件，而后在CSS里找到定义DIV的那段代码，修改width为auto。这样页面就成了自适应的，无论在PC上还是手机上都能顺畅浏览。</p><ul><li>至于如何搭建HEXO,如何部署到Github或者双部署,这里就不再赘述。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo博客 </tag>
            
            <tag> matery主题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTTPS系列干货</title>
      <link href="/p/d712.html"/>
      <url>/p/d712.html</url>
      
        <content type="html"><![CDATA[<h2 id="HTTPS（全称：HyperText-Transfer-Protocol-over-Secure-Socket-Layer）"><a href="#HTTPS（全称：HyperText-Transfer-Protocol-over-Secure-Socket-Layer）" class="headerlink" title="HTTPS（全称：HyperText Transfer Protocol over Secure Socket Layer）"></a>HTTPS（全称：HyperText Transfer Protocol over Secure Socket Layer）</h2><blockquote><p>其实 HTTPS 并不是一个新鲜协议，Google 很早就开始启用了，初衷是为了保证数据安全。 近两年，Google、Baidu、Facebook 等这样的互联网巨头，不谋而合地开始大力推行 HTTPS， 国内外的大型互联网公司很多也都已经启用了全站 HTTPS，这也是未来互联网发展的趋势。</p></blockquote><p>为鼓励全球网站的 HTTPS 实现，一些互联网公司都提出了自己的要求：</p><p>1）Google 已调整搜索引擎算法，让采用 HTTPS 的网站在搜索中排名更靠前；</p><p>2）从 2017 年开始，Chrome 浏览器已把采用 HTTP 协议的网站标记为不安全网站；</p><p>3）苹果要求 2017 年 App Store 中的所有应用都必须使用 HTTPS 加密连接；</p><p>4）当前国内炒的很火热的微信小程序也要求必须使用 HTTPS 协议；</p><p>5）新一代的 HTTP/2 协议的支持需以 HTTPS 为基础。</p><p>等等，因此想必在不久的将来，全网 HTTPS 势在必行。</p><h2 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h2><h3 id="协议"><a href="#协议" class="headerlink" title="协议"></a>协议</h3><h4 id="1、HTTP-协议（HyperText-Transfer-Protocol，超文本传输协议）"><a href="#1、HTTP-协议（HyperText-Transfer-Protocol，超文本传输协议）" class="headerlink" title="1、HTTP 协议（HyperText Transfer Protocol，超文本传输协议）"></a>1、HTTP 协议（HyperText Transfer Protocol，超文本传输协议）</h4><p>客户端浏览器或其他程序与Web服务器之间的应用层通信协议 。</p><h4 id="2、HTTPS-协议（HyperText-Transfer-Protocol-over-Secure-Socket-Layer）"><a href="#2、HTTPS-协议（HyperText-Transfer-Protocol-over-Secure-Socket-Layer）" class="headerlink" title="2、HTTPS 协议（HyperText Transfer Protocol over Secure Socket Layer）"></a>2、HTTPS 协议（HyperText Transfer Protocol over Secure Socket Layer）</h4><p>可以理解为HTTP+SSL/TLS， 即 HTTP 下加入 SSL 层，HTTPS 的安全基础是 SSL，因此加密的详细内容就需要 SSL，用于安全的 HTTP 数据传输。<br><img src="https://gitee.com/badenough/blogImage/raw/master/img/v2-54ff04e1b0cc698f08f76d6356f59fac_720w.png" alt="HTTP"></p><p>如上图所示 HTTPS 相比 HTTP 多了一层 SSL/TLS</p><p>SSL（Secure Socket Layer，安全套接字层）：1994年为 Netscape 所研发，SSL 协议位于 TCP/IP 协议与各种应用层协议之间，为数据通讯提供安全支持。</p><p>TLS（Transport Layer Security，传输层安全）：其前身是 SSL，它最初的几个版本（SSL 1.0、SSL 2.0、SSL 3.0）由网景公司开发，1999年从 3.1 开始被 IETF 标准化并改名，发展至今已经有 TLS 1.0、TLS 1.1、TLS 1.2 三个版本。SSL3.0和TLS1.0由于存在安全漏洞，已经很少被使用到。TLS 1.3 改动会比较大，目前还在草案阶段，目前使用最广泛的是TLS 1.1、TLS 1.2。</p><h3 id="加密算法："><a href="#加密算法：" class="headerlink" title="加密算法："></a>加密算法：</h3><p>据记载，公元前400年，古希腊人就发明了置换密码；在第二次世界大战期间，德国军方启用了“恩尼格玛”密码机，所以密码学在社会发展中有着广泛的用途。</p><h4 id="1、对称加密"><a href="#1、对称加密" class="headerlink" title="1、对称加密"></a>1、对称加密</h4><p>有流式、分组两种，加密和解密都是使用的同一个密钥。<br>例如：DES、AES-GCM、ChaCha20-Poly1305等</p><h4 id="2、非对称加密"><a href="#2、非对称加密" class="headerlink" title="2、非对称加密"></a>2、非对称加密</h4><p>加密使用的密钥和解密使用的密钥是不相同的，分别称为：公钥、私钥，公钥和算法都是公开的，私钥是保密的。非对称加密算法性能较低，但是安全性超强，由于其加密特性，非对称加密算法能加密的数据长度也是有限的。<br>例如：RSA、DSA、ECDSA、 DH、ECDHE</p><h4 id="3、哈希算法"><a href="#3、哈希算法" class="headerlink" title="3、哈希算法"></a>3、哈希算法</h4><p>将任意长度的信息转换为较短的固定长度的值，通常其长度要比信息小得多，且算法不可逆。<br>例如：MD5、SHA-1、SHA-2、SHA-256 等</p><h4 id="4、数字签名"><a href="#4、数字签名" class="headerlink" title="4、数字签名"></a>4、数字签名</h4><p>签名就是在信息的后面再加上一段内容（信息经过hash后的值），可以证明信息没有被修改过。hash值一般都会加密后（也就是签名）再和信息一起发送，以保证这个hash值不被修改。</p><h2 id="详解"><a href="#详解" class="headerlink" title="详解"></a>详解</h2><h3 id="一、HTTP-访问过程"><a href="#一、HTTP-访问过程" class="headerlink" title="一、HTTP 访问过程"></a>一、HTTP 访问过程</h3><p><img src="https://gitee.com/badenough/blogImage/raw/master/img/v2.png" alt="http"><br>抓包如下：<br><img src="https://gitee.com/badenough/blogImage/raw/master/img/v2-e36dc20.png" alt="http1"><br>如上图所示，HTTP请求过程中，客户端与服务器之间没有任何身份确认的过程，数据全部明文传输，“裸奔”在互联网上，所以很容易遭到黑客的攻击，如下：<br><img src="https://gitee.com/badenough/blogImage/raw/master/img/v2-836w.png" alt="http2"><br>可以看到，客户端发出的请求很容易被黑客截获，如果此时黑客冒充服务器，则其可返回任意信息给客户端，而不被客户端察觉，所以我们经常会听到一词“劫持”，现象如下：</p><p>下面两图中，浏览器中填入的是相同的URL，左边是正确响应，而右边则是被劫持后的响应<br><img src="https://gitee.com/badenough/blogImage/raw/master/img/v2-836w.png" alt="http2"><br>所以 HTTP 传输面临的风险有：<br>（1） 窃听风险：黑客可以获知通信内容。<br>（2） 篡改风险：黑客可以修改通信内容。<br>（3） 冒充风险：黑客可以冒充他人身份参与通信。</p><h3 id="二、HTTP-向-HTTPS-演化的过程"><a href="#二、HTTP-向-HTTPS-演化的过程" class="headerlink" title="二、HTTP 向 HTTPS 演化的过程"></a>二、HTTP 向 HTTPS 演化的过程</h3><h4 id="第一步：为了防止上述现象的发生，人们想到一个办法：对传输的信息加密（即使黑客截获，也无法破解）"><a href="#第一步：为了防止上述现象的发生，人们想到一个办法：对传输的信息加密（即使黑客截获，也无法破解）" class="headerlink" title="第一步：为了防止上述现象的发生，人们想到一个办法：对传输的信息加密（即使黑客截获，也无法破解）"></a>第一步：为了防止上述现象的发生，人们想到一个办法：对传输的信息加密（即使黑客截获，也无法破解）</h4><p><img src="https://gitee.com/badenough/blogImage/raw/master/img/v2-e36dc20.png" alt="http2"><br>如上图所示，此种方式属于对称加密，双方拥有相同的密钥，信息得到安全传输，但此种方式的缺点是：<br>（1）不同的客户端、服务器数量庞大，所以双方都需要维护大量的密钥，维护成本很高<br>（2）因每个客户端、服务器的安全级别不同，密钥极易泄露</p><h4 id="第二步：既然使用对称加密时，密钥维护这么繁琐，那我们就用非对称加密试试"><a href="#第二步：既然使用对称加密时，密钥维护这么繁琐，那我们就用非对称加密试试" class="headerlink" title="第二步：既然使用对称加密时，密钥维护这么繁琐，那我们就用非对称加密试试"></a>第二步：既然使用对称加密时，密钥维护这么繁琐，那我们就用非对称加密试试</h4><p><img src="https://gitee.com/badenough/blogImage/raw/master/img/69ec47c0220w.png" alt="http2"><br>如上图所示，客户端用公钥对请求内容加密，服务器使用私钥对内容解密，反之亦然，但上述过程也存在缺点：<br>（1）公钥是公开的（也就是黑客也会有公钥），所以第 ④ 步私钥加密的信息，如果被黑客截获，其可以使用公钥进行解密，获取其中的内容</p><h4 id="第三步：非对称加密既然也有缺陷，那我们就将对称加密，非对称加密两者结合起来，取其精华、去其糟粕，发挥两者的各自的优势"><a href="#第三步：非对称加密既然也有缺陷，那我们就将对称加密，非对称加密两者结合起来，取其精华、去其糟粕，发挥两者的各自的优势" class="headerlink" title="第三步：非对称加密既然也有缺陷，那我们就将对称加密，非对称加密两者结合起来，取其精华、去其糟粕，发挥两者的各自的优势"></a>第三步：非对称加密既然也有缺陷，那我们就将对称加密，非对称加密两者结合起来，取其精华、去其糟粕，发挥两者的各自的优势</h4><p><img src="https://gitee.com/badenough/blogImage/raw/master/img/69ec47c0220w.png" alt="http2"></p><ul><li><p>如上图所示<br>（1）第③步时，客户端说：（咱们后续回话采用对称加密吧，这是对称加密的算法和对称密钥）这段话用公钥进行加密，然后传给服务器<br>（2）服务器收到信息后，用私钥解密，提取出对称加密算法和对称密钥后，服务器说：（好的）对称密钥加密<br>（3）后续两者之间信息的传输就可以使用对称加密的方式了</p></li><li><p>遇到的问题：<br>（1）客户端如何获得公钥<br>（2）如何确认服务器是真实的而不是黑客</p><h4 id="第四步：获取公钥与确认服务器身份"><a href="#第四步：获取公钥与确认服务器身份" class="headerlink" title="第四步：获取公钥与确认服务器身份"></a>第四步：获取公钥与确认服务器身份</h4><p><img src="https://gitee.com/badenough/blogImage/raw/master/img/2ac6567fa1aab38.png" alt="http2"></p><h5 id="1、获取公钥"><a href="#1、获取公钥" class="headerlink" title="1、获取公钥"></a>1、获取公钥</h5><p>（1）提供一个下载公钥的地址，回话前让客户端去下载。（缺点：下载地址有可能是假的；客户端每次在回话前都先去下载公钥也很麻烦）<br>（2）回话开始时，服务器把公钥发给客户端（缺点：黑客冒充服务器，发送给客户端假的公钥）</p><h5 id="2、那有木有一种方式既可以安全的获取公钥，又能防止黑客冒充呢？-那就需要用到终极武器了：SSL-证书（申购）"><a href="#2、那有木有一种方式既可以安全的获取公钥，又能防止黑客冒充呢？-那就需要用到终极武器了：SSL-证书（申购）" class="headerlink" title="2、那有木有一种方式既可以安全的获取公钥，又能防止黑客冒充呢？ 那就需要用到终极武器了：SSL 证书（申购）"></a>2、那有木有一种方式既可以安全的获取公钥，又能防止黑客冒充呢？ 那就需要用到终极武器了：SSL 证书（申购）</h5><p><img src="https://gitee.com/badenough/blogImage/raw/master/img/v2-5eef81cw.png" alt="http2"><br>如上图所示，在第 ② 步时服务器发送了一个SSL证书给客户端，SSL 证书中包含的具体内容有：</p></li><li><p>（1）证书的发布机构CA</p></li><li><p>（2）证书的有效期</p></li><li><p>（3）公钥</p></li><li><p>（4）证书所有者</p></li><li><p>（5）签名<br>………</p><h5 id="3、客户端在接受到服务端发来的SSL证书时，会对证书的真伪进行校验，以浏览器为例说明如下："><a href="#3、客户端在接受到服务端发来的SSL证书时，会对证书的真伪进行校验，以浏览器为例说明如下：" class="headerlink" title="3、客户端在接受到服务端发来的SSL证书时，会对证书的真伪进行校验，以浏览器为例说明如下："></a>3、客户端在接受到服务端发来的SSL证书时，会对证书的真伪进行校验，以浏览器为例说明如下：</h5><p>（1）首先浏览器读取证书中的证书所有者、有效期等信息进行一一校验<br>（2）浏览器开始查找操作系统中已内置的受信任的证书发布机构CA，与服务器发来的证书中的颁发者CA比对，用于校验证书是否为合法机构颁发<br>（3）如果找不到，浏览器就会报错，说明服务器发来的证书是不可信任的。<br>（4）如果找到，那么浏览器就会从操作系统中取出 颁发者CA 的公钥，然后对服务器发来的证书里面的签名进行解密<br>（5）浏览器使用相同的hash算法计算出服务器发来的证书的hash值，将这个计算的hash值与证书中签名做对比<br>（6）对比结果一致，则证明服务器发来的证书合法，没有被冒充<br>（7）此时浏览器就可以读取证书中的公钥，用于后续加密了</p><h5 id="4、所以通过发送SSL证书的形式，既解决了公钥获取问题，又解决了黑客冒充问题，一箭双雕，HTTPS加密过程也就此形成"><a href="#4、所以通过发送SSL证书的形式，既解决了公钥获取问题，又解决了黑客冒充问题，一箭双雕，HTTPS加密过程也就此形成" class="headerlink" title="4、所以通过发送SSL证书的形式，既解决了公钥获取问题，又解决了黑客冒充问题，一箭双雕，HTTPS加密过程也就此形成"></a>4、所以通过发送SSL证书的形式，既解决了公钥获取问题，又解决了黑客冒充问题，一箭双雕，HTTPS加密过程也就此形成</h5><p>所以相比HTTP，HTTPS 传输更加安全<br>（1） 所有信息都是加密传播，黑客无法窃听。<br>（2） 具有校验机制，一旦被篡改，通信双方会立刻发现。<br>（3） 配备身份证书，防止身份被冒充。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>综上所述，相比 HTTP 协议，HTTPS 协议增加了很多握手、加密解密等流程，虽然过程很复杂，但其可以保证数据传输的安全。所以在这个互联网膨胀的时代，其中隐藏着各种看不见的危机，为了保证数据的安全，维护网络稳定，建议大家多多推广HTTPS。</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 程序员 </tag>
            
            <tag> https </tag>
            
            <tag> ssl </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>文章 Front-matter 介绍</title>
      <link href="/p/fdce.html"/>
      <url>/p/fdce.html</url>
      
        <content type="html"><![CDATA[<h2 id="文章-Front-matter-介绍"><a href="#文章-Front-matter-介绍" class="headerlink" title="文章 Front-matter 介绍"></a>文章 Front-matter 介绍</h2><h3 id="Front-matter-选项详解"><a href="#Front-matter-选项详解" class="headerlink" title="Front-matter 选项详解"></a>Front-matter 选项详解</h3><blockquote><p>Front-matter 选项中的所有内容均为非必填的。但我仍然建议至少填写 title 和 date 的值。</p></blockquote><table><thead><tr><th>配置选项</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>title</td><td>Markdown 的文件标题</td><td>文章标题，强烈建议填写此选项</td></tr><tr><td>date</td><td>文件创建时的日期时间</td><td>发布时间，强烈建议填写此选项，且最好保证全局唯一</td></tr><tr><td>author</td><td>根 _config.yml 中的 author</td><td>文章作者</td></tr><tr><td>img</td><td>featureImages 中的某个值</td><td>文章特征图，推荐使用图床(腾讯云、七牛云、又拍云等)来做图片的路径。如: <a href="http://xxx.com/xxx.jpg" target="_blank" rel="noopener">http://xxx.com/xxx.jpg</a></td></tr><tr><td>top</td><td>true</td><td>推荐文章（文章是否置顶），如果 top 值为 true，则会作为首页推荐文章</td></tr><tr><td>cover</td><td>false</td><td>v1.0.2版本新增，表示该文章是否需要加入到首页轮播封面中</td></tr><tr><td>coverImg</td><td>无</td><td>v1.0.2版本新增，表示该文章在首页轮播封面需要显示的图片路径，如果没有，则默认使用文章的特色图片</td></tr><tr><td>password</td><td>无</td><td>文章阅读密码，如果要对文章设置阅读验证密码的话，就可以设置 password 的值，该值必须是用 SHA256 加密后的密码，防止被他人识破。前提是在主题的 config.yml 中激活了 verifyPassword选项</td></tr><tr><td>toc</td><td>true</td><td>是否开启 TOC，可以针对某篇文章单独关闭 TOC 的功能。前提是在主题的 config.yml 中激活了 toc 选项</td></tr><tr><td>mathjax</td><td>false</td><td>是否开启数学公式支持 ，本文章是否开启 mathjax，且需要在主题的 _config.yml 文件中也需要开启才行</td></tr><tr><td>summary</td><td>无</td><td>文章摘要，自定义的文章摘要内容，如果这个属性有值，文章卡片摘要就显示这段文字，否则程序会自动截取文章的部分内容作为摘要</td></tr><tr><td>categories</td><td>无</td><td>文章分类，本主题的分类表示宏观上大的分类，只建议一篇文章一个分类</td></tr><tr><td>tags</td><td>无</td><td>文章标签，一篇文章可以多个标签</td></tr><tr><td>reprintPolicy</td><td>cc_by</td><td>文章转载规则， 可以是 cc_by, cc_by_nd, cc_by_sa, cc_by_nc, cc_by_nc_nd, cc_by_nc_sa, cc0, noreprint 或 pay 中的一个</td></tr></tbody></table><h2 id="注意"><a href="#注意" class="headerlink" title="注意:"></a>注意:</h2><blockquote><p>如果 img 属性不填写的话，文章特色图会根据文章标题的 hashcode 的值取余，然后选取主题中对应的特色图片，从而达到让所有文章都的特色图各有特色。<br>date 的值尽量保证每篇文章是唯一的，因为本主题中 Gitalk 和 Gitment 识别 id 是通过 date 的值来作为唯一标识的。<br>如果要对文章设置阅读验证密码的功能，不仅要在 Front-matter 中设置采用了 SHA256 加密的 password 的值，还需要在主题的 _config.yml 中激活了配置。有些在线的 SHA256 加密的地址，可供你使用：开源中国在线工具、chahuo、站长工具。<br>您可以在文章md文件的 front-matter 中指定 reprintPolicy 来给单个文章配置转载规则。</p></blockquote><p>以下为文章的 Front-matter 示例。</p><h2 id="最简示例"><a href="#最简示例" class="headerlink" title="最简示例"></a>最简示例</h2><pre><code>---title: typora-vue-theme主题介绍date: 2020-04-04 09:25:00---</code></pre><pre><code>---title: typora-vue-theme主题介绍date: 2020-04-04 09:25:00author: 拜德英纳夫img: /source/images/xxx.jpgtop: truecover: truecoverImg: /images/1.jpgpassword: 8d969eef6ecad3c29a3a629280e686cf0c3f5d5a86aff3ca12020c923adc6c92toc: falsemathjax: falsesummary: 这是你自定义的文章摘要内容，如果这个属性有值，文章卡片摘要就显示这段文字，否则程序会自动截取文章的部分内容作为摘要categories: Markdowntags:  - Typora  - Markdown---</code></pre>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo博客 </tag>
            
            <tag> matery主题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo博客的建设</title>
      <link href="/p/4fda.html"/>
      <url>/p/4fda.html</url>
      
        <content type="html"><![CDATA[<h2 id="使用Hexo来搭建咱们的个人博客"><a href="#使用Hexo来搭建咱们的个人博客" class="headerlink" title="使用Hexo来搭建咱们的个人博客"></a>使用Hexo来搭建咱们的个人博客</h2><blockquote><p>那咱们开始吧！先去官网看看吧！</p></blockquote><h3 id="工具"><a href="#工具" class="headerlink" title="工具:"></a>工具:</h3><ul><li>安装git，</li><li>注册github账号</li><li>还有Node.js</li></ul><h3 id="OK，下面的命令"><a href="#OK，下面的命令" class="headerlink" title="OK，下面的命令"></a>OK，下面的命令</h3><pre><code>npm install hexo-cli -ghexo g #完整命令为hexo generate，用于生成静态文件 hexo s #完整命令为hexo server，用于启动服务器，主要用来本地预览 hexo d #完整命令为hexo deploy，用于将本地文件发布到github上 hexo n #完整命令为hexo new，用于新建一篇文章</code></pre><h4 id="在安装hexo前先运行以下步骤："><a href="#在安装hexo前先运行以下步骤：" class="headerlink" title="在安装hexo前先运行以下步骤："></a>在安装hexo前先运行以下步骤：</h4><p>在桌面右击鼠标选择Git Bash Here打开终端<br>输入第一行命令</p><pre><code>npm install hexo-cli -g  #全局安装Hexo，</code></pre><p>如果在使用的过程中，遇到错误，就运行以下命令</p><pre><code>npm install hexo-deployer-git –save  #发送的插件</code></pre><p>之后接着输入命令hexo g，在运行hexo d，</p><h4 id="现在正是开始"><a href="#现在正是开始" class="headerlink" title="现在正是开始"></a>现在正是开始</h4><p>新建一个文件夹，取名随意，进入到文件夹内，<br>右击鼠标选择Git Bash Here打开终端输入hexo init，<br>在输入安装依赖包npm install之后会有一大堆数据别管他就好，<br>在hexo g打包静态html，<br>最后hexo s本地运行，<br>现在可以发现终端显示了<a href="http://localhost:4000，在任意浏览器下输入localhost:4000就可以看到博客了">http://localhost:4000，在任意浏览器下输入localhost:4000就可以看到博客了</a> ，记住终端别关掉哦。</p><h4 id="之后我们要上传到github上运行起来，"><a href="#之后我们要上传到github上运行起来，" class="headerlink" title="之后我们要上传到github上运行起来，"></a>之后我们要上传到github上运行起来，</h4><p>首先我们登入到github建一个管理仓库。</p><p>需要注意：仓库名必须是你的github名.github.io,<br>例如我在github上的名字是sikongplay，那么这个仓库名就是sikongplay.github.io，<br>建好之后要将本地文件部署到github，<br>进入你刚建的Hexo博客文件夹，<br>找到并打开_config.yml文件，<br>在底部输入下面的代码：</p><pre><code> deploy:  type: git repository: http://github.com/sikongplay/sikongplay.github.io.git branch: master</code></pre><h4 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h4><ul><li>hexo的配置中冒号（:）后都有一个空格，不能省略掉，</li><li>配置好后，hexo g然后hexo d，</li><li>如果这里我们出现ERRER问题,运行:<pre><code>npm install hexo-deployer-git –save</code></pre></li><li>如果没什么问题，我们访问<a href="https://sikongplay.github.io,就已经能够看到我们的博客了" target="_blank" rel="noopener">https://sikongplay.github.io,就已经能够看到我们的博客了</a>.</li></ul><h4 id="下面你要配置文件："><a href="#下面你要配置文件：" class="headerlink" title="下面你要配置文件："></a>下面你要配置文件：</h4><h5 id="hexo有两个常用的配置文件："><a href="#hexo有两个常用的配置文件：" class="headerlink" title="hexo有两个常用的配置文件："></a>hexo有两个常用的配置文件：</h5><ul><li>一个：hexo文件夹，点击进去会看见_config.yml这个文件，这个文件是属于这个hexo的博客首页配置，</li><li>一个：在themes文件夹里，这个themes文件夹是专门放主题的，每个主题一个文件夹，每个文件夹里都有个和hexo博客首页一样的_config.yml文件，这个文件是专门配置主题的页面，就是博客首页之类的，</li><li>这里就可以换主题之类的要改的文件是hexo框架的_config.yml文件，而要美化主题/博客首页之类的如：分享、评论、登录之类的微链接改的就是themes主题里的_config.yml文件了.</li></ul><h4 id="如何新建文章呢？"><a href="#如何新建文章呢？" class="headerlink" title="如何新建文章呢？"></a>如何新建文章呢？</h4><ul><li>在Git Bash Here打开终端输入hexo new “这里是文章的名字” 回车；</li><li>找到hexo\source_posts下找到后缀为.md的文件，</li><li>这个后缀的文件是属于markdown的文件格式，这里你可以用任何的编辑器打开编辑，也可以在线上使用markdown编辑器编辑，也可以下载markdown编辑器编辑，这里可以到我的资源博客下载，写完文章后，照之前的步骤上传：<pre><code>hexo g &gt;&gt;创建静态文档hexo s &gt;&gt;本地预览hexo d &gt;&gt;上传github</code></pre>好了，到这里就算是完美成功了，要是还是很懵那就是你的心态不平静，因为这算是最详细的教程了，那就建议在仔细的阅读，<br>这里在附上markdown语法文章，我以前写过最基础的也是最常用的，那些会使用就基本够使用了，<strong><a href="/2020/02/29/markdown1/">点击这里</a></strong>去看markdown的用法，接着！</li></ul><h4 id="这里再给个福利：可以对照看配置信息-gt"><a href="#这里再给个福利：可以对照看配置信息-gt" class="headerlink" title="这里再给个福利：可以对照看配置信息 =&gt;"></a>这里再给个福利：可以对照看配置信息 =&gt;</h4><h5 id="首先是博客配置"><a href="#首先是博客配置" class="headerlink" title="首先是博客配置:"></a>首先是博客配置:</h5><pre><code># Hexo Configuration## Docs: https://hexo.io/docs/configuration.html## Source: https://github.com/hexojs/hexo/# Sitetitle: Hexo &gt;&gt;博客名subtitle: &gt;&gt;副标题description: &gt;&gt;描述author: John Doe &gt;&gt;作者language: zh-CN &gt;&gt;语言timezone: &gt;&gt;时区，此处不填写，hexo会以你目前电脑的时区为默认值# URL &gt;&gt;暂不配置，用于关联你自己的域名## If your site is put in a subdirectory, set url as ‘http://yoursite.com/child’ and root as ‘/child/’url: http://yoursite.comroot: /permalink: :year/:month/:day/:title/permalink_defaults:# Directory &gt;&gt;暂不配置source_dir: sourcepublic_dir: publictag_dir: tagsarchive_dir: archivescategory_dir: categoriescode_dir: downloads/codei18n_dir: :langskip_render:# Writing &gt;&gt;文章布局等，使用默认值new_post_name: :title.md # File name of new postsdefault_layout: posttitlecase: false # Transform title into titlecaseexternal_link: true # Open external links in new tabfilename_case: 0render_drafts: falsepost_asset_folder: falserelative_link: falsefuture: truehighlight:enable: trueline_number: trueauto_detect: falsetab_replace:# Category &amp; Tag &gt;&gt;暂不配置，使用默认值default_category: uncategorizedcategory_map:tag_map:# Date / Time format &gt;&gt;时间格式，使用默认值## Hexo uses Moment.js to parse and display date## You can customize the date format as defined in## http://momentjs.com/docs/#/displaying/format/date_format: YYYY-MM-DDtime_format: HH:mm:ss# Pagination## Set per_page to 0 to disable paginationper_page: 10 &gt;&gt;每页显示的文章数，0表示不分页pagination_dir: page# Extensions &gt;&gt;插件配置，暂不配置## Plugins: https://hexo.io/plugins/## Themes: https://hexo.io/themes/theme: landscape# Deployment &gt;&gt;用于部署到github，已配置过## Docs: https://hexo.io/docs/deployment.htmldeploy: type: gitrepository: http://github.com/rotate720deg/rotate720deg.github.io.gitbranch: master</code></pre><h5 id="然后是博客主题配置"><a href="#然后是博客主题配置" class="headerlink" title="然后是博客主题配置"></a>然后是博客主题配置</h5><pre><code># Header &gt;&gt;博客的菜单栏menu: Home: /Archives: /archivesrss: /atom.xml# Content &gt;&gt;文章下的Read more，可以改为’阅读全文’excerpt_link: Read Morefancybox: true# Sidebar &gt;&gt;侧边栏配置sidebar: rightwidgets:– category– tag– tagcloud– archive– recent_posts# display widgets at the bottom of index pages (pagination == 2)index_widgets:# – category# – tagcloud# – archive</code></pre><h5 id="其他的一些配置"><a href="#其他的一些配置" class="headerlink" title="其他的一些配置"></a>其他的一些配置</h5><pre><code># widget behaviorarchive_type: ‘monthly’show_count: false# Miscellaneousgoogle_analytics:favicon: /favicon.pngtwitter:google_plus:fb_admins:fb_app_id:</code></pre><p>这就是全部了，如果想要更熟悉这个操作你就要自己去找了。</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo博客 </tag>
            
            <tag> matery主题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一篇文章多个categories</title>
      <link href="/p/8c7a.html"/>
      <url>/p/8c7a.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>在很多情况下，我们希望在 Hexo 中写的一篇文章能够同时属于多个分类， 例如我写一篇 《Servlet笔记》，我既想将它放在 Java 这个分类中，又想将它放入 Servlet 这个分类。</p><p>按照官方的解释，categories 这个选项有两种配置方法（其实有三种）。那我们就来讲讲这三种配置方法。</p><h2 id="子分类"><a href="#子分类" class="headerlink" title="子分类"></a>子分类</h2><p>下面的分类会将该分章放到 Java/Servlet这个分类下。</p><pre><code>categories:  - Java  - Servlet</code></pre><p>同样的作用我们也可以这样写。</p><pre><code>    categories: [Java, Servlet]</code></pre><p>上面两种方法最终效果一样，都是将文章放在了一个子分类的目录下。</p><h2 id="多个分类"><a href="#多个分类" class="headerlink" title="多个分类"></a>多个分类</h2><p>如果我们的要求是将文章同时分到多个不同的分类中呢，我们应该这样：</p><pre><code>categories:-[Java]-[Servlet]</code></pre><p>这样，就可以将上面的文章分类到 Java 和 Servlet 这两个不同的目录中了。<br>扩展一下，如果我们将其分类到 Java/Servlet 和 Programming 两个不同的目录下，我们应该如下写：</p><pre><code>categories:-[Java, Servlet]-[Programming]</code></pre>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo博客 </tag>
            
            <tag> next主题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我在hexo博客自己写的第一篇文章</title>
      <link href="/p/b933.html"/>
      <url>/p/b933.html</url>
      
        <content type="html"><![CDATA[<h2 id="随便聊聊"><a href="#随便聊聊" class="headerlink" title="随便聊聊"></a>随便聊聊</h2><p>这个博客是我在业余时间学习搭建的，这个是基于Hexo博客系统搭建的，再加上github的代码管理工具，这样就是相当于免费的，多就是需要大量的时间去维护和使用；</p><h2 id="另一个网站"><a href="#另一个网站" class="headerlink" title="另一个网站"></a>另一个网站</h2><p>如果你还是喜欢看简单一点的，还是去我的另一个主要的博客看吧！<br>地址：<a href="http://118.178.84.132:8090/" target="_blank" rel="noopener">http://118.178.84.132:8090/</a><br>      <a href="https://www.ilovea.asia" target="_blank" rel="noopener">https://www.ilovea.asia</a></p>]]></content>
      
      
      <categories>
          
          <category> 随笔录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo博客 </tag>
            
            <tag> 随笔 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Shadowsocks服务器端说明</title>
      <link href="/p/e861.html"/>
      <url>/p/e861.html</url>
      
        <content type="html"><![CDATA[<h1 id="Shadowsocks-使用说明"><a href="#Shadowsocks-使用说明" class="headerlink" title="Shadowsocks 使用说明"></a>Shadowsocks 使用说明</h1><h2 id="服务端"><a href="#服务端" class="headerlink" title="服务端"></a>服务端</h2><hr><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>Debian / Ubuntu:</p><pre><code>apt-get install python-pippip install shadowsocks</code></pre><p>CentOS:</p><pre><code>yum install python-setuptools &amp;&amp; easy_install pippip install shadowsocks</code></pre><p>Windows:</p><p>参见 在 <a href="/2020/03/02/vpn3/">Windows 上安装服务端</a></p><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><pre><code>ssserver -p 443 -k password -m rc4-md5</code></pre><p>如果要后台运行：</p><pre><code>sudo ssserver -p 443 -k password -m rc4-md5 --user nobody -d start</code></pre><p>如果要停止：</p><pre><code>sudo ssserver -d stop</code></pre><p>如果要检查日志：</p><pre><code>sudo less /var/log/shadowsocks.log</code></pre><p>用<code>-h</code>查看所有参数。你也可以使用 <a href="/2020/03/08/vpn4/">配置文件</a> 进行配置。</p><h2 id="服务器搭建"><a href="#服务器搭建" class="headerlink" title="服务器搭建"></a>服务器搭建</h2><hr><p>建议选择 Ubuntu 14.04 LTS 作为服务器以便使用 TCP Fast Open。除非有明确理由，不建议用对新手不友好的 CentOS。</p><p>为了更好的性能，VPS 尽量选择 XEN 或 KVM，不要使用 OpenVZ。推荐使用以下 VPS：</p><ul><li>Digital Ocean 自带的内核无需自己编译模块即可使用 hybla 算法</li><li>Linode 功能强大，机房较多</li></ul><h2 id="客户端"><a href="#客户端" class="headerlink" title="客户端"></a>客户端</h2><ul><li><a href="/2020/03/14/vpn7/">Windows</a> / <a href="https://github.com/shadowsocks/shadowsocks-iOS/wiki/Shadowsocks-for-OSX-Help" target="_blank" rel="noopener">OS X</a></li><li><a href="https://github.com/shadowsocks/shadowsocks-android" target="_blank" rel="noopener">Android</a> / <a href="https://github.com/shadowsocks/shadowsocks-iOS/wiki/Help" target="_blank" rel="noopener">iOS</a></li><li><a href="https://github.com/shadowsocks/openwrt-shadowsocks" target="_blank" rel="noopener">OpenWRT</a></li></ul><p>在你本地的 PC 或手机上使用图形客户端。具体使用参见它们的使用说明。</p>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VPN </tag>
            
            <tag> 翻墙 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>视频播放器DPlayer使用方法介绍</title>
      <link href="/p/3fec.html"/>
      <url>/p/3fec.html</url>
      
        <content type="html"><![CDATA[<h2 id="视频播放器"><a href="#视频播放器" class="headerlink" title="视频播放器"></a>视频播放器</h2><p>最近在项目开发中需要在Web页面中嵌入视频播放器，并且通过监听一些事件来记录访问者对于视频的一些操作，在此记录使用方法，方便查询使用：</p><h2 id="快速开始"><a href="#快速开始" class="headerlink" title="快速开始"></a>快速开始</h2><p>　　加载播放器文件：</p><pre><code>&lt;link rel=&quot;stylesheet&quot; href=&quot;DPlayer.min.css&quot; /&gt;&lt;div id=&quot;dplayer&quot;&gt;&lt;/div&gt;&lt;script src=&quot;DPlayer.min.js&quot;&gt;&lt;/script&gt;</code></pre><p>　　在js里初始化：</p><pre><code>const dp = new DPlayer({    container: document.getElementById(&#39;dplayer&#39;),    video: {        url: &#39;demo.mp4&#39;,    },});</code></pre><p>　　一个最简单的 DPlayer 就初始化好了，它只有最基本的视频播放功能。</p><h2 id="搭建视频弹幕后台服务"><a href="#搭建视频弹幕后台服务" class="headerlink" title="搭建视频弹幕后台服务"></a>搭建视频弹幕后台服务</h2><p>　　前置条件：安装了git、docker、docker-compose</p><p>　　下载后台服务代码，当然也可以自己搭建后台服务</p><pre><code>git clone https://github.com/MoePlayer/DPlayer-node.git　　进入DPlayer-node目录执行docker-compose命令cd DPlayer-nodedocker-compose builddocker-compose pulldocker-compose up  -d</code></pre><p>　　启动弹幕服务之后，就可以愉快的在边看视频边发弹幕了(～￣▽￣)～</p><p>　　当然需要先在DPlayer设置弹幕属性。DPlayer支持播放各种格式，以下的视频选项设置亲测有效，不过视频字幕没有测试，有感兴趣的同学可以自己制作字幕玩一下。</p><pre><code>&lt;h1&gt;DPlayer&lt;/h1&gt;&lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.bootcss.com/dplayer/1.25.0/DPlayer.min.css&quot; /&gt;&lt;div id=&quot;dplayer&quot;&gt;&lt;/div&gt;&lt;script src=&quot;https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js&quot;&gt;&lt;/script&gt;&lt;script src=&quot;https://cdn.bootcss.com/flv.js/1.5.0/flv.min.js&quot;&gt;&lt;/script&gt;&lt;script src=&quot;https://cdn.jsdelivr.net/npm/hls.js@latest&quot;&gt;&lt;/script&gt;&lt;!-- 以上js都需要在dplayer之前加载 --&gt;&lt;script src=&quot;https://cdn.bootcss.com/dplayer/1.25.0/DPlayer.min.js&quot;&gt;&lt;/script&gt;&lt;script type=&quot;text/javascript&quot;&gt;    var url = &#39;/assets/oceans.mp4&#39;;    var vid = md5(url);    const dp = new DPlayer({        container: document.getElementById(&#39;dplayer&#39;),        autoplay: false, // 自动播放        theme: &#39;#FADFA3&#39;, // 主题        loop: true, // 循环播放        lang: &#39;zh-cn&#39;, // 语言        screenshot: true, // 截图        hotkey: true, // 热键        preload: &#39;auto&#39;, // 预加载        logo: &#39;/assets/octocat.png&#39;, // 左上角logo        volume: 0.7, // 音量        mutex: true, // 多个视频互斥        // 常规方式        video: {            url: url,            type: &#39;normal&#39;,            pic: &#39;/assets/demo.png&#39;, // 封面            thumbnails: &#39;/assets/thumbnail.jpg&#39;, // 缩略图        },        // m3u8        //video: {        //    url: &#39;/assets/demo.m3u8&#39;,        //    type: &#39;hls&#39;        //},        // flv        //video: {        //    url: &#39;/assets/demo.flv&#39;,        //    type: &#39;flv&#39;        //},        pluginOptions: {            hls: {                // hls config                autoStartLoad: true,                startPosition: -1            },            flv: {                enableWorker: false,                enableStashBuffer: true,                stashInitialSize: undefined,                isLive: false,                lazyLoad: true,                lazyLoadMaxDuration: 3 * 60,                lazyLoadRecoverDuration: 30,                deferLoadAfterSourceOpen: true,                // autoCleanupSourceBuffer: default as false, leave unspecified                autoCleanupMaxBackwardDuration: 3 * 60,                autoCleanupMinBackwardDuration: 2 * 60,                statisticsInfoReportInterval: 600,                fixAudioTimestampGap: true,                accurateSeek: false,                seekType: &#39;range&#39;,  // [range, param, custom]                seekParamStart: &#39;bstart&#39;,                seekParamEnd: &#39;bend&#39;,                rangeLoadZeroStart: false,                customSeekHandler: undefined,                reuseRedirectedURL: false,                // referrerPolicy: leave as unspecified                headers: undefined,                customLoader: undefined            }        },        // 切换视频质量        //video: {        //    quality: [        //        {        //            name: &#39;HD&#39;,        //            url: &#39;demo.m3u8&#39;,        //            type: &#39;hls&#39;,        //        },        //        {        //            name: &#39;SD&#39;,        //            url: &#39;demo.mp4&#39;,        //            type: &#39;normal&#39;,        //        },        //    ],        //    defaultQuality: 0,        //    pic: &#39;demo.png&#39;,        //    thumbnails: &#39;thumbnails.jpg&#39;,        //},        // 视频字幕        subtitle: {            type: &#39;webvtt&#39;,            url: &#39;webvtt.vtt&#39;,            fontSize: &#39;25px&#39;,            bottom: &#39;10%&#39;,            color: &#39;#b7daff&#39;        },        // 弹幕        danmaku: {            id: vid,            api: &#39;http://192.168.1.172:1207/&#39;,            addition: [&#39;http://192.168.1.172:1207/v3/bilibili?aid=80266688&amp;cid=137358410&#39;]        },        // 视频右键菜单        contextmenu: [            {                text: &#39;falltakeman&#39;,                link: &#39;https://cnblogs.com/falltakeman&#39;,            },            {                text: &#39;dplayer&#39;,                click: (player) =&gt; {                    console.log(player);                },            },        ],        // 高能预告        highlight: [            {                text: &#39;敌军还有10秒到达战场&#39;,                time: 10,            },            {                text: &#39;2mins 空降&#39;,                time: 120,            },        ],    });&lt;/script&gt;</code></pre><h3 id="1、在页面中加载库文件"><a href="#1、在页面中加载库文件" class="headerlink" title="1、在页面中加载库文件"></a>1、在页面中加载库文件</h3><pre><code>&lt;link rel=&quot;stylesheet&quot; href=&quot;./assets/lib/dplayer/dist/DPlayer.min.css&quot;/&gt;   //视频播放器对应样式文件&lt;script src=&quot;../assets/lib/dplayer/dist/DPlayer.min.js&quot;&gt;&lt;/script&gt;</code></pre><h3 id="2、创建HTML"><a href="#2、创建HTML" class="headerlink" title="2、创建HTML"></a>2、创建HTML</h3><pre><code>&lt;div id=&quot;dplayer&quot;&gt;&lt;/div&gt;</code></pre><h3 id="3、初始化视频"><a href="#3、初始化视频" class="headerlink" title="3、初始化视频"></a>3、初始化视频</h3><pre><code>var dplayer = new DPlayer({    element: document.getElementById(&#39;dplayer&#39;),    autoplay: false,    theme: &#39;#FADFA3&#39;,    loop: false,    screenshot: true, //截屏    hotkey: false,    logo: &#39;/public/assets/images/server/favicon.ico&#39;,    video: {  //视频源 包含不同分辨率源        quality: [{            name: &#39;普清&#39;,            url: url1        },{            name: &#39;高清&#39;,            url: url2        }, {            name: &#39;超清&#39;,            url: url3        }],        defaultQuality: 0,        pic: &#39;&#39;,        type: &#39;auto&#39;    }});</code></pre><h3 id="4、事件："><a href="#4、事件：" class="headerlink" title="4、事件："></a>4、事件：</h3><pre><code>　　play,  播放时触发　　pause,  暂停时触发　　canplay, 　　playing, 播放时触发　　ended, 视频播放结束时触发　　error  出错时触发</code></pre><h3 id="5、事件监听："><a href="#5、事件监听：" class="headerlink" title="5、事件监听："></a>5、事件监听：</h3><h3 id="（1）通过on方法绑定事件"><a href="#（1）通过on方法绑定事件" class="headerlink" title="（1）通过on方法绑定事件"></a>（1）通过on方法绑定事件</h3><pre><code>　　dplayer.on(event, callback)   EG： dplayer.on(&#39;play&#39;,funcition(){　　　　console.log(&quot;start play video&quot;);　　})</code></pre><h4 id="2-通过dplayer-video-current对象设置"><a href="#2-通过dplayer-video-current对象设置" class="headerlink" title="(2)通过dplayer.video.current对象设置"></a>(2)通过dplayer.video.current对象设置</h4><pre><code>ondurationchange　　onerror　　onload　　onloadeddata　　onloadedmetadata　　onloadstart　　onmousedown　　onmouseenter　　onmouseleave　　onmousemove　　onmouseout　　onmouseover　　onmouseup　　onmousewheel　　onpause　　onplay　　onplaying　　onpointercancel　　onpointerdown　　onpointerenter　　onpointerleave　　onpointermove　　onpointerout　　onpointerover　　onpointerup　　onprogress　　onratechange　　onreset　　onresize　　onseeked　　onseeking　　ontimeupdate　　onvolumechange　　onwaiting　　onwaitingforkey　　onwebkitfullscreenchange　　onwebkitfullscreenerror　　EG: dplayer.video.current.onplay = function(){　　　　console.log(&quot;start play video&quot;);　　}</code></pre><h3 id="6、获取当前视频播放时间："><a href="#6、获取当前视频播放时间：" class="headerlink" title="6、获取当前视频播放时间："></a>6、获取当前视频播放时间：</h3><pre><code>  dplayer.video.current.currentTime</code></pre>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> 视频播放器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>日志迁移</title>
      <link href="/p/c080.html"/>
      <url>/p/c080.html</url>
      
        <content type="html"><![CDATA[<p>#日志迁移</p><blockquote><p>我将halo博客上的日志迁移到了hexo博客上</p></blockquote><p>halo博客建立于 2020-02-29 20:13</p><p>3月21日，昨天搭建的这个博客！今天开始测试了，虽然是起步但是对我来说意义非凡，它现在不仅仅是一个我的个人博客，而且还是我新的开始。</p><p>3月23日<br>今天上午上网课，感觉有点累了，下午把这门课的作业全部补了一下，感觉还可以；但是想了想自己的单片机课就又有点麻木了。一颗按键三种功能怎么做的到嘛！真的是有点难，目前还没有想到答案。还在思考中。。。<br>之后我有去看了一下我的微信公众号，粉丝还是只有那么几个。这次我把视频全部放上去的，试一下视频的播放是怎么在微信公众号上实现的。感觉还是蛮好的。</p>]]></content>
      
      
      <categories>
          
          <category> 随笔录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> halo博客 </tag>
            
            <tag> 随笔 </tag>
            
            <tag> 日志 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>有关git问题（出坑）</title>
      <link href="/p/d8f9.html"/>
      <url>/p/d8f9.html</url>
      
        <content type="html"><![CDATA[<h2 id="git在使用时会出错。"><a href="#git在使用时会出错。" class="headerlink" title="git在使用时会出错。"></a>git在使用时会出错。</h2><p>看了好多资料终于搞定了git 中clone命令报错这个问题，废话不多说直接上步骤希望对大家有帮助。</p><ul><li><p>1   删除.ssh文件夹（直接搜索该文件夹）下的known_hosts(手动删除即可，不需要git）</p></li><li><p>2   在下载好的Git中的bin目录下打开bash.exe输入命令ssh-keygen -t rsa -C “username” (注：username为你git上的用户名)，如果执行成功。返回：</p></li></ul><p>Generating public/private rsa key pair.<br>Enter file in which to save the key <code>(/Users/username/.ssh/id_rsa)</code>: <code>//这里的username是电脑上的用户名，这个地址也是文件的存储地址，然后我们按</code></p><p>回车，如果你以前有存储地址会返回<code>/Users/your username/.ssh/id_rsa already exists.Overwrite (y/n)?</code>直接输入y回车。如果以前没有储存地址就会出现</p><p><code>Enter passphrase(empty for no passphrase);</code>也直接回车，两种情况回车后都会出现 <code>Enter same passphrase again</code>然后接着回车会显示一长串内容其中</p><p>还有一些<code>..o.. o oo .oS.</code>之类的代码，这说明SSH key就已经生成了。文件目录就是：<code>username/.ssh/id_rsa.pub</code>.</p><ul><li><p>3  然后找到系统自动在.ssh文件夹下生成两个文件，id_rsa和id_rsa.pub，用记事本打开id_rsa.pub将全部的内容复制。</p></li><li><p>4  打开<code>https://github.com/</code>，登陆你的账户，进入设置（Settings）找到<br><img src="https://gitee.com/badenough/blogImage/raw/master/img/20200402185138.png" alt="批注 20200402 185030.png"></p></li><li><p>5  然后将你复制的内容粘贴到key中<br><img src="https://gitee.com/badenough/blogImage/raw/master/img/20200402185030.png" alt="批注 20200402 185138.png"></p></li></ul><p><img src="https://gitee.com/badenough/blogImage/raw/master/img/20200402185245.png" alt="批注 20200402 185245.png"></p><p>再点击Add SSH Key                     </p><p>ok还有最后一步</p><ul><li>6  仍然在bash.exe中输入<code>ssh -T git@github.com</code>然后会跳出一堆内容你只需输入yes回车就完事了，然后他会提示你成功了。</li></ul><p>然后你就可以正常使用git clone命令了，最后祝你好运哈哈！</p>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 后端 </tag>
            
            <tag> git问题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网页常用分享代码大全(前端必备)</title>
      <link href="/p/a2b3.html"/>
      <url>/p/a2b3.html</url>
      
        <content type="html"><![CDATA[<h6 id="1、新浪微博"><a href="#1、新浪微博" class="headerlink" title="1、新浪微博"></a>1、新浪微博</h6><pre><code>&lt;a href=&quot;http://v.t.sina.com.cn/share/share.php?url=http://www.shao-ming.com&amp;title=&quot;分享内容&quot;&quot; target=&quot;_blank&quot;&gt;新浪微博&lt;/a&gt; </code></pre><h6 id="2、腾讯微博"><a href="#2、腾讯微博" class="headerlink" title="2、腾讯微博"></a>2、腾讯微博</h6><pre><code>&lt;a href=&quot;http://v.t.qq.com/share/share.php?url=http://www.shao-ming.com&amp;title=&quot;分享内容&quot;&quot; target=&quot;_blank&quot;&gt;腾讯微博&lt;/a&gt; </code></pre><h6 id="3、开心网"><a href="#3、开心网" class="headerlink" title="3、开心网"></a>3、开心网</h6><pre><code>&lt;a href=&quot;javascript：window.open(&quot;http://www.kaixin001.com/repaste/share.php?rtitle=&quot;+encodeURIComponent(document.title)+&quot;&amp;rurl=&quot;+encodeURIComponent(document.location.href)+&quot;&amp;rcontent=&quot;);void(0)&quot;&gt;开心网&lt;/a&gt; </code></pre><p>或者用 </p><pre><code>&lt;a href=&quot;http://www.kaixin001.com/repaste/share.php?rurl=http://www.shao-ming.com&amp;rcontent=http://www.baidu.com&amp;rtitle=kaixin&quot; target=&quot;_blank&quot;&gt;开心网&lt;/a&gt; </code></pre><h6 id="4、豆瓣网"><a href="#4、豆瓣网" class="headerlink" title="4、豆瓣网"></a>4、豆瓣网</h6><pre><code>&lt;a href=&quot;javascript：window.open(&quot;http://www.douban.com/recommend/?url=&quot;+encodeURIComponent(document.location.href)+&quot;&amp;title=&quot;+encodeURIComponent(document.title));void(0)&quot;&gt;豆瓣&lt;/a&gt; </code></pre><p>或者用 </p><pre><code>&lt;a href=&quot;http://www.douban.com/recommend/?url=http://www.shao-ming.com&amp;title=douban&quot; target=&quot;_blank&quot;&gt;豆瓣&lt;/a&gt; </code></pre><h6 id="5、人人网"><a href="#5、人人网" class="headerlink" title="5、人人网"></a>5、人人网</h6><pre><code>&lt;a href=&quot;javascript：window.open(&quot;http://share.renren.com/share/buttonshare.do?link=&quot;+encodeURIComponent(document.location.href)+&quot;&amp;title=&quot;+encodeURIComponent(document.title));void(0)&quot;&gt;人人网&lt;/a&gt; </code></pre><p>或者用 </p><pre><code>&lt;a href=&quot;http://share.renren.com/share/buttonshare.do?link=http://www.shao-ming.com&quot; target=&quot;_blank&quot;&gt;人人网&lt;/a&gt; </code></pre><h6 id="6、百度贴吧"><a href="#6、百度贴吧" class="headerlink" title="6、百度贴吧"></a>6、百度贴吧</h6><pre><code>&lt;a href=&quot;http://tieba.baidu.com/f/commit/share/openShareApi?url=http://www.shao-ming.com&amp;title=hello&amp;desc=&amp;pic=&quot; target=&quot;_blank&quot;&gt;百度贴吧&lt;/a&gt; </code></pre><h6 id="7、QQ好友"><a href="#7、QQ好友" class="headerlink" title="7、QQ好友"></a>7、QQ好友</h6><pre><code>&lt;a href=&quot;http://connect.qq.com/widget/shareqq/index.html?title=qqhaoyou&amp;url=http://www.shao-ming.com&amp;desc=还不错哦&amp;pics=&amp;site=优酷&quot; target=&quot;_blank&quot;&gt;QQ好友&lt;/a&gt; </code></pre><h6 id="8、QQ空间"><a href="#8、QQ空间" class="headerlink" title="8、QQ空间"></a>8、QQ空间</h6><pre><code>&lt;a href=&quot;http://sns.qzone.qq.com/cgi-bin/qzshare/cgi_qzshare_onekey?url=http://www.shao-ming.com&quot; target=&quot;_blank&quot;&gt;QQ空间&lt;/a&gt; </code></pre><h6 id="9、腾讯朋友"><a href="#9、腾讯朋友" class="headerlink" title="9、腾讯朋友"></a>9、腾讯朋友</h6><pre><code>&lt;a href=&quot;http://sns.qzone.qq.com/cgi-bin/qzshare/cgi_qzshare_onekey?to=pengyou&amp;url=http://www.shao-ming.com&quot; target=&quot;_blank&quot;&gt;腾讯朋友&lt;/a&gt; </code></pre><h6 id="10、百度收藏"><a href="#10、百度收藏" class="headerlink" title="10、百度收藏"></a>10、百度收藏</h6><pre><code>&lt;a href=&quot;javascript：window.open(&quot;http://cang.baidu.com/do/add?it=&quot;+encodeURIComponent(document.title.substring(0,76))+&quot;&amp;iu=&quot;+encodeURIComponent(location.href)+&quot;&amp;fr=ien#nw=1&quot;,&quot;scrollbars=no,width=600,height=450,left=75,top=20,status=no,resizable=yes&quot;); void 0&quot;&gt;百度搜藏&lt;/a&gt; </code></pre><h6 id="11、优酷空间"><a href="#11、优酷空间" class="headerlink" title="11、优酷空间"></a>11、优酷空间</h6><pre><code>&lt;a href=&quot;http://i.youku.com/u/share/?url=http://www.shao-ming.com&amp;content=&quot;分享内容&quot;&quot; target=&quot;_blank&quot;&gt;优酷空间&lt;/a&gt; </code></pre><h6 id="12、搜狐微博"><a href="#12、搜狐微博" class="headerlink" title="12、搜狐微博"></a>12、搜狐微博</h6><pre><code>&lt;a href=&quot;http://t.sohu.com/third/post.jsp?content=utf-8&amp;url=http://www.shao-ming.com&amp;title=souhu&quot; target=&quot;_blank&quot;&gt;搜狐微博&lt;/a&gt; </code></pre><h6 id="13、MSN"><a href="#13、MSN" class="headerlink" title="13、MSN"></a>13、MSN</h6><pre><code>&lt;a href=&quot;http://profile.live.com/badge/?url=http://www.shao-ming.com&amp;Title=msn&quot; target=&quot;_blank&quot;&gt;MSN&lt;/a&gt; </code></pre><h6 id="14、猫扑"><a href="#14、猫扑" class="headerlink" title="14、猫扑"></a>14、猫扑</h6><pre><code>&lt;a href=&quot;http://tt.mop.com/share/shareV.jsp?title=moptietie&amp;pageUrl=http://www.shao-ming.com&quot; target=&quot;_blank&quot;&gt;MOP贴贴&lt;/a&gt; </code></pre><h6 id="15、网易微博"><a href="#15、网易微博" class="headerlink" title="15、网易微博"></a>15、网易微博</h6><pre><code>&lt;a href=&quot;http://t.163.com/article/user/checkLogin.do?link=http://www.shao-ming.com&quot; target=&quot;_blank&quot;&gt;网易微博&lt;/a&gt; </code></pre><h6 id="16、QQ书签"><a href="#16、QQ书签" class="headerlink" title="16、QQ书签"></a>16、QQ书签</h6><pre><code>&lt;a href=&quot;javascript：window.open(&quot;http://shuqian.qq.com/post?from=3&amp;title=&quot;+encodeURIComponent(document.title)+&quot;&amp;uri=&quot;+encodeURIComponent(document.location.href)+&quot;&amp;jumpback=2&amp;noui=1&quot;,&quot;favit&quot;,&quot;width=930,height=470,left=50,top=50,toolbar=no,menubar=no,location=no,scrollbars=yes,status=yes,resizable=yes&quot;);void(0)&quot;&gt;QQ书签&lt;/a&gt; </code></pre><h6 id="17、GOOGLE书签："><a href="#17、GOOGLE书签：" class="headerlink" title="17、GOOGLE书签："></a>17、GOOGLE书签：</h6><pre><code>&lt;a href=&quot;javascript：window.open(&quot;http://www.google.com/bookmarks/mark?op=add&amp;bkmk=&quot;+encodeURIComponent(document.location.href)+&quot;&amp;title=&quot;+encodeURIComponent(document.title));void(0)&quot;&gt;Google&lt;/a&gt; </code></pre><h6 id="18、Twitter"><a href="#18、Twitter" class="headerlink" title="18、Twitter"></a>18、Twitter</h6><pre><code>&lt;a href=&quot;javascript：window.open(&quot;http://twitter.com/home?status=&quot;+encodeURIComponent(document.location.href)+&quot; &quot;+encodeURIComponent(document.title));void(0)&quot;&gt;Twitter&lt;/a&gt; </code></pre><h6 id="19、Facebook"><a href="#19、Facebook" class="headerlink" title="19、Facebook"></a>19、Facebook</h6><pre><code>&lt;a class=&quot;fav_facebook&quot; rel=&quot;nofollow&quot; href=&quot;javascript：window.open(&quot;http://www.facebook.com/sharer.php?u=&quot;+encodeURIComponent(document.location.href)+&quot;&amp;t=&quot;+encodeURIComponent(document.title));void(0)&quot;&gt;Facebook&lt;/a&gt; </code></pre><h6 id="20、Delicious书签："><a href="#20、Delicious书签：" class="headerlink" title="20、Delicious书签："></a>20、Delicious书签：</h6><pre><code>&lt;a href=&quot;JavaScript：window.open(&quot;http://del.icio.us/post?url=&quot;+encodeURIComponent(document.location.href)+&quot;&amp;title=&quot;+encodeURIComponent(document.title)+&quot;&amp;notes=&quot;);void(0)&quot;&gt;Delicious&lt;/a&gt; </code></pre>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> 网页代码 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>普通简单命令行的整理</title>
      <link href="/p/23bf.html"/>
      <url>/p/23bf.html</url>
      
        <content type="html"><![CDATA[<h1 id="普通命令行代码使用"><a href="#普通命令行代码使用" class="headerlink" title="普通命令行代码使用"></a>普通命令行代码使用</h1><pre><code>## pwd : Windows环境下，检查你当前的位置；## mkdir __blog_ :在当前位置下建立一个文件夹blog；## :wq ：保持并退出；## ESC键 ： 退出；## ls（在MAC环境下）/dir（在Windows环境下）：检查当前文件夹中含有什么文件。## cd ：可以进入也可以退出文件夹；    cd ../.. ：后退两个文件夹；    cd blog ：进入文件夹blog；## 软件名字 -v ：现在的软件版本号；## git clone 网站名 地址（文件夹）：可以用来下载文件；## hexo sever 在本地预览自己的博客；    clean ：清理；    g ：生成网页；    d ：发送到服务器端；</code></pre><h1 id="Windows系统环境下："><a href="#Windows系统环境下：" class="headerlink" title="Windows系统环境下："></a>Windows系统环境下：</h1><h2 id="关机："><a href="#关机：" class="headerlink" title="关机："></a>关机：</h2><pre><code>## @echo   off       shutdown -s  // 一分钟后关机            -a  //    取消            -s -t 3000  // 3000秒后自动关机</code></pre>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 后端 </tag>
            
            <tag> 命令行 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>手机电脑免费互传工具汇总</title>
      <link href="/p/8a1d.html"/>
      <url>/p/8a1d.html</url>
      
        <content type="html"><![CDATA[<h2 id="互传工具汇总"><a href="#互传工具汇总" class="headerlink" title="互传工具汇总"></a>互传工具汇总</h2><blockquote><p>手机和电脑已经成为我们日常生活中必不可少的工具。<br>得益于电子设备的特性，我们可以随时随地存储大量信息文件。<br>然而不可避免的问题是，有时我们需要把手机上的文件发送到电脑，在电脑上存储管理；<br>或者把电脑上的文件发送到手机，以供即时查阅。<br>这就要求我们连接手机和电脑。</p></blockquote><p>在没有数据线的情况下，我们最先想到的方法或许是用QQ或者微信作为传输媒介，或者利用邮箱和云端服务。事实上，有许多专业的文件传输工具等待我们利用，它们拥有各自不可替代的优点，比如无线传输、免登陆、批量传输等等。<br></br></p><ul><li>本文总结了7款免费文件传输工具，给大家介绍了其各自特点。</li><li>其中5款工具支持手机和电脑间文件互传；</li><li>2款支持电脑文件互传，从而分享文件给好友。希望大家能从中找到自己喜欢的传输工具，挺高工作和学习效率。</li></ul><h2 id="5款手机和电脑文件互传免费工具："><a href="#5款手机和电脑文件互传免费工具：" class="headerlink" title="5款手机和电脑文件互传免费工具："></a>5款手机和电脑文件互传免费工具：</h2><h3 id="1-爱莫助手：免登录无广告"><a href="#1-爱莫助手：免登录无广告" class="headerlink" title="1.爱莫助手：免登录无广告"></a>1.爱莫助手：免登录无广告</h3><p><a href="https://airmore.cn/" target="_blank" rel="noopener">https://airmore.cn/</a></p><p>爱莫助手是一个无线工具，只要在手机上安装一个APP即可无线连接手机和电脑。它功能比较多，可以无需数据线连接手机和电脑，传输照片、视频、音乐、文档等。它还支持文件预览、安卓手机屏幕投影到电脑，在电脑上发手机短信等。</p><h3 id="2-Airdroid：功能多"><a href="#2-Airdroid：功能多" class="headerlink" title="2. Airdroid：功能多"></a>2. Airdroid：功能多</h3><p><a href="http://web.airdroid.com/" target="_blank" rel="noopener">http://web.airdroid.com/</a></p><p>Airdroid也是一款强大的工具和爱莫助手功能差不多，支持无线连接手机和电脑。除了常规的文件传输，比如照片、音乐、消息、联系人，还可以手机投影电脑、屏幕截图、找回手机。但是需要注册账号登录使用。</p><h3 id="5-Dropbox：云端传输"><a href="#5-Dropbox：云端传输" class="headerlink" title="5. Dropbox：云端传输"></a>5. Dropbox：云端传输</h3><p><a href="https://www.dropbox.com/" target="_blank" rel="noopener">https://www.dropbox.com/</a></p><p>Dropbox类似云端服务，使用起来也很便捷。我们可以创建一个账号或者用Google账号登入，然后上传文件，在手机上接收。反过来也可以用手机上传文件在电脑上接收。</p><h2 id="2款电脑间文件互传工具："><a href="#2款电脑间文件互传工具：" class="headerlink" title="2款电脑间文件互传工具："></a>2款电脑间文件互传工具：</h2><h3 id="1-Reep-io"><a href="#1-Reep-io" class="headerlink" title="1. Reep.io"></a>1. Reep.io</h3><p><a href="https://reep.io/" target="_blank" rel="noopener">https://reep.io/</a></p><p>Reep.io是一款简单的在线工具，主要用来传输文件给朋友，添加文件后会生成一个链接，我们可以设置一个密码。想要获取的话，直接输入链接和密码就可以了。临时用用也是很不错的。</p><h3 id="2-文叔叔"><a href="#2-文叔叔" class="headerlink" title="2.文叔叔"></a>2.文叔叔</h3><p><a href="https://www.wenshushu.cn/" target="_blank" rel="noopener">https://www.wenshushu.cn/</a></p><p>可以快速发文件。<br><img src="http://118.178.84.132:8090/upload/2020/3/%E6%89%B9%E6%B3%A8%202020-03-22%20195434-3353cb1be2c44e43a96c27f54fae9a56.png" alt="批注 2020-03-22 195434"></p>]]></content>
      
      
      <categories>
          
          <category> 分享推荐 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 工具 </tag>
            
            <tag> 互传工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Shadowsocks Windows 使用说明</title>
      <link href="/p/b682.html"/>
      <url>/p/b682.html</url>
      
        <content type="html"><![CDATA[<h1 id="Shadowsocks-Windows-使用说明"><a href="#Shadowsocks-Windows-使用说明" class="headerlink" title="Shadowsocks Windows 使用说明"></a>Shadowsocks Windows 使用说明</h1><h2 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h2><ul><li>系统代理设置</li><li>PAC 模式和全局模式</li><li>GFWList 和用户规则</li><li>支持 HTTP 代理</li><li>支持多服务器切换</li><li>支持 UDP 代理</li><li>支持插件</li></ul><h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><p>下载 最新版。</p><p>需要安装 <a href="https://dotnet.microsoft.com/download/dotnet-framework/net472" target="_blank" rel="noopener">.NET Framework 4.7.2</a> 和 Microsoft <a href="https://www.microsoft.com/en-us/download/details.aspx?id=53840" target="_blank" rel="noopener">Visual C++ 2015 Redistributable (x86)</a></p><p>从 2.5.8 开始你可以在 Releases 页面找到 exe 文件的 hash 值，你可以使用<a href="https://support.microsoft.com/en-us/kb/841290" target="_blank" rel="noopener">fciv </a> 等工具 校验 <code>Shadowsocks.exe</code> 文件. 例如 <code>fciv.exe -both -add Shadowsocks.exe</code></p><h2 id="基本使用"><a href="#基本使用" class="headerlink" title="基本使用"></a>基本使用</h2><ul><li>在任务栏找到 Shadowsocks 图标</li><li>在 服务器 菜单添加多个服务器</li><li>选择 <code>启用系统代理</code> 来启用系统代理。请禁用浏览器里的代理插件，或把它们设置为使用系统代理。</li><li>除了设为系统代理，你也可以直接自己配置浏览器代理。在 <a href="https://github.com/FelisCatus/SwitchyOmega" target="_blank" rel="noopener">SwitchyOmega</a> 中把代理设置为 SOCKS5 或 HTTP 的 127.0.0.1:1080。这个 1080 端口可以在服务器设置中设置。</li></ul><h2 id="PAC"><a href="#PAC" class="headerlink" title="PAC"></a>PAC</h2><ul><li>可以编辑 PAC 文件来修改 PAC 设置。Shadowsocks 会监听文件变化，修改后会自动生效。</li><li>你也可以从 GFWList （由第三方维护）更新 PAC 文件。</li><li>你也可以使用在线 PAC URL</li></ul><p>对于 Windows 10 商店和其相关应用请以管理员权限执行以下命令：</p><pre><code>netsh winhttp import proxy source=ie</code></pre><h2 id="服务器自动切换"><a href="#服务器自动切换" class="headerlink" title="服务器自动切换"></a>服务器自动切换</h2><ul><li>负载均衡：随机选择服务器</li><li>高可用：根据延迟和丢包率自动选择服务器</li><li>累计丢包率：通过定时 ping 来测速和选择。如果要使用本功能，请打开菜单里的统计可用性。</li><li>也可以实现 IStrategy 接口来自定义切换规则，然后给我们发一个 pull request。</li></ul><h2 id="UDP"><a href="#UDP" class="headerlink" title="UDP"></a>UDP</h2><p>对于 UDP，请使用 SocksCap 或 ProxyCap 强制你想使用的程序走代理。</p><h2 id="多实例"><a href="#多实例" class="headerlink" title="多实例"></a>多实例</h2><p>如果想使用其它工具如 <a href="https://github.com/FelisCatus/SwitchyOmega" target="_blank" rel="noopener">SwitchyOmega</a> 管理多个服务器，可以启动多个 Shadowsocks。 为了避免配置产生冲突，把 Shadowsocks 复制到一个新目录里，并给它设置一个新的本地端口。</p><h2 id="插件"><a href="#插件" class="headerlink" title="插件"></a>插件</h2><p>若想通过插件来连接服务器，请到编辑服务器界面填入插件程序（相对路径或绝对路径）</p><p><em>注意： 在启用插件后，正向代理会被停用。</em></p><h2 id="全局快捷键"><a href="#全局快捷键" class="headerlink" title="全局快捷键"></a>全局快捷键</h2><p>可以设置 Shadowsocks 在启动时自动注册热键，如果多开 Shadowsocks 则需要为后来启动的实例设置不同的快捷键。</p><h3 id="怎样键入快捷键"><a href="#怎样键入快捷键" class="headerlink" title="怎样键入快捷键?"></a>怎样键入快捷键?</h3><ul><li>点击想要设置的快捷键文本框。</li><li>按下想要设置的组合键。</li><li>当满足要求时释放全部按键。</li><li>这时你输入的快捷键字符会出现在文本框中。</li></ul><h3 id="如何修改快捷键"><a href="#如何修改快捷键" class="headerlink" title="如何修改快捷键?"></a>如何修改快捷键?</h3><ul><li>点击想要设置的快捷键文本框。</li><li>按下 BackSpace（退格键）清除文本框内容。</li><li>重新键入新的组合键。</li></ul><h3 id="如何取消激活"><a href="#如何取消激活" class="headerlink" title="如何取消激活?"></a>如何取消激活?</h3><ul><li>清除你想要取消激活快捷键的文本框内容，如果想要取消全部，则清除全部文本框中的内容。</li><li>点击确认按钮。</li></ul><h3 id="标签背景色含义"><a href="#标签背景色含义" class="headerlink" title="标签背景色含义"></a>标签背景色含义</h3><ul><li>绿色: 此组合键未被其他程序占用，并且成功注册到系统里。</li><li>黄色: 此组合键已被其他程序占用，你需要更换其他组合。</li><li>透明无色: 初始状态</li></ul><h2 id="服务器配置"><a href="#服务器配置" class="headerlink" title="服务器配置"></a>服务器配置</h2><p>请访问 <a href="https://github.com/shadowsocks/shadowsocks/wiki/Ports-and-Clients#linux--server-side" target="_blank" rel="noopener">服务器</a> 获取更多信息。</p><h2 id="开发"><a href="#开发" class="headerlink" title="开发"></a>开发</h2><p>需要 <a href="https://www.visualstudio.com/downloads/" target="_blank" rel="noopener">Visual Studio 2017</a> 或更高版本并安装 <a href="https://dotnet.microsoft.com/download/dotnet-framework/net472" target="_blank" rel="noopener">.NET Framework 4.7.2 Developer Pack</a>。</p><h2 id="授权"><a href="#授权" class="headerlink" title="授权"></a>授权</h2><p><a href="https://github.com/shadowsocks/shadowsocks-windows/blob/master/LICENSE.txt" target="_blank" rel="noopener">GPLv3</a></p><h2 id="项目所使用到的第三方开源组件-库"><a href="#项目所使用到的第三方开源组件-库" class="headerlink" title="项目所使用到的第三方开源组件/库"></a>项目所使用到的第三方开源组件/库</h2><pre><code>Caseless.Fody (MIT)    https://github.com/Fody/CaselessCostura.Fody (MIT)     https://github.com/Fody/CosturaFody (MIT)             https://github.com/Fody/FodyGlobalHotKey (GPLv3)   https://github.com/kirmir/GlobalHotKeyNewtonsoft.Json (MIT)  https://www.newtonsoft.com/jsonStringEx.CS ()         https://github.com/LazyMode/StringExZXing.Net (Apache 2.0) https://github.com/micjahn/ZXing.Netlibsscrypto (GPLv2)    https://github.com/shadowsocks/libsscryptoPrivoxy (GPLv2)        https://www.privoxy.orgSysproxy ()            https://github.com/Noisyfox/sysproxy</code></pre>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VPN </tag>
            
            <tag> 翻墙 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>页面访问量统计以及代码高亮</title>
      <link href="/p/7a21.html"/>
      <url>/p/7a21.html</url>
      
        <content type="html"><![CDATA[<h1 id="页面访问量统计"><a href="#页面访问量统计" class="headerlink" title="页面访问量统计"></a>页面访问量统计</h1><h2 id="1-在head中插入代码"><a href="#1-在head中插入代码" class="headerlink" title="1.在head中插入代码"></a>1.在head中插入代码</h2><pre><code>&lt;script async src=&quot;//dn-lbstatics.qbox.me/busuanzi/2.3/busuanzi.pure.mini.js&quot;&gt;&lt;/script&gt;</code></pre><h2 id="2-在合适的地方插入代码"><a href="#2-在合适的地方插入代码" class="headerlink" title="2.在合适的地方插入代码"></a>2.在合适的地方插入代码</h2><p>Ghost的话，我是在theme主题文件下，找到default.hbs这个文件，将下面的代码插入到这个文件里就好了，希望大家好运吧！</p><!-- 整站统计 --><pre><code>&lt;span id=&quot;busuanzi_container_site_uv&quot;&gt;  本站总访问量&lt;span id=&quot;busuanzi_value_site_pv&quot;&gt;&lt;/span&gt;次  本站访客数&lt;span id=&quot;busuanzi_value_site_uv&quot;&gt;&lt;/span&gt;人次&lt;/span&gt;</code></pre><!-- 单页面统计 --><pre><code>&lt;span id=&quot;busuanzi_container_page_pv&quot;&gt;  本文总阅读量&lt;span id=&quot;busuanzi_value_page_pv&quot;&gt;&lt;/span&gt;次  本文访客数&lt;span id=&quot;busuanzi_value_page_uv&quot;&gt;&lt;/span&gt;人次&lt;/span&gt;</code></pre><h2 id="代码高亮设置"><a href="#代码高亮设置" class="headerlink" title="代码高亮设置"></a>代码高亮设置</h2><p>搭建好Ghost后，默认并不会对页面中的代码作其他处理，并不能直观地显示出代码结构，我们可以通过highlight.js的帮助实现代码高亮。<br>==此教程非常简易明了，助你在CentOS轻松用上highlight.js==</p><p>顺手贴上highlight.js的介绍:<br>–支持 71 种编程语言的语法解析<br>–拥有 44 种样式<br>–自动检测编程语言<br>–同时为多种编程语言代码高亮<br>–可以在 node.js 平台上运行<br>–支持各种标签<br>–与任何 js 框架兼容</p><p>highlight.js主要是从页面下手，植入样式，看见网络上大多的做法都是本地下载highlight.js，再在页面上用js连接，不过我觉得那比较适合windows主机，我们来使用一个简单快捷的方法实现。主要是引入一个css文件和一个js文件，配合Bootstrap所提供的CDN链接，加载速度方面完全不用担心，进到BootCDN搜索highlight.js就能找到，提供历史各个版本各个样式</p><h2 id="这里使用highlight-s9-0-0来作例子，亦可直接跟着同步设置"><a href="#这里使用highlight-s9-0-0来作例子，亦可直接跟着同步设置" class="headerlink" title="这里使用highlight.s9.0.0来作例子，亦可直接跟着同步设置"></a>这里使用highlight.s9.0.0来作例子，亦可直接跟着同步设置</h2><p>(演示系统为Centos 6)</p><p>首先我们需要在页面的<head>里引入css文件：<br>进入Ghost下的主题目录：</p><pre><code># cd /var/www/ghost/content/themes/# lscasper-zh ghostium roon-zh</code></pre><p>我这里有三个主题，我们接下来要修改主题文件夹下的default.hbs文件:</p><pre><code># vi ghostium/default.hbs</code></pre><p>找到<head>标签,在其内添加我们需要的highlight.js的样式：</p><pre><code>&lt;link href=&quot;//cdn.bootcss.com/highlight.js/9.0.0/styles/tomorrow.min.css&quot; rel=&quot;stylesheet&quot;&gt;</code></pre><p>然后在<body>里引入js文件：</p><pre><code>&lt;script src=&quot;//cdn.bootcss.com/highlight.js/9.0.0/highlight.min.js&quot;&gt;&lt;/script&gt;</code></pre><p>同时在其后面再添加一句js的调用代码：</p><pre><code>&lt;script &gt;hljs.initHighlightingOnLoad();&lt;/script&gt;</code></pre><p>工作完成，在我们ghost下所有的页面，highlight.js都会自动寻找&lt; pre&gt;<code class="python"></code></pre >标签对其操作使代码实现高亮，在markDown编辑器中我们只需要像往常一样使用““`”语法来键入代码块即可，除了我们可以为代码块指定语言外，highlight.js还会==自动分析==语言对其进行高亮处理，手动选择语言样式的书写格式如下：</p><pre><code>     ```c++          //something     ```</code></pre><h2 id="样式展示："><a href="#样式展示：" class="headerlink" title="样式展示："></a>样式展示：</h2><pre><code>AndroidstudioC#.pngMonokaiC#2.pngXcodeC#3.pngTomorrowC#4.png</code></pre>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 代码 </tag>
            
            <tag> 访问量 </tag>
            
            <tag> 前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>视频，音频，博客代码</title>
      <link href="/p/1391.html"/>
      <url>/p/1391.html</url>
      
        <content type="html"><![CDATA[<h2 id="第一个视频"><a href="#第一个视频" class="headerlink" title="第一个视频"></a>第一个视频</h2><center> <iframe src="//player.bilibili.com/player.html?aid=53660661&cid=93868411&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe> </center><p>代码如下：</p><pre><code>&lt;iframe src=&quot;//player.bilibili.com/player.html?aid=53660661&amp;cid=93868411&amp;page=1&quot; scrolling=&quot;no&quot; border=&quot;0&quot; frameborder=&quot;no&quot; framespacing=&quot;0&quot; allowfullscreen=&quot;true&quot;&gt; &lt;/iframe&gt;</code></pre><h2 id="再来一个"><a href="#再来一个" class="headerlink" title="再来一个"></a>再来一个</h2><center> <iframe src="//player.bilibili.com/player.html?aid=98657407&bvid=BV1a7411m7aw&cid=168411372&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true">  </iframe> </center><p>代码如下：</p><pre><code>&lt;iframe src=&quot;//player.bilibili.com/player.html?aid=98657407&amp;bvid=BV1a7411m7aw&amp;cid=168411372&amp;page=1&quot; scrolling=&quot;no&quot; border=&quot;0&quot; frameborder=&quot;no&quot; framespacing=&quot;0&quot; allowfullscreen=&quot;true&quot;&gt; &lt;/iframe&gt;</code></pre><h2 id="来别的试试"><a href="#来别的试试" class="headerlink" title="来别的试试"></a>来别的试试</h2><h3 id="点击后播放"><a href="#点击后播放" class="headerlink" title="点击后播放"></a>点击后播放</h3><p><a href="https://vdse.bdstatic.com/d19a284d4cc5f3e4597b553d7b7dd377.mp4" target="_blank" rel="noopener">点击此处来播放视频文件</a></p><p>代码如下：</p><pre><code>&lt;a href=&quot;https://vdse.bdstatic.com/d19a284d4cc5f3e4597b553d7b7dd377.mp4&quot;&gt;点击此处来播放视频文件&lt;/a&gt;</code></pre><h3 id="嵌入式播放"><a href="#嵌入式播放" class="headerlink" title="嵌入式播放"></a>嵌入式播放</h3><p>代码如下：</p><pre><code>&lt;object data=&quot;https://vdse.bdstatic.com/d19a284d4cc5f3e4597b553d7b7dd377.mp4&quot; type=&quot;video/avi&quot; /&gt;</code></pre><h3 id="换一种"><a href="#换一种" class="headerlink" title="换一种"></a>换一种</h3><pre><code>&lt;embed src=&quot;https://vdse.bdstatic.com/d19a284d4cc5f3e4597b553d7b7dd377.mp4&quot; /&gt;</code></pre><h2 id="再来一个音乐"><a href="#再来一个音乐" class="headerlink" title="再来一个音乐"></a>再来一个音乐</h2><center> <iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=298 height=52 src="//music.163.com/outchain/player?type=2&id=411754401&auto=0&height=32"></iframe> </center><p>代码如下：</p><pre><code>&lt;iframe frameborder=&quot;no&quot; border=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; width=298 height=52 src=&quot;//music.163.com/outchain/player?type=2&amp;id=411754401&amp;auto=0&amp;height=32&quot;&gt;&lt;/iframe&gt;</code></pre><h2 id="其他代码"><a href="#其他代码" class="headerlink" title="其他代码"></a>其他代码</h2><h3 id="视频"><a href="#视频" class="headerlink" title="视频"></a>视频</h3><pre><code>&lt;video id=&quot;video&quot; controls=&quot;&quot; preload=&quot;none&quot; poster=&quot;http://om2bks7xs.bkt.clouddn.com/2017-08-26-Markdown-Advance-Video.jpg&quot;&gt;      &lt;source id=&quot;mp4&quot; src=&quot;http://118.178.84.132:8090/upload/2020/3/%E8%80%83%E7%A0%94-63e2659827f149d4bdf262301ee28db8.mp4&quot; type=&quot;video/mp4&quot;&gt;      &lt;/video&gt;width=&quot;720&quot; height=&quot;480&quot; src=&quot;http://118.178.84.132:8090/upload/2020/3/%E8%80%83%E7%A0%94-63e2659827f149d4bdf262301ee28db8.mp4&quot; allowfullscreen=&quot;&quot;&gt;</code></pre><h3 id="音乐"><a href="#音乐" class="headerlink" title="音乐"></a>音乐</h3><pre><code>&lt;audio id=&quot;audio&quot; controls=&quot;&quot; preload=&quot;none&quot;&gt;&lt;source id=&quot;mp3&quot; src=&quot;http://oht4nlntk.bkt.clouddn.com/Music_iP%E8%B5%B5%E9%9C%B2%20-%20%E7%A6%BB%E6%AD%8C%20%28Live%29.mp3&quot;&gt;&lt;/audio&gt;&lt;iframe frameborder=&quot;no&quot; border=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; width=330 height=110 src=&quot;//music.163.com/outchain/player?type=0&amp;id=2574773134&amp;auto=1&amp;height=90&quot;&gt;&lt;/iframe&gt;</code></pre><h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><pre><code>[附件1](http://118.178.84.132:8090/upload/2020/3/aurelius-cd4a0b5d6595400195710dbc2d900eb3.zip)&lt;a href=&quot;http://118.178.84.132:8090/upload/2020/3/aurelius-cd4a0b5d6595400195710dbc2d900eb3.zip&quot;&gt;点击下载&lt;/a&gt;</code></pre>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> 视频 </tag>
            
            <tag> 音频 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>无广告搜索引擎</title>
      <link href="/p/ba0c.html"/>
      <url>/p/ba0c.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>最近，一个名叫 Magi 的搜索引擎成了重点关注对象，据称这个搜索引擎和我们常见的搜索引擎很不一样，有一种程序员们钟爱的 X 冷淡风格。于是我们打开 Magi 看了看。确实，这个页面看着就很让人舒爽。</p></blockquote><h2 id="Magi搜索"><a href="#Magi搜索" class="headerlink" title="Magi搜索"></a>Magi搜索</h2><p>点击此处去看看：<a href="https://magi.com/" target="_blank" rel="noopener">Magi搜索</a><br><img src="https://gitee.com/badenough/blogImage/raw/master/img/2020040901.jpg" alt="656813d9bc02f07"></p><p>重要的是搜索结果也很不一般，属性中的每一个结果有对应的链接，并带有标签和主要学习来源部分，搜索结果以结构化知识的形式呈现。这种模式和国内外主流的搜索引擎完全不一样，让人感觉新鲜。</p><p>当然，也让人由此发出疑问：Magi 到底是什么，是谁开发的，好不好用？</p><p>按照开发者 PeakJi 季逸超的讲述和 Magi 网站上的说明，Magi 其实并不是单纯的网页搜索引擎，而是自主阅读文本并持续纠错的 AI。</p><p><img src="https://gitee.com/badenough/blogImage/raw/master/img/2020040902.jpg" alt="72837d5d8641a40"></p><p>Magi 是由 Peak Labs 从无到有自研的基于机器学习的信息抽取和检索系统，它能将任何领域的自然语言文本中的知识提取成结构化的数据，通过终身学习持续聚合和纠错，进而为人类用户和其他人工智能提供可解析、可检索、可溯源的知识体系。11 月，Peak Labs 发布了公众版 Magi.com。</p><p>与搜索引擎不同，Magi 不仅收录互联网上的海量文本，还会去尝试理解并学习这些文本中蕴含的知识和数据。此外，Magi 从零研发了一套互联网搜索引擎，所以 Magi.com 同时提供全网规模的普通搜索结果，学习过程是在无人干预的情况下 7 x 24 小时不间断运行。</p><p>互联网数据浩如烟海，质量参差不齐，如何将这些数据处理成机器能够理解的数据结构时隔巨大的挑战。在“Magi 的使命”一项中，Peak Labs这样写道：作为公众版本的 magi.com 为人类用户提供了与互联网数据交互的新方式，而 Magi 系统背后的技术平台则承载着另一半重要的意义：让机器像人一样能理解并充分利用互联网中无穷无尽的知识。</p><p>对 Magi 的技术感兴趣的同学，可以访问 <a href="http://www.peak-labs.com" target="_blank" rel="noopener">www.peak-labs.com</a> 官网和季逸超的知乎，我们在这里就不多说了。</p><h2 id="下面来关注一下-Magi-背后的团队——Peak-Labs，以及创始人PeakJi-。"><a href="#下面来关注一下-Magi-背后的团队——Peak-Labs，以及创始人PeakJi-。" class="headerlink" title="下面来关注一下 Magi 背后的团队——Peak Labs，以及创始人PeakJi 。"></a>下面来关注一下 Magi 背后的团队——Peak Labs，以及创始人PeakJi 。</h2><p>创始人 PeakJi 真名季逸超，90 后男生，在北大附中读高中期间接触 iOS 并加入威锋网 WEIP 技术组，先后参与了 wefit 输入法的完善和各种越狱研究，高三设计并开发猛犸 1 网页浏览器，大一推出猛犸 4。据说，PeakJi 所有的产品都是由他独自完成设计、美工、算法、编码、测试和推广，可见啊这是一个非常有想法，动手能力也很强的“技术宅”了。</p><p>2012 年，在北大念书的季逸超创建 Peak Labs，并发明了 Rasgueado 输入法。据说 Peak Labs 的产品和技术还有很多，什么神经信息提取系统 Ireul，网页大规模搜索引擎 Ramiel，多语言分析 pipeline Arael 和分布式检索系统 Matarael 等等，利用这些技术构架，他们搭建了 Magi 服务，包括普惠版和企业版两种。</p><p>如果你要问 Magi 好不好用，我们暂时也无法给出明确回答，因为 Magi 目前完成度还有待提高。但是，比起当做搜索引擎来用，Magi 应该更适合做知识学习链库。</p><p>在使用的过程，我们会发现 Magi 也有很多不足之处，尤其是在搜索规模和答案准确度上。面对一些简单搜索，Magi 往往给不出让人满意的答案，而且速度也不够快。另外，它不是一款搜索引擎，像搜索网址这类任务也达不到很好的效果，也无法进行图片搜索。</p><p>对于 Magi 的缺点，团队和 PeakJi 都大方坦诚。</p><p>Peak Labs 指出，Magi 已经展示出的开放领域信息提取能力，可以应用到企业客户所在的细分领域内，变成一个更加强大的信息抽取系统，让每一个领域、每一家企业都可以轻松地打造属于自己的知识图谱，他们希望未来的 Magi 系统能够成为“知识领域的 ImageNet”。</p><p>Magi 现在还远算不上成熟，但其特性决定了它无穷的可能性和成长空间。未来，也许 Magi 会成为打破现有搜索引擎原理的新范式，开启全新的结构化知识搜索引擎时代，改变我们对信息检索和知识获取方式的刻板印象，毕竟在信息大革命和人工智能大发展的时代，千帆竞速，百舸争流，谁都有机会。</p>]]></content>
      
      
      <categories>
          
          <category> 分享推荐 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 搜索引擎 </tag>
            
            <tag> 推荐 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>服务器查看磁盘信息指令</title>
      <link href="/p/9e95.html"/>
      <url>/p/9e95.html</url>
      
        <content type="html"><![CDATA[<p>#阿里云<br>您是否遇到过这种情况，数据盘空间富足，系统盘无缘无故感觉就满了？一直在找问题？由此导致的本机mysql无法启动？</p><p>等一系列坑爹的问题！输入：df -h，我们看看磁盘使用情况。<br><img src="https://gitee.com/badenough/blogImage/raw/master/img/aliyun1.jpg" alt=""></p><p>40G空间  使用了2.6G  占百分之7，实际可用有35G，感觉还是可以的。</p><p>尼玛，吃了那么多。。难怪刚才mysql无缘无故写不进去，重启系统之后导致mysql服务启动！</p><p>清理之前，请备份网站或阿网站快照，</p><p>ok，我们来接上面的话题解决这个问题，输入命令：</p><p>tmpwatch -afv 5 /tmp</p><p>不同操作系统清理命令不一样，导致网站无法访问，推荐进入FTP清理，往下底部还有其他清理方法文章。</p><p>会看到一系列删除动作，删除了日志文件这些垃圾占用空间。ok，继续查看。</p><p>现在正常了。</p><p>什么是tmpwatch命令？</p><p>tmpwatch  –  removes  files  which haven’t been accessed for a period of time</p><p>如上所言，删除指定的目录中一段时间未访问的文件。一般对于/tmp下的文件或日志文件。</p><p>参数：</p><pre><code>-a或–all 　删除任何类型的文件。-m或–mtime   根据文件被更改时间-c或–ctime     根据文件更改状态时间-M或–dirtime  根据文件夹被更改时间-f或–force 　强制删除文件或目录，其效果类似rm指令的”-f”参数。-l  不删除符号链接-U或–exclude-user=用户名或uid  排除某用户的文件-x 或–exclude=path 排除某路径-X 或–exclude-pattern=pattern 排除某规则下的路径-q或–quiet 　不显示指令执行过程。-v或–verbose 　详细显示指令执行过程。-test 　仅作测试，并不真的删除文件或目录。</code></pre><p>另外对于运维人员我要强调一下-d或–nodirs选项， 某些运维人员可能在日志文件夹中创建了子目录，默认子目录也会被删除的，使用-d参数可以避免。</p><p>另外：做好备份10天前左右最佳！</p><h1 id="CentOS7-查看其他磁盘信息"><a href="#CentOS7-查看其他磁盘信息" class="headerlink" title="CentOS7 查看其他磁盘信息"></a>CentOS7 查看其他磁盘信息</h1><p>除了上次的df -h来查看磁盘信息后我感觉要把其他的也放一下，防止我忘记了，也可以让大家看到。</p><h2 id="CentOS7-查看硬盘情况"><a href="#CentOS7-查看硬盘情况" class="headerlink" title="CentOS7 查看硬盘情况"></a>CentOS7 查看硬盘情况</h2><pre><code>lsblk 　　　　                                 查看分区和磁盘df -h 　　                                        查看空间使用情况fdisk -l 　　                                    分区工具查看分区信息cfdisk /dev/sda  　　                      查看分区blkid 　                                       　查看硬盘 label（别名）du -sh ./* 　　                                统计当前目录各文件夹大小free -h 　                                    　查看内存大小cat /proc/cpuinfo| grep &quot;cpu cores&quot;| uniq  　　查看 CPU 核心数</code></pre>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 阿里云 </tag>
            
            <tag> 服务器 </tag>
            
            <tag> 后端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>WiFi6E将开启新时代</title>
      <link href="/p/6654.html"/>
      <url>/p/6654.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>随着新一代WiFi 6进入越来越多的智能设备，基于2.4GHz和5GHz频段的WiFi 6已经为越来越多的人熟识，同时也成为了半导体行业一个热门关键词。与此同时，在美国，WiFi 6的进化版本——运行在6 GHz频段上的WiFi 6E正在进行紧锣密鼓的准备工作。上周，Broadcom发布了WiFi 6E的初步测试运行结果，其性能显著优于传统WiFi 6。我们认为，WiFi 6E将成为WiFi历史上的一个重要技术标准，它将成为许多应用的技术基石。</p></blockquote><h2 id="WiFi-6E与6GHz频段"><a href="#WiFi-6E与6GHz频段" class="headerlink" title="  WiFi 6E与6GHz频段   "></a><center>  WiFi 6E与6GHz频段   </center></h2><p>WiFi 6E是WiFi 6的增强版本（E代表Extended），WiFi 6E相比WiFi 6来说主要的不同就是在原有的频段上加入了6GHz频段（5925-7125 MHz，共1.2 GHz带宽）。<br><img src="https://gitee.com/badenough/blogImage/raw/master/img/0309.png" alt="0309"><br>全新的6 GHz频带宽度为1.2 GHz，可容纳7个160MHz的频带，或14个80MHz的频带。这对于目前拥挤的2.4GHz和5GHz来说是一个非常好的消息。在引入WiFi 6E之前，WiFi工作的2.4GHz和5GHz频带已经有一段时日，在一个典型的家庭场景中，往往有十数个设备要抢占宝贵的带宽资源。这些不同的设备对于带宽的需求各不相同，而混杂在一起使用就可能会出现对带宽要求不高的设备却抢占了对带宽需求较高的设备频带资源的情况，对于高带宽需求设备的用户体验带来不利影响。而6GHz则是一个较为空闲的频带，且这次WiFi 6E一次可提供7个连续的160MHz频带非常适合高性能应用，这就意味着使用支持WiFi 6E的系统可以将2.4GHz和5GHz的传统频带分配给对于性能要求不高的设备，而将干净而完整的6GHz频带分配给高性能需求设备，从而让不同的设备各取所需。</p><p>目前，WiFi 6E的6GHz频段授权事宜仍在进程中，美国FCC对于6GHz的官方态度较为积极，通过频带授权应属意料之中，而英国和欧盟的频谱管理机构对于6GHz的授权处理也在积极推进中。与此同时，Broadcom和Intel等厂商已经开始对于WiFi 6E进行实测。根据上周Broadcom公布的WiFi 6E实测结果，其峰值吞吐速率可达2Gbps，延迟则仅为2ms，其高吞吐率和低延迟的特性非常适合高性能应用。</p><h2 id="WiFi-6E将撬动重要应用落地"><a href="#WiFi-6E将撬动重要应用落地" class="headerlink" title="   WiFi 6E将撬动重要应用落地  "></a><center>   WiFi 6E将撬动重要应用落地  </center></h2><p>WiFi 6E之所以重要，是因为它能够撬动重要应用落地。WiFi 6 802.11ax对于上一代802.11ac的主要提升在于数据吞吐，而WiFi 6E相对于WiFi 6的提升则在数据吞吐量和延迟两个维度。而通信延迟的改善将成为WiFi 6E撬动新应用的关键。</p><p>WiFi 6E的低延迟和高数据吞吐首先将能撬动下一代多媒体应用。举例来说，Google去年发布了云端游戏平台Stadia，该平台的主要特性是游戏运行在云端，并将游戏画面通过互联网传送到玩家的屏幕上，因此玩家无需高配置主机即可获得高画质的游戏体验。Stadia计划在未来支持8K画质传送，因此对于网络的数据吞吐量要求很高；同时，为了保证游戏玩家的操作体验，玩家的网络接入延迟必须非常低，否则玩家的操作输入可能因为高网络延迟而无法实时体现在游戏中，从而损害游戏体验。Stadia只是一个例子，我们预计随着多媒体应用中用户的实时交互越来越多且内容越来越充分，对于无线网络的要求不仅仅是高数据吞吐，同时也要求低延迟。因此，WiFi 6E可望能解决目前无线网络的痛点，并撬动此类应用加速落地。</p><p>除了多媒体应用之外，另一个WiFi 6E可望能配合边缘计算撬动的工业应用。对于工业应用来说，一个较为理想的配置就是就近部署边缘计算设备，同时配合低延迟高带宽网络与工业设备完成通信和控制。举例来说，对于基于深度学习的机械臂来说，其需要的算力很大，如果把所有计算都放在机械臂本身完成，有可能会对机械臂的散热、体积甚至成本造成挑战，而如果有了WiFi 6E，则可以通过无线网络将机械臂需要计算的数据快速传回本地边缘计算服务器，服务器完成计算后再次传回机械臂来完成控制，而这一过程需要的高数据吞吐和低延迟恰恰是WiFi 6E的强项。</p><h2 id="WiFi-6E全球竞争格局"><a href="#WiFi-6E全球竞争格局" class="headerlink" title="     WiFi 6E全球竞争格局  "></a><center>     WiFi 6E全球竞争格局  </center></h2><p>如前所述，WiFi 6E有机会能撬动新的市场，因此WiFi 6E对于半导体厂商来说将是一个重要的机会。</p><p>目前虽然6GHz频段尚未得到官方授权许可，但是半导体厂商早跃跃欲试。今年二月中，Broadcom先声夺人发布了全球第一颗支持WiFi 6E的芯片组BCM4389。相比上一代WiFi 6产品BCM4375，BCM4389加入了160MHz宽频带的支持，同时其数据吞吐量则达到了2Gbps。而这些性能也在上周公布的场景实测结果中得到了验证。<br><img src="https://gitee.com/badenough/blogImage/raw/master/img/2020.jpg" alt="2020_0309.jpg"><br>除了Broadcom之外，Intel和Qualcomm也在积极布局WiFi 6E。我们预期它们的产品将在不久之后问世。除此之外，我们也预期将看到更多半导体公司发布相关的WiFi 6E产品。</p><p>对于中国的半导体厂商来说，WiFi 6E也是一个很大的机会。事实上，WiFi 6E除了频带之外其他都与WiFi 6非常类似，从技术上来说并非是新的黑科技而是主要考验工程能力，因此对于我国半导体公司来说如果能抓住先机有可能是一个能快速占领市场的机会。我们认为，WiFi 6E的重要性主要来自于它能撬动新的应用（而并非仅仅是数值的提升），因此半导体厂商需要能够对于这些新应用的需求有深入的理解，才能真正把市场打透。我们希望我国的半导体厂商能够把握住这个机会，与系统厂商一起定义出能真正利用WiFi 6E撬动能力的产品，从而在这个市场上抢占先机。</p>]]></content>
      
      
      <categories>
          
          <category> 新闻 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 新技术 </tag>
            
            <tag> 新闻 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>配置文件</title>
      <link href="/p/f31f.html"/>
      <url>/p/f31f.html</url>
      
        <content type="html"><![CDATA[<h1 id="Configuration-via-Config-File"><a href="#Configuration-via-Config-File" class="headerlink" title="Configuration via Config File"></a>Configuration via Config File</h1><p>You can use a configuration file instead of command line arguments.</p><p>Create a config file <code>/etc/shadowsocks.json.</code> Example:</p><pre><code>{    &quot;server&quot;:&quot;my_server_ip&quot;,    &quot;server_port&quot;:8388,    &quot;local_address&quot;: &quot;127.0.0.1&quot;,    &quot;local_port&quot;:1080,    &quot;password&quot;:&quot;mypassword&quot;,    &quot;timeout&quot;:300,    &quot;method&quot;:&quot;aes-256-cfb&quot;,    &quot;fast_open&quot;: false}</code></pre><p><strong>Explanation of the fields:</strong></p><table><thead><tr><th>Name</th><th>Explanation</th></tr></thead><tbody><tr><td>server</td><td>the address your server listens</td></tr><tr><td>server_port</td><td>server port</td></tr><tr><td>local_address</td><td>the address your local listens</td></tr><tr><td>local_port</td><td>local port</td></tr><tr><td>password</td><td>password used for encryption</td></tr><tr><td>timeout</td><td>in seconds</td></tr><tr><td>method</td><td>default: “aes-256-cfb”, see <a href="https://github.com/shadowsocks/shadowsocks/wiki/Encryption" target="_blank" rel="noopener">Encryption</a></td></tr><tr><td>fast_open</td><td>use <a href="https://github.com/shadowsocks/shadowsocks/wiki/TCP-Fast-Open" target="_blank" rel="noopener">TCP_FASTOPEN</a>, true / false</td></tr><tr><td>workers</td><td>number of workers, available on Unix/Linux</td></tr></tbody></table><p><strong>To run in the foreground:</strong></p><pre><code>ssserver -c /etc/shadowsocks.json</code></pre><p><strong>To run in the background:</strong></p><pre><code>ssserver -c /etc/shadowsocks.json -d startssserver -c /etc/shadowsocks.json -d stop</code></pre><h1 id="TCP-Fast-Open"><a href="#TCP-Fast-Open" class="headerlink" title="TCP Fast Open"></a>TCP Fast Open</h1><p>If both of your server and client are deployed on Linux 3.7.1 or higher, you can turn on fast_open for lower latency.</p><p>First set <code>fast_open</code> to <code>true</code> in your config.json.</p><p>Then turn on fast open on your OS temporarily:</p><pre><code>echo 3 &gt; /proc/sys/net/ipv4/tcp_fastopen</code></pre><p>To turn on fast open permanently, see [Optimizing Shadowsocks]## (/2020/03/14/vpn7/).</p><p>Notice: only <a href="/2020/03/03/vpn6/">some versions</a> support this feature.</p>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VPN </tag>
            
            <tag> 翻墙 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>质量管理笔记</title>
      <link href="/p/56569.html"/>
      <url>/p/56569.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>关于质量管理学习的报告</p></blockquote><a id="more"></a><h1 id="第一章："><a href="#第一章：" class="headerlink" title="第一章："></a>第一章：</h1><p>质量管理的笔记分析。<br>了解质量管理的理论基础；可靠性；<br>学习这门课的原因：事故，<br>21世纪是质量的世纪，时代的需求。<br>提出超严格的要求，质量科学；<br>3σ与6σ：6σ波动小；差距非常大；</p><h2 id="第一节"><a href="#第一节" class="headerlink" title="第一节"></a>第一节</h2><p>定义；发展阶段；PDCA循环方法；全面质量管理；八项基本原则；朱兰三部曲；质量管理的基础；</p><ol><li>定义：产品：过程的结果</li><li>硬件（有形）、软件（无形）、服务（无形）、流程性材料（有形）；</li><li>有时产品并不属于单一类别，有可能是四种产品类别的组合。</li><li>过程：一组将输入转化为输出的相互关联或相互作用的活动；</li><li>程序：为进行某项活动或过程所规定的途径；</li><li>程序可以形成文件，也可以不成文件。</li><li>顾客：接受产品的组织或个人；</li><li>潜在的顾客和现实的顾客；</li><li>（组织）外部的顾客和内部的顾客；</li><li>质量：一组固有特性满足要求的程度；</li><li>质量特性：产品、过程或体系与要求有关的国有特性；物理的、感官的、行为的、时间的等待，</li><li>硬件：反应顾客需求的质量特性：性能、可靠性、安全性、适应性、经济性、时间性。</li><li>性能：产品为了满足使用目的而需要具备的技术特性。</li><li>可信性：可靠性、可维修性、维修保障性。</li><li>安全性：人员伤害、财产损失、环境污染、还有慢性的、</li><li>适应性：适应外界环境变化的能力。</li><li>经济性：产品合理的寿命周期费用；设计费用、使用费用；</li><li>时间性：交货</li><li>真正质量特性：顾客对产品质量要求的质量特性；</li><li>代用质量特性：有产品标准所反映的质量特性；</li></ol><p>产品质量特性值：目标值；产品特性；损失函数；<br>数据：大量质量特性值；<br>计量：<br>计数：计件；记点。<br>统计学：概率论。</p><h2 id="第二节："><a href="#第二节：" class="headerlink" title="第二节："></a>第二节：</h2><h3 id="朱兰质量螺旋：有几个要点。"><a href="#朱兰质量螺旋：有几个要点。" class="headerlink" title="朱兰质量螺旋：有几个要点。"></a>朱兰质量螺旋：有几个要点。</h3><h3 id="PDCA循环：戴明"><a href="#PDCA循环：戴明" class="headerlink" title="PDCA循环：戴明"></a>PDCA循环：戴明</h3><ul><li>第一阶段：P计划阶段；</li><li>第二阶段：D执行阶段；</li><li>第三阶段：C检查/研究阶段；</li><li>第四阶段：A处理阶段；</li><li>大环套小环，小环保大环；</li></ul><p>例子：钢板：厚度不均匀；<br>操作员手动轧制，无法精确命中厚度；<br>以计算机计算控制扎延程序；</p><p>质量的竞争已成为国际市场竞争的焦点；<br>质量是全球追求的目标；</p><h3 id="ISO9000标准："><a href="#ISO9000标准：" class="headerlink" title="ISO9000标准："></a>ISO9000标准：</h3><p>ISO9000：2005《质量管理体系基础和术语》<br>ISO9001：2008《质量管理体系要求》<br>ISO9004：2009《质量管理体系业绩改进指南》<br>ISO19011：2011《审核管理体系的指南》</p><h3 id="特点："><a href="#特点：" class="headerlink" title="特点："></a>特点：</h3><ol><li>通用性强，适用于所有组织；</li><li>强调质量管理体系的有效性和效率；</li><li>标准要求给与组织更多的灵活性；</li><li>质量管理八项原则得到了充分体现；</li><li>鼓励过程方法，操作性强。</li><li>强调最高管理者的领导能力；</li><li>突出顾客满意和持续改进；</li><li>强调了ISO9001与ISO9004的协调一致性</li><li>较全面的考虑所有相关方的利益</li><li>提高了与环境、安全等管理体系的相容性。</li><li>知识准备、立法、宣贯、执行、监督、改进。<h1 id="第二章"><a href="#第二章" class="headerlink" title="第二章"></a>第二章</h1>企业原有质量体系识别、诊断；<br>任命管理者代表、组建ISO9000推行组织；<br>制订目标及激励措施；<br>各级人员接受必要的管理意识和质量意识训练；<br>ISO9001标准知识培训；<br>质量体系文件编写（立法）；<br>质量体系文件大面积宣传、培发试运行；<br>内审员接受训练；<br>若干次内部质量体系审核；<br>在内审基础上的管理者评审；<br>质量管理体系完善和改进；<br>申请认证；<h1 id="第三章"><a href="#第三章" class="headerlink" title="第三章"></a>第三章</h1><h2 id="排列图-分层和排列结合"><a href="#排列图-分层和排列结合" class="headerlink" title="排列图:  分层和排列结合"></a>排列图:  分层和排列结合</h2></li></ol><p>主要原因：A类原因；0%<del>80%;1</del>2个，最多3个；<br>主要原因不能过多；<br>有影响因素：B类原因<br>次要因素：C类原因；最后放在其他中；</p><p>步骤：<br>1项目的确定<br>2收集整理数据<br>3频数、累计数<br>4画图<br>5分析<br>谁为主要对象；有时候主要原因还要分类/细分；</p><h2 id="因果分析图（石川图-鱼刺图-特性因素图）："><a href="#因果分析图（石川图-鱼刺图-特性因素图）：" class="headerlink" title="因果分析图（石川图/鱼刺图/特性因素图）："></a>因果分析图（石川图/鱼刺图/特性因素图）：</h2><p>理清思路，合理画图；<br>三大要素：结果、原因、枝干<br>大原因—中原因—小原因—小小原因；<br>对原因进行审查，权衡轻重；<br>问题具体、明确、有针对性<br>集思广益<br>具体措施<br>主要原因的确定<br>关键因素的措施，排列图</p><h2 id="散布图："><a href="#散布图：" class="headerlink" title="散布图："></a>散布图：</h2><p>正相关：越靠近线强正相关<br>负相反：<br>弱相关：<br>不相关：<br>曲线相关：</p><h2 id="象限判断法："><a href="#象限判断法：" class="headerlink" title="象限判断法："></a>象限判断法：</h2><p>g线上下分开；f线左右分开；</p><h2 id="相关系数r判断法："><a href="#相关系数r判断法：" class="headerlink" title="相关系数r判断法："></a>相关系数r判断法：</h2><p>完全负相关；<br>|r|&gt;=ra(n-2)：相关；反之，不相关；<br>a为显著性水平；</p><h2 id="直方图："><a href="#直方图：" class="headerlink" title="直方图："></a>直方图：</h2><p>收集数据<br>看问题的分布情况</p>]]></content>
      
      
      <categories>
          
          <category> 质量管理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习 </tag>
            
            <tag> 课程笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>常用的几个搜书网站</title>
      <link href="/p/977c.html"/>
      <url>/p/977c.html</url>
      
        <content type="html"><![CDATA[<h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><p>一般kindle适用的格式最好是mobi、AZW、AZW3、txt，有些PDF亦可，但如果有前几项选择就尽量不选pdf（pdf不能调字体字号）。外网搜索书籍经常只能搜到pdf和epub，好像新出的kindle可以使用epub，但我的kindle是不能用的。这时候就需要用到Calibre阅读器来将epub转换成azw3了~<br>这份搜书网站包括：</p><p>1.搜书网站25个</p><p>2.电子书下载网站49个</p><p>3.电子书在线阅读网站19个</p><p>4.外文书籍网站15个</p><p>5.网上书店21个</p><blockquote><p>【Calibre使用方法】</p><ol><li>打开Calibre，点击左上角“添加书籍”；</li><li>添加书籍后，点击Calibre左上角“转换书籍”，进入新对话框；</li><li>在弹出的对话框中，点选输出格式，一般为mobi或azw3；</li><li>选择“OK”确定</li></ol></blockquote><h3 id="Library-Genesis"><a href="#Library-Genesis" class="headerlink" title="Library Genesis"></a>Library Genesis</h3><ul><li><p>网址链接：Library Genesis</p></li><li><p>搜集英文书籍强烈推荐使用Genesis</p></li><li><p>目前网站只支持英俄双语，不能使用汉语搜索</p></li><li><p>不需要VPN</p></li></ul><blockquote><p>【使用方法】</p><ol><li>在搜索框输入书名；</li><li>查看author栏找对应的作者，有些书籍会括号注明是第几版，可根据需要查看；</li><li>查看extension栏看文档类型；</li><li>如果要找某一出版社出版的书，就查看publisher栏找想要的出版社；</li><li>最右侧mirror栏即为下载链接，一般会提供5个链接，可以一个个试，很多时候1就可以下载到了。</li></ol></blockquote><h3 id="鸠摩搜书"><a href="#鸠摩搜书" class="headerlink" title="鸠摩搜书"></a>鸠摩搜书</h3><ul><li><p>网址链接：鸠摩搜书</p></li><li><p>国产小站，可搜索中英书籍，有缘还能搜到几本小语种书籍</p></li><li><p>支持中英双语搜索</p></li><li><p>由于是国产小站，文件来源基本都是网友传上百度云、微盘等平台的，质量参差不齐</p></li></ul><blockquote><p>【使用方法】</p><ol><li>在搜索框输入书籍名称</li><li>搜索框下方可选择文档类型</li><li>找到需要的文档点击下载即可</li></ol></blockquote><h3 id="虫部落快搜"><a href="#虫部落快搜" class="headerlink" title="虫部落快搜"></a>虫部落快搜</h3><ul><li><p>网址链接：虫部落快搜</p></li><li><p>搜书功能可搜索中英文书籍、学术文章等，部落还有其他强大功能</p></li><li><p>如果使用Genesis找不到想要的英文书，才使用虫部落，我的经验是虫部落的书质量总体不如Genesis</p></li><li><p>有时不需要VPN，有时需要VPN……</p></li></ul><blockquote><p>【使用方法】</p><ol><li>进入虫部落快搜后，在左侧导航栏找到“电子书”或“英文电子书”；</li><li>“电子书”可搜索中英双语书籍和文章，搜索引擎为鸠摩，数据基于国内网站；</li><li>“英文电子书”则搜索英文书籍和网站，数据基于国内国外网站，论文使用booksc搜索，书籍使用b-ok搜索；</li></ol></blockquote><h3 id="我的小书屋"><a href="#我的小书屋" class="headerlink" title="我的小书屋"></a>我的小书屋</h3><ul><li><p>网站链接：我的小书屋</p></li><li><p>国产良心小站，有很多网友捐赠的书籍</p></li><li><p>专为kindle设计</p></li><li><p>有专题，可直接按专题看看哪些书籍感兴趣</p></li></ul><h2 id="25个搜索网站"><a href="#25个搜索网站" class="headerlink" title="25个搜索网站"></a>25个搜索网站</h2><h3 id="NO-1-鸠摩搜索"><a href="#NO-1-鸠摩搜索" class="headerlink" title="NO.1 鸠摩搜索"></a>NO.1 鸠摩搜索</h3><p>链接：<a href="https://www.jiumodiary.com/" target="_blank" rel="noopener">https://www.jiumodiary.com/</a></p><h3 id="NO-2-盘搜"><a href="#NO-2-盘搜" class="headerlink" title="NO.2 盘搜"></a>NO.2 盘搜</h3><p>链接：<a href="http://www.pansou.com/" target="_blank" rel="noopener">http://www.pansou.com/</a></p><h3 id="NO-3-西林街搜索"><a href="#NO-3-西林街搜索" class="headerlink" title="NO.3 西林街搜索"></a>NO.3 西林街搜索</h3><p>链接：<a href="http://www.xilinjie.com/" target="_blank" rel="noopener">http://www.xilinjie.com/</a></p><h3 id="NO-4-胖次搜索"><a href="#NO-4-胖次搜索" class="headerlink" title="NO.4 胖次搜索"></a>NO.4 胖次搜索</h3><p>链接：<a href="http://www.panc.cc/" target="_blank" rel="noopener">http://www.panc.cc/</a></p><h3 id="NO-5-呆木瓜搜索"><a href="#NO-5-呆木瓜搜索" class="headerlink" title="NO.5 呆木瓜搜索"></a>NO.5 呆木瓜搜索</h3><p>链接： <a href="http://www.daimugua.com/" target="_blank" rel="noopener">http://www.daimugua.com/</a></p><h3 id="NO-6-盘多多搜索"><a href="#NO-6-盘多多搜索" class="headerlink" title="NO.6 盘多多搜索"></a>NO.6 盘多多搜索</h3><p>链接： panduoduo.net</p><h3 id="NO-7-盘易搜"><a href="#NO-7-盘易搜" class="headerlink" title="NO.7 盘易搜"></a>NO.7 盘易搜</h3><p>链接：panyisou.com</p><h3 id="NO-8-去转盘网"><a href="#NO-8-去转盘网" class="headerlink" title="NO.8 去转盘网"></a>NO.8 去转盘网</h3><p>链接：quzhuanpan.com</p><h3 id="NO-9-麦库搜索"><a href="#NO-9-麦库搜索" class="headerlink" title="NO.9 麦库搜索"></a>NO.9 麦库搜索</h3><p>链接： huisou.me</p><h3 id="NO-10-网盘搜"><a href="#NO-10-网盘搜" class="headerlink" title="NO.10 网盘搜"></a>NO.10 网盘搜</h3><p>链接： wangpansou.com</p><h3 id="NO-11-网盘搜搜"><a href="#NO-11-网盘搜搜" class="headerlink" title="NO.11 网盘搜搜"></a>NO.11 网盘搜搜</h3><p>链接：<a href="http://wpsoso.com/search.html" target="_blank" rel="noopener">http://wpsoso.com/search.html</a></p><h3 id="NO-12-网盘007"><a href="#NO-12-网盘007" class="headerlink" title="NO.12 网盘007"></a>NO.12 网盘007</h3><p>链接：<a href="https://wangpan007.com/" target="_blank" rel="noopener">https://wangpan007.com/</a></p><h3 id="NO-13-VeryPan"><a href="#NO-13-VeryPan" class="headerlink" title="NO.13 VeryPan"></a>NO.13 VeryPan</h3><p>链接： <a href="http://www.verypan.com/" target="_blank" rel="noopener">http://www.verypan.com/</a></p><h3 id="NO-14-盘搜搜"><a href="#NO-14-盘搜搜" class="headerlink" title="NO.14 盘搜搜"></a>NO.14 盘搜搜</h3><p>链接： <a href="http://www.pansoso.com/" target="_blank" rel="noopener">http://www.pansoso.com/</a></p><h3 id="NO-15-史莱姆搜索"><a href="#NO-15-史莱姆搜索" class="headerlink" title="NO.15 史莱姆搜索"></a>NO.15 史莱姆搜索</h3><p>链接： <a href="http://www.slimego.cn/" target="_blank" rel="noopener">http://www.slimego.cn/</a></p><h3 id="NO-16-资源猫搜索"><a href="#NO-16-资源猫搜索" class="headerlink" title="NO.16 资源猫搜索"></a>NO.16 资源猫搜索</h3><p>链接： <a href="https://www.ziyuanmao.com/#/home" target="_blank" rel="noopener">https://www.ziyuanmao.com/#/home</a></p><h3 id="NO-17-特百度"><a href="#NO-17-特百度" class="headerlink" title="NO.17 特百度"></a>NO.17 特百度</h3><p>链接： <a href="http://www.tebaidu.com/" target="_blank" rel="noopener">http://www.tebaidu.com/</a></p><h3 id="NO-18-牛推荐"><a href="#NO-18-牛推荐" class="headerlink" title="NO.18 牛推荐"></a>NO.18 牛推荐</h3><p>链接： <a href="http://www.niutuijian.com/" target="_blank" rel="noopener">http://www.niutuijian.com/</a></p><h3 id="NO-19-SO-百度"><a href="#NO-19-SO-百度" class="headerlink" title="NO.19 SO 百度"></a>NO.19 SO 百度</h3><p>链接： <a href="http://www.bdyunso.com/file-txt-new/" target="_blank" rel="noopener">http://www.bdyunso.com/file-txt-new/</a></p><h3 id="NO-20-屌丝搜"><a href="#NO-20-屌丝搜" class="headerlink" title="NO.20 屌丝搜"></a>NO.20 屌丝搜</h3><p>链接： <a href="http://www.diaosisou.org/" target="_blank" rel="noopener">http://www.diaosisou.org/</a></p><h3 id="NO-21-百度网盘之家"><a href="#NO-21-百度网盘之家" class="headerlink" title="NO.21 百度网盘之家"></a>NO.21 百度网盘之家</h3><p>链接： <a href="http://www.wowenda.com/" target="_blank" rel="noopener">http://www.wowenda.com/</a></p><h3 id="NO-22-云搜"><a href="#NO-22-云搜" class="headerlink" title="NO.22 云搜"></a>NO.22 云搜</h3><p>链接： <a href="http://www.daysou.com/" target="_blank" rel="noopener">http://www.daysou.com/</a></p><h3 id="NO-23-sov5搜索"><a href="#NO-23-sov5搜索" class="headerlink" title="NO.23 sov5搜索"></a>NO.23 sov5搜索</h3><p>链接：<a href="https://www.sov5.cn/" target="_blank" rel="noopener">https://www.sov5.cn/</a></p><h3 id="NO-24-哎哟喂啊网盘搜索"><a href="#NO-24-哎哟喂啊网盘搜索" class="headerlink" title="NO.24 哎哟喂啊网盘搜索"></a>NO.24 哎哟喂啊网盘搜索</h3><p>链接：<a href="http://www.aiyoweia.com/" target="_blank" rel="noopener">http://www.aiyoweia.com/</a></p><h3 id="NO-25-Pan115"><a href="#NO-25-Pan115" class="headerlink" title="NO.25 Pan115"></a>NO.25 Pan115</h3><p>链接：<a href="http://www.pan115.com/" target="_blank" rel="noopener">http://www.pan115.com/</a></p><h2 id="二、49个电子书下载网站"><a href="#二、49个电子书下载网站" class="headerlink" title="二、49个电子书下载网站"></a>二、49个电子书下载网站</h2><h3 id="NO1-威锋网论坛"><a href="#NO1-威锋网论坛" class="headerlink" title="NO1. 威锋网论坛"></a>NO1. 威锋网论坛</h3><p>链接：<a href="http://bbs.feng.com/thread-htm-fid-224.html" target="_blank" rel="noopener">http://bbs.feng.com/thread-htm-fid-224.html</a></p><h3 id="NO2-Sokindle（网站）"><a href="#NO2-Sokindle（网站）" class="headerlink" title="NO2.Sokindle（网站）"></a>NO2.Sokindle（网站）</h3><p>链接：<a href="http://www.sokindle.com/" target="_blank" rel="noopener">http://www.sokindle.com/</a></p><h3 id="NO3-好读（网站）"><a href="#NO3-好读（网站）" class="headerlink" title="NO3.好读（网站）"></a>NO3.好读（网站）</h3><p>链接： <a href="http://www.haodoo.net/" target="_blank" rel="noopener">http://www.haodoo.net/</a></p><h3 id="NO4-Readfree（网站）"><a href="#NO4-Readfree（网站）" class="headerlink" title="NO4. Readfree（网站）"></a>NO4. Readfree（网站）</h3><p>链接：<a href="http://readfree.me/" target="_blank" rel="noopener">http://readfree.me/</a></p><h3 id="NO5-Kindle推（网站）"><a href="#NO5-Kindle推（网站）" class="headerlink" title="NO5. Kindle推（网站）"></a>NO5. Kindle推（网站）</h3><p>链接：kindlepush.com</p><h3 id="NO6-azw3吧"><a href="#NO6-azw3吧" class="headerlink" title="NO6.azw3吧"></a>NO6.azw3吧</h3><p>链接：tieba.baidu.com/f?kw=azw3</p><h3 id="NO7-缤闹-Kindle-论坛"><a href="#NO7-缤闹-Kindle-论坛" class="headerlink" title="NO7. 缤闹 Kindle 论坛"></a>NO7. 缤闹 Kindle 论坛</h3><p>链接：<a href="http://binnao.com/" target="_blank" rel="noopener">http://binnao.com/</a></p><h3 id="NO8-Hi-PDA（论坛）"><a href="#NO8-Hi-PDA（论坛）" class="headerlink" title="NO8.Hi-PDA（论坛）"></a>NO8.Hi-PDA（论坛）</h3><p>链接：<a href="http://www.hi-pda.com/forum" target="_blank" rel="noopener">http://www.hi-pda.com/forum</a></p><h3 id="NO9-书伴（网站）"><a href="#NO9-书伴（网站）" class="headerlink" title="NO9. 书伴（网站）"></a>NO9. 书伴（网站）</h3><p>链接：bookfere.com</p><h3 id="NO-10-西东网"><a href="#NO-10-西东网" class="headerlink" title="NO.10 西东网"></a>NO.10 西东网</h3><p>链接： <a href="http://xidong.net/" target="_blank" rel="noopener">http://xidong.net/</a></p><h3 id="NO-11-58学习资料库"><a href="#NO-11-58学习资料库" class="headerlink" title="NO.11 58学习资料库"></a>NO.11 58学习资料库</h3><p>链接： <a href="http://www.58xuexi.com/" target="_blank" rel="noopener">http://www.58xuexi.com/</a></p><h3 id="NO-12-学习资料库"><a href="#NO-12-学习资料库" class="headerlink" title="NO.12 学习资料库"></a>NO.12 学习资料库</h3><p>链接： <a href="http://www.xuexi111.com/" target="_blank" rel="noopener">http://www.xuexi111.com/</a></p><h3 id="NO-13-敏学网"><a href="#NO-13-敏学网" class="headerlink" title="NO.13 敏学网"></a>NO.13 敏学网</h3><p>链接： <a href="http://www.minxue.net/" target="_blank" rel="noopener">http://www.minxue.net/</a></p><h3 id="NO-14-学兔兔"><a href="#NO-14-学兔兔" class="headerlink" title="NO.14 学兔兔"></a>NO.14 学兔兔</h3><p>链接： <a href="http://www.bzfxw.com/" target="_blank" rel="noopener">http://www.bzfxw.com/</a></p><h3 id="NO-15-若蓝格"><a href="#NO-15-若蓝格" class="headerlink" title="NO.15 若蓝格"></a>NO.15 若蓝格</h3><p>链接： <a href="http://www.ifblue.net/" target="_blank" rel="noopener">http://www.ifblue.net/</a></p><h3 id="NO-16-PDF之家"><a href="#NO-16-PDF之家" class="headerlink" title="NO.16 PDF之家"></a>NO.16 PDF之家</h3><p>链接：<a href="http://www.pdfzj.com/" target="_blank" rel="noopener">http://www.pdfzj.com/</a></p><h3 id="NO-17-易读kindle"><a href="#NO-17-易读kindle" class="headerlink" title="NO.17 易读kindle"></a>NO.17 易读kindle</h3><p>链接：<a href="http://www.yidukindle.com/" target="_blank" rel="noopener">http://www.yidukindle.com/</a></p><h3 id="NO-18-书荒部落"><a href="#NO-18-书荒部落" class="headerlink" title="NO.18 书荒部落"></a>NO.18 书荒部落</h3><p>链接： <a href="http://noveless.com" target="_blank" rel="noopener">http://noveless.com</a></p><h3 id="NO-19-iDesk"><a href="#NO-19-iDesk" class="headerlink" title="NO.19 iDesk"></a>NO.19 iDesk</h3><p>链接： <a href="http://idesks.me" target="_blank" rel="noopener">http://idesks.me</a></p><h3 id="NO-20-周读"><a href="#NO-20-周读" class="headerlink" title="NO.20 周读"></a>NO.20 周读</h3><p>链接：<a href="http://www.ireadweek.com" target="_blank" rel="noopener">http://www.ireadweek.com</a></p><h3 id="NO-21-爱下电子书"><a href="#NO-21-爱下电子书" class="headerlink" title="NO.21 爱下电子书"></a>NO.21 爱下电子书</h3><p>链接： <a href="http://www.ixdzs.com" target="_blank" rel="noopener">http://www.ixdzs.com</a></p><h3 id="NO-22-一本好书"><a href="#NO-22-一本好书" class="headerlink" title="NO.22 一本好书"></a>NO.22 一本好书</h3><p>链接： <a href="http://www.hao-shu.com" target="_blank" rel="noopener">http://www.hao-shu.com</a></p><h3 id="NO-23-知轩藏书（精校）"><a href="#NO-23-知轩藏书（精校）" class="headerlink" title="NO.23 知轩藏书（精校）"></a>NO.23 知轩藏书（精校）</h3><p>链接：<a href="http://www.zxcs8.com/" target="_blank" rel="noopener">http://www.zxcs8.com/</a></p><h3 id="NO-24-我爱读电子书"><a href="#NO-24-我爱读电子书" class="headerlink" title="NO.24 我爱读电子书"></a>NO.24 我爱读电子书</h3><p>链接： <a href="http://www.woaidu.org/" target="_blank" rel="noopener">http://www.woaidu.org/</a></p><h3 id="NO-25-我要读PDF"><a href="#NO-25-我要读PDF" class="headerlink" title="NO.25 我要读PDF"></a>NO.25 我要读PDF</h3><p>链接：<a href="http://www.51dupdf.com/" target="_blank" rel="noopener">http://www.51dupdf.com/</a></p><h3 id="NO-26-so-kindle"><a href="#NO-26-so-kindle" class="headerlink" title="NO.26 so-kindle"></a>NO.26 so-kindle</h3><p>链接：<a href="https://www.so-kindle.com/" target="_blank" rel="noopener">https://www.so-kindle.com/</a></p><h3 id="NO-27-掌上书苑"><a href="#NO-27-掌上书苑" class="headerlink" title="NO. 27 掌上书苑"></a>NO. 27 掌上书苑</h3><p>链接： <a href="https://www.soepub.com/store" target="_blank" rel="noopener">https://www.soepub.com/store</a></p><h3 id="NO-28-世界数字图书馆"><a href="#NO-28-世界数字图书馆" class="headerlink" title="NO.28 世界数字图书馆"></a>NO.28 世界数字图书馆</h3><p>链接： <a href="https://www.wdl.org/zh/" target="_blank" rel="noopener">https://www.wdl.org/zh/</a></p><h3 id="NO-29-阡陌小筑"><a href="#NO-29-阡陌小筑" class="headerlink" title="NO.29 阡陌小筑"></a>NO.29 阡陌小筑</h3><p>链接： <a href="http://www.1000qm.com" target="_blank" rel="noopener">http://www.1000qm.com</a></p><h3 id="NO-30-时光电子书"><a href="#NO-30-时光电子书" class="headerlink" title="NO.30 时光电子书"></a>NO.30 时光电子书</h3><p>链接： <a href="http://www.60book.com" target="_blank" rel="noopener">http://www.60book.com</a></p><h3 id="NO-31飞库网"><a href="#NO-31飞库网" class="headerlink" title="NO.31飞库网"></a>NO.31飞库网</h3><p>链接： <a href="http://www.feiku.com/" target="_blank" rel="noopener">http://www.feiku.com/</a></p><h3 id="NO-32-百度文库"><a href="#NO-32-百度文库" class="headerlink" title="NO.32 百度文库"></a>NO.32 百度文库</h3><p>链接： <a href="http://wenku.baidu.com/" target="_blank" rel="noopener">http://wenku.baidu.com/</a></p><h3 id="NO-33-百度网盘"><a href="#NO-33-百度网盘" class="headerlink" title="NO.33 百度网盘"></a>NO.33 百度网盘</h3><p>链接： <a href="https://pan.baidu.com/" target="_blank" rel="noopener">https://pan.baidu.com/</a></p><h3 id="NO-34-新浪微盘"><a href="#NO-34-新浪微盘" class="headerlink" title="NO. 34 新浪微盘"></a>NO. 34 新浪微盘</h3><p>链接： <a href="http://vdisk.weibo.com/" target="_blank" rel="noopener">http://vdisk.weibo.com/</a></p><h3 id="NO-35-爱问共享资料"><a href="#NO-35-爱问共享资料" class="headerlink" title="NO.35 爱问共享资料"></a>NO.35 爱问共享资料</h3><p>链接： <a href="http://ishare.iask.sina.com.cn/" target="_blank" rel="noopener">http://ishare.iask.sina.com.cn/</a></p><h3 id="NO-36-逛电驴"><a href="#NO-36-逛电驴" class="headerlink" title="NO.36 逛电驴"></a>NO.36 逛电驴</h3><p>链接： <a href="http://verycd.gdajie.com/book/computer/page" target="_blank" rel="noopener">http://verycd.gdajie.com/book/computer/page</a></p><h3 id="NO-37-书多多"><a href="#NO-37-书多多" class="headerlink" title="NO.37 书多多"></a>NO.37 书多多</h3><p>链接： <a href="http://www.shuduoduo.me/" target="_blank" rel="noopener">http://www.shuduoduo.me/</a></p><h3 id="NO-38-久久小说下载网"><a href="#NO-38-久久小说下载网" class="headerlink" title="NO.38 久久小说下载网"></a>NO.38 久久小说下载网</h3><p>链接： <a href="http://www.jjxsw.com/" target="_blank" rel="noopener">http://www.jjxsw.com/</a></p><h3 id="NO-39-爱奇电子书"><a href="#NO-39-爱奇电子书" class="headerlink" title="NO.39 爱奇电子书"></a>NO.39 爱奇电子书</h3><p>链接： <a href="http://www.aqtxt.com/" target="_blank" rel="noopener">http://www.aqtxt.com/</a></p><h3 id="NO-40-无限小说网"><a href="#NO-40-无限小说网" class="headerlink" title="NO.40 无限小说网"></a>NO.40 无限小说网</h3><p>链接： <a href="http://www.txt53.com/" target="_blank" rel="noopener">http://www.txt53.com/</a></p><h3 id="NO-41-海量电子书"><a href="#NO-41-海量电子书" class="headerlink" title="NO.41 海量电子书"></a>NO.41 海量电子书</h3><p>链接： <a href="http://www.ebuk.cn/" target="_blank" rel="noopener">http://www.ebuk.cn/</a></p><h3 id="NO-42-书快"><a href="#NO-42-书快" class="headerlink" title="NO.42 书快"></a>NO.42 书快</h3><p>链接： <a href="http://www.shukuai123.com/forum.php" target="_blank" rel="noopener">http://www.shukuai123.com/forum.php</a></p><h3 id="NO-43-我是TXT电子书"><a href="#NO-43-我是TXT电子书" class="headerlink" title="NO.43 我是TXT电子书"></a>NO.43 我是TXT电子书</h3><p>链接： <a href="http://www.iamtxt.com/" target="_blank" rel="noopener">http://www.iamtxt.com/</a></p><h3 id="NO-44书格（古籍可下载）"><a href="#NO-44书格（古籍可下载）" class="headerlink" title="NO.44书格（古籍可下载）"></a>NO.44书格（古籍可下载）</h3><p>链接： <a href="https://shuge.org/" target="_blank" rel="noopener">https://shuge.org/</a></p><h3 id="NO-45-Vol-moe-漫画资源"><a href="#NO-45-Vol-moe-漫画资源" class="headerlink" title="NO.45 Vol.moe 漫画资源"></a>NO.45 Vol.moe 漫画资源</h3><p>链接： <a href="http://vol.moe/" target="_blank" rel="noopener">http://vol.moe/</a></p><h3 id="NO-46凡人大传（多古籍）"><a href="#NO-46凡人大传（多古籍）" class="headerlink" title="NO.46凡人大传（多古籍）"></a>NO.46凡人大传（多古籍）</h3><p>链接： <a href="http://www.fanren8.com/index.php" target="_blank" rel="noopener">http://www.fanren8.com/index.php</a></p><h3 id="NO-47-SF轻小说"><a href="#NO-47-SF轻小说" class="headerlink" title="NO.47 SF轻小说"></a>NO.47 SF轻小说</h3><p>链接： <a href="http://book.sfacg.com/" target="_blank" rel="noopener">http://book.sfacg.com/</a></p><h3 id="NO-48青年文摘"><a href="#NO-48青年文摘" class="headerlink" title="NO.48青年文摘"></a>NO.48青年文摘</h3><p>链接： <a href="http://www.qnwz.cn/html/ebookdown/" target="_blank" rel="noopener">http://www.qnwz.cn/html/ebookdown/</a></p><h3 id="NO-49-北半球"><a href="#NO-49-北半球" class="headerlink" title="NO.49 北半球"></a>NO.49 北半球</h3><p>链接： <a href="https://www.markbj.com/book/" target="_blank" rel="noopener">https://www.markbj.com/book/</a></p><h2 id="19个书籍在线阅读网站"><a href="#19个书籍在线阅读网站" class="headerlink" title="19个书籍在线阅读网站"></a>19个书籍在线阅读网站</h2><h3 id="NO1-红袖添香"><a href="#NO1-红袖添香" class="headerlink" title="NO1. 红袖添香"></a>NO1. 红袖添香</h3><p>链接：<a href="https://www.hongxiu.com/" target="_blank" rel="noopener">https://www.hongxiu.com/</a></p><h3 id="NO2-小说阅读网"><a href="#NO2-小说阅读网" class="headerlink" title="NO2. 小说阅读网"></a>NO2. 小说阅读网</h3><p>链接：<a href="https://www.readnovel.com/" target="_blank" rel="noopener">https://www.readnovel.com/</a></p><h3 id="NO3-起点中文网"><a href="#NO3-起点中文网" class="headerlink" title="NO3. 起点中文网"></a>NO3. 起点中文网</h3><p>链接：<a href="http://www.qidian.com/" target="_blank" rel="noopener">http://www.qidian.com/</a></p><h3 id="NO4-潇湘书院"><a href="#NO4-潇湘书院" class="headerlink" title="NO4. 潇湘书院"></a>NO4. 潇湘书院</h3><p>链接：<a href="http://www.xxsy.net/" target="_blank" rel="noopener">http://www.xxsy.net/</a></p><h3 id="NO5-晋江文学城"><a href="#NO5-晋江文学城" class="headerlink" title="NO5. 晋江文学城"></a>NO5. 晋江文学城</h3><p>链接：<a href="http://www.jjwxc.net/" target="_blank" rel="noopener">http://www.jjwxc.net/</a></p><h3 id="NO6-逐浪文学"><a href="#NO6-逐浪文学" class="headerlink" title="NO6. 逐浪文学"></a>NO6. 逐浪文学</h3><p>链接：<a href="http://www.zhulang.com/" target="_blank" rel="noopener">http://www.zhulang.com/</a></p><h3 id="NO7-铁血书库"><a href="#NO7-铁血书库" class="headerlink" title="NO7. 铁血书库"></a>NO7. 铁血书库</h3><p>链接：<a href="http://book.tiexue.net/" target="_blank" rel="noopener">http://book.tiexue.net/</a></p><h3 id="NO8-幻剑书盟"><a href="#NO8-幻剑书盟" class="headerlink" title="NO8. 幻剑书盟"></a>NO8. 幻剑书盟</h3><p>链接： <a href="http://hjsm.tom.com/" target="_blank" rel="noopener">http://hjsm.tom.com/</a></p><h3 id="NO9-悠读文学"><a href="#NO9-悠读文学" class="headerlink" title="NO9. 悠读文学"></a>NO9. 悠读文学</h3><p>链接：<a href="http://www.yooread.com/" target="_blank" rel="noopener">http://www.yooread.com/</a></p><h3 id="NO10-木木文摘"><a href="#NO10-木木文摘" class="headerlink" title="NO10. 木木文摘"></a>NO10. 木木文摘</h3><p>链接：<a href="http://www.85nian.net/" target="_blank" rel="noopener">http://www.85nian.net/</a></p><h3 id="NO11-中华武侠网"><a href="#NO11-中华武侠网" class="headerlink" title="NO11. 中华武侠网"></a>NO11. 中华武侠网</h3><p>链接：<a href="http://www.zhonghuawuxia.com/" target="_blank" rel="noopener">http://www.zhonghuawuxia.com/</a></p><h3 id="NO12-努努书坊"><a href="#NO12-努努书坊" class="headerlink" title="NO12. 努努书坊"></a>NO12. 努努书坊</h3><p>链接：<a href="http://wwwcom/" target="_blank" rel="noopener">http://wwwcom/</a></p><h3 id="NO13-追书神器"><a href="#NO13-追书神器" class="headerlink" title="NO13. 追书神器"></a>NO13. 追书神器</h3><p>链接：<a href="http://www.zhuishushenqi.com/" target="_blank" rel="noopener">http://www.zhuishushenqi.com/</a></p><h3 id="NO14-99藏书网"><a href="#NO14-99藏书网" class="headerlink" title="NO14. 99藏书网"></a>NO14. 99藏书网</h3><p>链接：<a href="http://99lib.net/index.php" target="_blank" rel="noopener">http://99lib.net/index.php</a></p><h3 id="NO15-东里书斋（古籍）"><a href="#NO15-东里书斋（古籍）" class="headerlink" title="NO15. 东里书斋（古籍）"></a>NO15. 东里书斋（古籍）</h3><p>链接：<a href="http://www.donglishuzhai.net/" target="_blank" rel="noopener">http://www.donglishuzhai.net/</a></p><h3 id="NO16-漢川草廬（古籍）"><a href="#NO16-漢川草廬（古籍）" class="headerlink" title="NO16.漢川草廬（古籍）"></a>NO16.漢川草廬（古籍）</h3><p>链接：<a href="http://www.sidneyluo.net/index.html" target="_blank" rel="noopener">http://www.sidneyluo.net/index.html</a></p><h3 id="NO17-17K小说网"><a href="#NO17-17K小说网" class="headerlink" title="NO17.17K小说网"></a>NO17.17K小说网</h3><p>链接：<a href="http://wwwcom/" target="_blank" rel="noopener">http://wwwcom/</a></p><h3 id="NO18-学术前沿在线"><a href="#NO18-学术前沿在线" class="headerlink" title="NO18.学术前沿在线"></a>NO18.学术前沿在线</h3><p>链接：<a href="http://academic.hep.com.cn/skld/CN/skld/home.shtml" target="_blank" rel="noopener">http://academic.hep.com.cn/skld/CN/skld/home.shtml</a></p><h3 id="NO19-在线读书"><a href="#NO19-在线读书" class="headerlink" title="NO19.在线读书"></a>NO19.在线读书</h3><p>链接：<a href="http://www.xiexingcun.com/wenxueyuedu/index.html" target="_blank" rel="noopener">http://www.xiexingcun.com/wenxueyuedu/index.html</a></p><h2 id="15个外文书籍网站"><a href="#15个外文书籍网站" class="headerlink" title="15个外文书籍网站"></a>15个外文书籍网站</h2><h3 id="NO1-Project-Gutenberg：（英文书籍）"><a href="#NO1-Project-Gutenberg：（英文书籍）" class="headerlink" title="NO1. Project Gutenberg：（英文书籍）"></a>NO1. Project Gutenberg：（英文书籍）</h3><p>链接：<a href="http://www.gutenberg.org/" target="_blank" rel="noopener">http://www.gutenberg.org/</a></p><h3 id="NO2-manybooks（外文书籍）"><a href="#NO2-manybooks（外文书籍）" class="headerlink" title="NO2. manybooks（外文书籍）"></a>NO2. manybooks（外文书籍）</h3><p>链接：<a href="http://manybooks.net/" target="_blank" rel="noopener">http://manybooks.net/</a></p><h3 id="NO3-Free-Ebooks-（外文书籍）"><a href="#NO3-Free-Ebooks-（外文书籍）" class="headerlink" title="NO3. Free-Ebooks （外文书籍）"></a>NO3. Free-Ebooks （外文书籍）</h3><p>链接：<a href="https://www.free-ebooks.net/" target="_blank" rel="noopener">https://www.free-ebooks.net/</a></p><h3 id="NO4-en8848-（外文书籍）"><a href="#NO4-en8848-（外文书籍）" class="headerlink" title="NO4. en8848 （外文书籍）"></a>NO4. en8848 （外文书籍）</h3><p>链接：<a href="http://www.en8848.com.cn/Soft/" target="_blank" rel="noopener">http://www.en8848.com.cn/Soft/</a></p><h3 id="NO5-Allitebooks-（外文书籍）"><a href="#NO5-Allitebooks-（外文书籍）" class="headerlink" title="NO5. Allitebooks.（外文书籍）"></a>NO5. Allitebooks.（外文书籍）</h3><p>链接：<a href="http://www.allitebooks.com/" target="_blank" rel="noopener">http://www.allitebooks.com/</a></p><h3 id="NO6-pdf-magazine英文杂志"><a href="#NO6-pdf-magazine英文杂志" class="headerlink" title="NO6. pdf-magazine英文杂志"></a>NO6. pdf-magazine英文杂志</h3><p>链接：<a href="https://pdf-magazine-download.com/" target="_blank" rel="noopener">https://pdf-magazine-download.com/</a></p><h3 id="NO7-七彩英语（外文书籍）"><a href="#NO7-七彩英语（外文书籍）" class="headerlink" title="NO7. 七彩英语（外文书籍）"></a>NO7. 七彩英语（外文书籍）</h3><p>链接：<a href="http://www.qcenglish.com/" target="_blank" rel="noopener">http://www.qcenglish.com/</a></p><h3 id="NO8-bookboon-（外文书籍）"><a href="#NO8-bookboon-（外文书籍）" class="headerlink" title="NO8 bookboon （外文书籍）"></a>NO8 bookboon （外文书籍）</h3><p>链接：<a href="http://bookboon.com/en" target="_blank" rel="noopener">http://bookboon.com/en</a></p><h3 id="NO9-EpubBooks：（英文书籍）"><a href="#NO9-EpubBooks：（英文书籍）" class="headerlink" title="NO9. EpubBooks：（英文书籍）"></a>NO9. EpubBooks：（英文书籍）</h3><p>链接：<a href="https://www.epubbooks.com/" target="_blank" rel="noopener">https://www.epubbooks.com/</a></p><h3 id="NO10-BookDL：（英文书籍）"><a href="#NO10-BookDL：（英文书籍）" class="headerlink" title="NO10. BookDL：（英文书籍）"></a>NO10. BookDL：（英文书籍）</h3><p>链接：<a href="https://bookdl.com/" target="_blank" rel="noopener">https://bookdl.com/</a></p><h3 id="NO11-Gitbook（英文书籍）"><a href="#NO11-Gitbook（英文书籍）" class="headerlink" title="NO11. Gitbook（英文书籍）"></a>NO11. Gitbook（英文书籍）</h3><p>链接：<a href="https://www.gitbook.com/" target="_blank" rel="noopener">https://www.gitbook.com/</a></p><h3 id="NO12-Baen-Free-Library：（英文书籍）"><a href="#NO12-Baen-Free-Library：（英文书籍）" class="headerlink" title="NO12. Baen Free Library：（英文书籍）"></a>NO12. Baen Free Library：（英文书籍）</h3><p>链接：<a href="http://www.baen.com/" target="_blank" rel="noopener">http://www.baen.com/</a></p><h3 id="NO13-hIt-ebooks-（英文版）"><a href="#NO13-hIt-ebooks-（英文版）" class="headerlink" title="NO13. hIt-ebooks （英文版）"></a>NO13. hIt-ebooks （英文版）</h3><p>链接：<a href="http://www.it-ebooks.info/" target="_blank" rel="noopener">http://www.it-ebooks.info/</a></p><h3 id="NO14-Libgen-（英文版）"><a href="#NO14-Libgen-（英文版）" class="headerlink" title="NO14. Libgen （英文版）"></a>NO14. Libgen （英文版）</h3><p>链接：<a href="http://libgen.io/" target="_blank" rel="noopener">http://libgen.io/</a></p><h3 id="NO15-国外儿童绘本大全下载网"><a href="#NO15-国外儿童绘本大全下载网" class="headerlink" title="NO15. 国外儿童绘本大全下载网"></a>NO15. 国外儿童绘本大全下载网</h3><p>链接：<a href="http://www.childrensbooksonline.org/" target="_blank" rel="noopener">http://www.childrensbooksonline.org/</a></p><h2 id="21个网上书店"><a href="#21个网上书店" class="headerlink" title="21个网上书店"></a>21个网上书店</h2><h3 id="NO1-亚马逊"><a href="#NO1-亚马逊" class="headerlink" title="NO1. 亚马逊"></a>NO1. 亚马逊</h3><p>链接：<a href="https://www.amazon.cn" target="_blank" rel="noopener">https://www.amazon.cn</a></p><h3 id="NO2-当当读书"><a href="#NO2-当当读书" class="headerlink" title="NO2. 当当读书"></a>NO2. 当当读书</h3><p>链接：<a href="http://e.dangdang.com/" target="_blank" rel="noopener">http://e.dangdang.com/</a></p><h3 id="NO3-京东书店"><a href="#NO3-京东书店" class="headerlink" title="NO3. 京东书店"></a>NO3. 京东书店</h3><p>链接：<a href="http://book.jd.com/" target="_blank" rel="noopener">http://book.jd.com/</a></p><h3 id="NO4-孔夫子旧书网"><a href="#NO4-孔夫子旧书网" class="headerlink" title="NO4. 孔夫子旧书网"></a>NO4. 孔夫子旧书网</h3><p>链接：<a href="http://book.kongfz.com/" target="_blank" rel="noopener">http://book.kongfz.com/</a></p><h3 id="NO5-多看阅读"><a href="#NO5-多看阅读" class="headerlink" title="NO5. 多看阅读"></a>NO5. 多看阅读</h3><p>链接： <a href="http://www.duokan.com/" target="_blank" rel="noopener">http://www.duokan.com/</a></p><h3 id="NO6-中国图书网"><a href="#NO6-中国图书网" class="headerlink" title="NO6. 中国图书网"></a>NO6. 中国图书网</h3><p>链接：<a href="http://www.bookschina.com/" target="_blank" rel="noopener">http://www.bookschina.com/</a></p><h3 id="NO7-china-pub"><a href="#NO7-china-pub" class="headerlink" title="NO7. china-pub"></a>NO7. china-pub</h3><p>链接：<a href="http://www.china-pub.com/" target="_blank" rel="noopener">http://www.china-pub.com/</a></p><h3 id="NO8-文轩网"><a href="#NO8-文轩网" class="headerlink" title="NO8. 文轩网"></a>NO8. 文轩网</h3><p>链接：<a href="http://www.winxuan.com/" target="_blank" rel="noopener">http://www.winxuan.com/</a></p><h3 id="NO9-淘书网"><a href="#NO9-淘书网" class="headerlink" title="NO9. 淘书网"></a>NO9. 淘书网</h3><p>链接： <a href="http://www.taoshu.com/" target="_blank" rel="noopener">http://www.taoshu.com/</a></p><h3 id="NO10-博库网"><a href="#NO10-博库网" class="headerlink" title="NO10. 博库网"></a>NO10. 博库网</h3><p>链接： <a href="http://www.bookuu.com/" target="_blank" rel="noopener">http://www.bookuu.com/</a></p><h3 id="NO11-中关村图书大厦"><a href="#NO11-中关村图书大厦" class="headerlink" title="NO11. 中关村图书大厦"></a>NO11. 中关村图书大厦</h3><p>链接：<a href="http://www.zgcbb.com/" target="_blank" rel="noopener">http://www.zgcbb.com/</a></p><h3 id="NO12-广州购书中心"><a href="#NO12-广州购书中心" class="headerlink" title="NO12. 广州购书中心"></a>NO12. 广州购书中心</h3><p>链接：<a href="http://www.gg1994.com/" target="_blank" rel="noopener">http://www.gg1994.com/</a></p><h3 id="NO13-蔚蓝网"><a href="#NO13-蔚蓝网" class="headerlink" title="NO13. 蔚蓝网"></a>NO13. 蔚蓝网</h3><p>链接：<a href="http://www.wl.cn/c1" target="_blank" rel="noopener">http://www.wl.cn/c1</a></p><h3 id="NO14-金牌自考书店"><a href="#NO14-金牌自考书店" class="headerlink" title="NO14. 金牌自考书店"></a>NO14. 金牌自考书店</h3><p>链接：<a href="http://www.zikaoshu.com/" target="_blank" rel="noopener">http://www.zikaoshu.com/</a></p><h3 id="NO15-苏宁易购书城"><a href="#NO15-苏宁易购书城" class="headerlink" title="NO15. 苏宁易购书城"></a>NO15. 苏宁易购书城</h3><p>链接：<a href="http://book.suning.com/" target="_blank" rel="noopener">http://book.suning.com/</a></p><h3 id="NO16-商务印书馆"><a href="#NO16-商务印书馆" class="headerlink" title="NO16. 商务印书馆"></a>NO16. 商务印书馆</h3><p>链接：<a href="http://www.cp1897.com.hk/" target="_blank" rel="noopener">http://www.cp1897.com.hk/</a></p><h3 id="NO17-阶梯图书网"><a href="#NO17-阶梯图书网" class="headerlink" title="NO17. 阶梯图书网"></a>NO17. 阶梯图书网</h3><p><a href="http://www.jieti.com/" target="_blank" rel="noopener">http://www.jieti.com/</a></p><h3 id="NO18-希望书店"><a href="#NO18-希望书店" class="headerlink" title="NO18. 希望书店"></a>NO18. 希望书店</h3><p>链接：<a href="http://www.hopebook.net/" target="_blank" rel="noopener">http://www.hopebook.net/</a></p><h3 id="NO19-新东方图书网"><a href="#NO19-新东方图书网" class="headerlink" title="NO19. 新东方图书网"></a>NO19. 新东方图书网</h3><p>链接：<a href="http://www.dogwood.com.cn/" target="_blank" rel="noopener">http://www.dogwood.com.cn/</a></p><h3 id="NO20-澜瑞外文网上书店"><a href="#NO20-澜瑞外文网上书店" class="headerlink" title="NO20. 澜瑞外文网上书店"></a>NO20. 澜瑞外文网上书店</h3><p>链接：<a href="https://www.lanree.com/" target="_blank" rel="noopener">https://www.lanree.com/</a></p><h3 id="NO21-百度阅读"><a href="#NO21-百度阅读" class="headerlink" title="NO21. 百度阅读"></a>NO21. 百度阅读</h3><p>链接：<a href="https://yuedu.baidu.com/" target="_blank" rel="noopener">https://yuedu.baidu.com/</a></p><h2 id="个人觉得能够提高文学素养的书："><a href="#个人觉得能够提高文学素养的书：" class="headerlink" title="个人觉得能够提高文学素养的书："></a>个人觉得能够提高文学素养的书：</h2><p>谈美书简、谈修养、红楼梦诗词曲赋全解、龙应台作品集、人间词话（一本小小书）</p><h3 id="小说："><a href="#小说：" class="headerlink" title="小说："></a>小说：</h3><p>八十天环游地球、百年孤独、海底两万里、霍乱时期的爱情、嫌疑人X的献身、三剑客、小王子、北京折叠、基督山伯爵、朗读者</p><h3 id="其他："><a href="#其他：" class="headerlink" title="其他："></a>其他：</h3><p>旧制度与大革命：史学类）</p><p>我不知道该说什么，关于死亡还是爱情：纪实类</p><p>乡土中国：中国学</p><p>英译中国现代散文选：中英双语对照，所选文章均为现代优秀散文，许多文章曾经学过</p><h2 id="写在后面"><a href="#写在后面" class="headerlink" title="写在后面"></a>写在后面</h2><p>找资源很容易，读书可不容易。下载了这么多书，可不能放在kindle里不去阅读~</p><p>挑一个清晨或午后，坐在窗前读一本书吧。</p><p>读国文经典最能提高文学素养。四书五经老则老矣，几千年流传下来的东西有它值得学习的道理。汉语文章的魅力就在于引经据典，如果写东西不会使用、化用前人文章，且不说它究竟写得好不好，从感官上来看就“不像”一篇好文章。当然，科技文这一类除外。</p><p>能耐着性子读一读《诗经》、《离骚》是最好的。唐诗宋词也必不可少。如果元曲也能深入学习，那没人能写出比你更好的作文了。</p><p>好记性不如烂笔头，我看书的时候很喜欢摘抄。一是非常喜欢那些句子，恨不得刻进眼睛里、印在脑子里；二是写字是一个非常享受的过程，摘抄的时候自己设计笔记本版面，好像自己写了一本书一样，非常有趣。</p><p>国文就是在读书、摘抄、写字中学习的。读得多了，自然就会写了。我们不能搬运前人的写法，但是可以化用前人的文章。人家写了一首诗，我们就可以从这首诗拓展，把它变成一个故事。人家写了一个故事，我们就可以缩缩减减，用几行看起来像诗一样的句子概括起来，一对仗、一押韵，就显得很厉害了（小声）。</p><p>而英文呢，我觉得不需要太在意生词，只要一句话、一段话、一个章节的大概意思能够明白，只要合上书之后能够大致复述故事内容，这次阅读就是成功的。当然，有心思在笔记本上记下生词是最好的，只是不要把“记单词”变成阅读的目的。</p><p>书是死的，希望你可以把它读活~</p>]]></content>
      
      
      <categories>
          
          <category> 学习资料库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 搜书网站 </tag>
            
            <tag> 电子书 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>除了Halo，个人博客网站还有6个免费开源博客程序CMS系统</title>
      <link href="/p/6c00.html"/>
      <url>/p/6c00.html</url>
      
        <content type="html"><![CDATA[<h2 id="上次说过的Halo"><a href="#上次说过的Halo" class="headerlink" title="上次说过的Halo"></a>上次说过的Halo</h2><p>这个上次文章写过了，现在就是这里提一下，如果想要再看可以点击下方跳转哦！</p><ul><li><a href="https://zjt.ilovea.asia/2020/03/05/halo2/" target="_blank" rel="noopener">Halo博客搭建</a></li><li><a href="https://zjt.ilovea.asia/2020/03/05/halo1/" target="_blank" rel="noopener">HALO-博客主题系统的实现</a><br>早年我们做网站的时候得需要点技术含量的，程序都需要我们自己撰写的。或者我们就老老实实在新浪博客、搜狐、网易博客开通账号直接在上面写博客。不过，如今随着网络的发展，越来越多的高手会开源分享自己撰写的程序。如今我们需要做网站基本上都可以找到免费的程序。比如如果我们需要做个人博客网站的时候，有很多的开源博客程序可以选择，比如WORDPRESS、ZBLOG等等。但是，在这些博客程序中都有什么优缺点呢？</li></ul><p>通过这篇文章，我们搬瓦工中文网准备介绍当前市面上主流的一些开源博客程序，可以告诉大家的是每个程序都有各自的用户群，虽然我们知道WordPress前一段时间数据统计他们拥有足够多的用户，但是他也是有缺陷的，为什么不是100%用户选择呢？</p><h2 id="第一、WordPress"><a href="#第一、WordPress" class="headerlink" title="第一、WordPress"></a>第一、WordPress</h2><p><img src="https://gitee.com/badenough/blogImage/raw/master/img/2019062901.jpg" alt="20190629"></p><p>目前，WordPress程序是用户量最大的独立博客程序系统，采用PHP+MYSQL架构的，至少需要PHP5.6+支持。大部分网友肯定是使用或者解除过这款程序。有提供丰富的免费主题模板、插件支持，而且基于用户很多，基本上我们需要的功能和问题都可以找到解决方案。</p><p>不过WordPress商家程序还是有缺点的，比如占用系统资源多。而且随着网站的发展如果我们不去加以维护和升级配置，可能会使得网站速度变慢。如果我们需要更好的使用到WP程序，则需要有一定的技术含量的技术支持的。</p><h2 id="第二、ZBLOG"><a href="#第二、ZBLOG" class="headerlink" title="第二、ZBLOG"></a>第二、ZBLOG</h2><p><img src="https://gitee.com/badenough/blogImage/raw/master/img/201906291-2c2f9d5e67854545963b5ec7b20195ab.jpg" alt="201906291"></p><p>早年我们国内比较流行WINDOWS系统主机和服务器的时候，且那时候个人博客也比较流行期间，使用最多的是ZBLOG程序，当然那时候还是ASP+ACCESS数据库架构的。而且那时间有很多知名的个人博主都有使用，可以说ZBLOG程序那ASP时代非常的流行，虽然那时候也有WORDPRESS，但是基本国内很少有人使用。</p><p>只是随着国内主机、服务器，以及国外服务器的盛行。商家提供的WIN服务器比较少，而且成本高，占用资源大，所以大家都相继转型PHP程序。ZBLOG PHP版本目前也有开发出来，使用用户还是比较多的。没有得到较好的发展原因是我们可以看到ZBLOG商家也有提供云平台发布主题和插件，但是大部分都是付费的，所以限制很多用户。</p><h2 id="第三、TYPECHO"><a href="#第三、TYPECHO" class="headerlink" title="第三、TYPECHO"></a>第三、TYPECHO</h2><p><img src="https://gitee.com/badenough/blogImage/raw/master/img/201906292-328e9b5ce9be4fda8c90b8a52151097a.jpg" alt="201906292"></p><p>当初TYPECHO程序开发的背景就是因为很多用户反馈WORDPRESS程序臃肿，而且占用资源大特别不方便。所以那时候才开发出TYPECHO程序，结构目录看似与WP相似，但是可以说非常的轻便。官方虽然更新速度不快，而且商家也有很多计划比如搭建云平台的计划不清楚在实时没有。</p><p>虽然目前TYPECHO程序目前很少有新增功能和升级，但是这也许是这个程序的初衷，有基础的功能就可以。而且我们在论坛可以看到网友热情分享的主题模板和插件。TYPEChp程序适合个人日志博客实用，对于有需要丰富功能或者支持插件的，那不是特别适合，当然我们也可以看到有不少优秀的个人博客实用TYPECHO程序。</p><h2 id="第四、emlog"><a href="#第四、emlog" class="headerlink" title="第四、emlog"></a>第四、emlog</h2><p><img src="https://gitee.com/badenough/blogImage/raw/master/img/201906293-73183325196e47179f60e8662e299d1c.jpg" alt="201906293"></p><p>emlog 是 every memory log 的简称，意即：点滴记忆。是一款基于PHP和MySQL的功能强大的博客及CMS建站系统。致力于为您提供快速、稳定，且在使用上又极其简单、舒适的内容创作及站点搭建服务。这个是官方的介绍，实际上这款CMS博客程序使用用户还是蛮多的。官方也有提供不错的主题模板和插件支持，可以看出来用户是比ZBLOG多的，主要是ZBLOG因为付费的主题和插件限制了用户发展。</p><h2 id="第五、Catfish鮸鱼CMS"><a href="#第五、Catfish鮸鱼CMS" class="headerlink" title="第五、Catfish鮸鱼CMS"></a>第五、Catfish鮸鱼CMS</h2><p><img src="https://gitee.com/badenough/blogImage/raw/master/img/201906294-460519b827ca47be94f6581542ee4d09.jpg" alt="201906294"><br>Catfish鮸鱼CMS程序是一款免费开源的PHP内容管理系统，只是看到版本更新也是比较频繁，而且只需要更换适合个人博客的主题就可以成为一个博客网站，所以也就列举为博客程序之一。官方也有提供免费主题和插件支持。但是估计在博客程序中使用这款软件的不是很多。</p><h2 id="第六、Ghost"><a href="#第六、Ghost" class="headerlink" title="第六、Ghost"></a>第六、Ghost</h2><p><img src="https://gitee.com/badenough/blogImage/raw/master/img/2019062952c.jpg" alt="201906295"><br>这款轻博客系统在国内有些技术博客中使用还是蛮多的。如果我们实际上是需要运营网站的使用GHOST是不合适的，因为内容撰写和分发是有点问题的，感觉不是特别适合内容型管理。但是如果是用来记录日志技术内容的，是可以使用的，可以显得你的技术很厉害，同类的也有其他。</p><p>总结，如果我们是希望用到个人网站，希望以后运营盈利的，那就需要用到更新频繁的，这样确保程序的稳定。如果我们是用于自己玩玩，那可以选择一些偏门的程序，其他还有很多我们也没有整理的适合个人博客功能的程序。</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> halo博客 </tag>
            
            <tag> CMS系统 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Halo博客搭建</title>
      <link href="/p/b5be.html"/>
      <url>/p/b5be.html</url>
      
        <content type="html"><![CDATA[<p>更新：Halo 已经更新到了 1.0 版本，截止发布修改时，最新版本为 1.0.3，最新的安装方式推荐查看官方文档。</p><blockquote><p>Halo 项目地址：<a href="https://github.com/ruibaby/halo" target="_blank" rel="noopener">https://github.com/ruibaby/halo</a></p></blockquote><p>最近重新搭建了一下博客系统，使用的是 Halo 博客系统，现将搭建过程和配置 Https 的步骤记录一下。</p><ul><li>服务器提供商使用的是阿里云</li><li>域名购买是在阿里云</li><li>Https证书是在阿里云申请</li><li>服务器系统安装的是 CentOS 7.4 64 位<br>此处使用的是【服务器快速部署】<h2 id="一、安装-Halo"><a href="#一、安装-Halo" class="headerlink" title="一、安装 Halo"></a>一、安装 Halo</h2><h4 id="1、安装-Halo"><a href="#1、安装-Halo" class="headerlink" title="1、安装 Halo"></a>1、安装 Halo</h4>在终端输入以下命令进行安装，安装过程中的设置都走默认即可<pre><code>yum install -y wget &amp;&amp; wget -O halo-cli.sh https://git.io/fxHqp &amp;&amp; bash halo-cli.sh -i</code></pre><h4 id="2、启动-Halo"><a href="#2、启动-Halo" class="headerlink" title="2、启动 Halo"></a>2、启动 Halo</h4>在终端输入以下命令即可启动 Halo<pre><code>systemctl start halo</code></pre>在终端输入以下命令即可将 Halo 程序加入开机自启<pre><code>systemctl enable halo</code></pre><h4 id="3、修改端口（可选）"><a href="#3、修改端口（可选）" class="headerlink" title="3、修改端口（可选）"></a>3、修改端口（可选）</h4>修改 /www/wwwroot/halo/resources 下的 application.yaml 文件的 port字段值，然后执行下面命令重启 Halo 即可。（此处我修改为了 6666）<pre><code>systemctl restart halo</code></pre><h4 id="4、配置-Halo"><a href="#4、配置-Halo" class="headerlink" title="4、配置 Halo"></a>4、配置 Halo</h4>输入服务器 ip 加端口即可开始配置 Halo，如果已经设置了域名解析，也可以直接访问域名加端口访问。</li></ul><h2 id="二、配置-Https"><a href="#二、配置-Https" class="headerlink" title="二、配置 Https"></a>二、配置 Https</h2><p>Https 证书在腾讯云或者阿里云 ssl 证书区免费申请即可</p><h4 id="1、安装-nginx"><a href="#1、安装-nginx" class="headerlink" title="1、安装 nginx"></a>1、安装 nginx</h4><p>在终端输入以下命令即可安装 nginx</p><pre><code>yum install nginx</code></pre><p>在终端输入以下命令即可启动 nginx</p><pre><code>systemctl start nginx</code></pre><p>在终端输入以下命令即可将 nginx 加入开机自启</p><pre><code>systemctl enable nginx</code></pre><h4 id="2、修改-nginx-配置文件"><a href="#2、修改-nginx-配置文件" class="headerlink" title="2、修改 nginx 配置文件"></a>2、修改 nginx 配置文件</h4><p>nginx 配置文件目录/ect/nginx/nginx.conf，记得把证书的文件放到指定的目录<br>参考下面两段配置即可（/usr/local/nginx/）。</p><pre><code>server {    listen       80 default_server;    listen       [::]:80 default_server;    server_name  _;    root         /usr/share/nginx/html;    # Load configuration files for the default server block.    include /etc/nginx/default.d/*.conf;    location / {       proxy_pass http://127.0.0.1:6666/;    }    error_page 404 /404.html;        location = /40x.html {    }    error_page 500 502 503 504 /50x.html;        location = /50x.html {    }    rewrite ^(.*) https://$host$1 permanent;}server {    listen       443 ssl http2 default_server;    listen       [::]:443 ssl http2 default_server;    server_name  127.0.0.1:6666;    root         /usr/share/nginx/html;    ssl_certificate &quot;/usr/local/nginx/conf/1_juemuren4449.com_bundle.crt&quot;;    ssl_certificate_key &quot;/usr/local/nginx/conf/2_juemuren4449.com.key&quot;;    ssl_session_cache shared:SSL:1m;    ssl_session_timeout  5m;    ssl_ciphers HIGH:!aNULL:!MD5;    ssl_prefer_server_ciphers on;    location / {        proxy_pass http://127.0.0.1:6666/;    }    error_page 404 /404.html;        location = /40x.html {    }    error_page 500 502 503 504 /50x.html;        location = /50x.html {    }}</code></pre><h3 id="几点说明"><a href="#几点说明" class="headerlink" title="几点说明"></a>几点说明</h3><ul><li>修改配置之后要重启nginx或者重新加载配置文件</li><li>rewrite <code>^(.*) https://$host$1 permanent;是强制跳转 http 到 https</code></li><li>ssl_certificate 和 ssl_certificate_key 对应的是证书文件的目录</li><li>如果使用浏览器访问 https 地址后仍然提示不安全，请检查是否有图片或其他资源文件是非 https</li></ul>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> halo博客 </tag>
            
            <tag> simple bootstrap主题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Halo-博客主题系统的实现</title>
      <link href="/p/cfe5.html"/>
      <url>/p/cfe5.html</url>
      
        <content type="html"><![CDATA[<h1 id="halo博客系统"><a href="#halo博客系统" class="headerlink" title="halo博客系统"></a>halo博客系统</h1><ul><li>这是我第一次接触到的博客系统，后来我还去了wordpress系统等的，最后才加入hexo的大家庭中。<blockquote><p>作为一个博客系统，更换主题的功能几乎是必不可少的。该功能的实现参考了tale开源项目，非常感谢！</p></blockquote></li></ul><h1 id="具体实现"><a href="#具体实现" class="headerlink" title="具体实现"></a>具体实现</h1><h2 id="项目结构"><a href="#项目结构" class="headerlink" title="项目结构"></a>项目结构</h2><pre><code>├── java│   └── cc│       └── ryanc│           └── halo│               ├── Application.java│               ├── model│               ├── repository│               ├── service│               ├── util│               └── web│                   ├── controller   //控制器│                   └── interceptor  //拦截器└── resources    ├── static    └── templates                   //模板目录        └── themes                  //主题目录            ├── anatole            ├── halo            └── material</code></pre><h2 id="更换主题"><a href="#更换主题" class="headerlink" title="更换主题"></a>更换主题</h2><p>由于使用了freemarker模板引擎，换主题这个功能就变得非常简单了，在Controller里面渲染页面的时候，只需要修改主题存在路径就可以了，具体实现方式如下：</p><pre><code>BaseController：public abstract class BaseController {    /**     * 定义默认主题     */    public static String THEME = &quot;halo&quot;;    /**     * 根据主题名称渲染页面     *     * @param pageName pageName     * @return 返回拼接好的模板路径     */    public String render(String pageName){        StringBuffer themeStr = new StringBuffer(&quot;themes/&quot;);        themeStr.append(THEME);        themeStr.append(&quot;/&quot;);        return themeStr.append(pageName).toString();    }}</code></pre><p>IndexController（页面控制器），继承BaseController：</p><pre><code>@GetMapping(value = &quot;page/{page}&quot;)public String index(Model model,                    @PathVariable(value = &quot;page&quot;) Integer page){    Sort sort = new Sort(Sort.Direction.DESC,&quot;postDate&quot;);    //默认显示10条    Integer size = 10;    //所有文章数据，分页    Pageable pageable = new PageRequest(page-1,size,sort);    Page&lt;Post&gt; posts = postService.findPostByStatus(0,pageable);    model.addAttribute(&quot;posts&quot;,posts);    return this.render(&quot;index&quot;);}</code></pre><p>仔细看上面所示代码可知，在BaseController里面定义了一个静态变量作为主题名称(和主题文件夹名一致)，然后在rander方法里面拼接好主题完整路径返回即可，如/themes/halo，需要注意的是：render方法是有一个参数的，这个参数就是freemarker的模板文件名称，完整拼接如：/themes/halo/index，然后在IndexController的方法里面就可以调用该方法，并传入响应的模板文件名，就可以完成渲染了。</p><p>如果需要切换主题，那么只需要在后台管理对BaseController里面的THEME变量重新赋值便可以实现切换主题了。</p><h2 id="主题管理界面"><a href="#主题管理界面" class="headerlink" title="主题管理界面"></a>主题管理界面</h2><p>上面说到了在后台管理对BaseController里面的THEME变量重新赋值，那么既然要切换主题，那就得把所有主题展示出来吧！实现的方法也不是太难，只需要扫描theme文件夹下的所有目录就行了。</p><p>具体代码：</p><pre><code>Theme实体类：public class Theme implements Serializable {    /**     * 主题名称     */    private String themeName;    /**     * 是否支持设置     */    private boolean hasOptions;}</code></pre><p>本来是不需要创建这个实体类的，但考虑到要确定该主题是否支持设置，所有建一个实体类来传输数据会比较方便。</p><p>HaloUtil（工具类）：</p><pre><code>/** * 获取所有主题 * @return list */public static List&lt;Theme&gt; getThemes(){    List&lt;Theme&gt; themes = new ArrayList&lt;&gt;();    try {        //获取项目根路径        File basePath = new File(ResourceUtils.getURL(&quot;classpath:&quot;).getPath());        //获取主题路径        File themesPath = new File(basePath.getAbsolutePath(),&quot;templates/themes&quot;);        File[] files = themesPath.listFiles();        if(null!=files) {            Theme theme = null;            for (File file : files) {                if (file.isDirectory()) {                    theme = new Theme();                    theme.setThemeName(file.getName());                    File optionsPath = new File(themesPath.getAbsolutePath(), file.getName() + &quot;/module/options.ftl&quot;);                    //判断是否存在options.ftl模板                    if (optionsPath.exists()) {                        theme.setHasOptions(true);                    } else {                        theme.setHasOptions(false);                    }                    themes.add(theme);                }            }        }    }catch (Exception e){        log.error(&quot;主题获取失败：&quot;+e.getMessage());    }    return themes;}</code></pre><p>这里返回的themes就是所有主题的List集合了。</p><p>ThemeController：</p><pre><code>/** * 渲染主题设置页面 * * @return String */@GetMappingpublic String themes(Model model){    model.addAttribute(&quot;activeTheme&quot;,BaseController.THEME);    if(null!=HaloConst.THEMES){        model.addAttribute(&quot;themes&quot;,HaloUtil.getThemes());    }    return &quot;admin/admin_theme&quot;;}</code></pre><p>页面上：</p><pre><code>&lt;#list themes as theme&gt;    &lt;div class=&quot;col-md-3&quot;&gt;        &lt;div class=&quot;box box-solid&quot;&gt;            &lt;div class=&quot;box-body theme-thumbnail&quot; style=&quot;background-image: url(/${theme.themeName?if_exists}/screenshot.png)&quot;&gt;&lt;/div&gt;            &lt;div class=&quot;box-footer&quot;&gt;                &lt;span class=&quot;theme-title&quot;&gt;${theme.themeName?if_exists?upper_case}&lt;/span&gt;                &lt;#if theme.hasOptions==true&gt;                    &lt;button class=&quot;btn btn-primary btn-sm pull-right btn-flat&quot; onclick=&quot;openSetting(&#39;${theme.themeName?if_exists}&#39;)&quot;&gt;设置&lt;/button&gt;                &lt;/#if&gt;                &lt;#if activeTheme == &quot;${theme.themeName}&quot;&gt;                    &lt;button class=&quot;btn btn-primary btn-sm pull-right btn-flat&quot; disabled&gt;已启用&lt;/button&gt;                &lt;#else&gt;                    &lt;button onclick=&quot;setTheme(&#39;${theme.themeName?if_exists}&#39;)&quot; class=&quot;btn btn-primary btn-sm pull-right btn-flat&quot;&gt;启用&lt;/button&gt;                &lt;/#if&gt;            &lt;/div&gt;        &lt;/div&gt;    &lt;/div&gt;&lt;/#list&gt;</code></pre>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> halo博客 </tag>
            
            <tag> simple bootstrap主题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Feature Comparison across Different Versions</title>
      <link href="/p/281b.html"/>
      <url>/p/281b.html</url>
      
        <content type="html"><![CDATA[<h1 id="Feature-Comparison-across-Different-Versions"><a href="#Feature-Comparison-across-Different-Versions" class="headerlink" title="Feature Comparison across Different Versions"></a>Feature Comparison across Different Versions</h1><blockquote><p>Here’s the page answering questions: does A support B?</p></blockquote><h2 id="Servers"><a href="#Servers" class="headerlink" title="Servers"></a>Servers</h2><hr><table><thead><tr><th></th><th>Python</th><th>libev</th><th>Go</th></tr></thead><tbody><tr><td>Fast Open</td><td>Y</td><td>Y</td><td>N</td></tr><tr><td>Multiple Users</td><td>Y</td><td>Y</td><td>Y</td></tr><tr><td>Management API</td><td>Y</td><td>Y</td><td>N</td></tr><tr><td>Workers</td><td>Y</td><td>N</td><td>N</td></tr><tr><td>Graceful Restart</td><td>Y</td><td>N</td><td>N</td></tr><tr><td>ss-redir</td><td>N</td><td>Y</td><td>N</td></tr><tr><td>ss-tunnel</td><td>N</td><td>Y</td><td>N</td></tr><tr><td>UDP Relay</td><td>Y</td><td>Y</td><td>N</td></tr><tr><td>AEAD</td><td>Y</td><td>Y</td><td>Y</td></tr><tr><td>Plugin</td><td>Y</td><td>Y</td><td>N</td></tr></tbody></table><h2 id="Clients"><a href="#Clients" class="headerlink" title="Clients"></a>Clients</h2><table><thead><tr><th></th><th>Windows</th><th>ShadowsocksX</th><th>Qt5</th><th>Android</th><th>iOS</th><th>App Store</th><th>iOS Cydia</th></tr></thead><tbody><tr><td>System Proxy</td><td>Y</td><td>Y</td><td>N</td><td>Y</td><td>N</td><td>Y</td><td></td></tr><tr><td>CHNRoutes</td><td>Y</td><td>Y</td><td>N</td><td>Y</td><td>Y</td><td>Y</td><td></td></tr><tr><td>PAC Configuration</td><td>Y</td><td>Y</td><td>N</td><td>N</td><td>N</td><td>N</td><td></td></tr><tr><td>Profile Switching</td><td>Y</td><td>Y</td><td>Y</td><td>Y</td><td>N</td><td>Y</td><td></td></tr><tr><td>QR Code Scan</td><td>Y</td><td>Y</td><td>Y</td><td>Y</td><td>Y</td><td>Y</td><td></td></tr><tr><td>QR Code Generation</td><td>Y</td><td>Y</td><td>Y</td><td>Y</td><td>N</td><td>Y</td><td></td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VPN </tag>
            
            <tag> 翻墙 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows 上安装服务端</title>
      <link href="/p/cc80.html"/>
      <url>/p/cc80.html</url>
      
        <content type="html"><![CDATA[<h1 id="Install-Shadowsocks-Server-on-Windows"><a href="#Install-Shadowsocks-Server-on-Windows" class="headerlink" title="Install Shadowsocks Server on Windows"></a>Install Shadowsocks Server on Windows</h1><p>Notice: this page is for <strong>server side</strong>. If you are looking for clients, visit clients.</p><p>Server deployment on Windows is discouraged, since the <code>select</code> API performs very poor. If you want to serve many users, you should always set up your server on Linux. Please visit README for more details.</p><ul><li>Download and install <a href="https://www.python.org/downloads/windows/" target="_blank" rel="noopener">Python for Windows</a> , you can download x86-64 MSI installer in 64bit Windows.</li><li>During installation you should install <code>pip</code><br><img src="https://gitee.com/badenough/blogImage/raw/master/img/0b.png" alt="q"></li><li>Install <a href="https://slproweb.com/products/Win32OpenSSL.html" target="_blank" rel="noopener">OpenSSL for Windows</a>. If you installed 64bit Python, you should install 64bit OpenSSL.</li><li>Install shadowsocks like Linux. In Command Prompt, type command line<pre><code>pip install shadowsocks</code></pre></li><li>If you want to use <code>salsa20</code> or <code>chacha20</code> encryption, download <a href="http://download.libsodium.org/libsodium/releases/" target="_blank" rel="noopener">libsodium</a> and put dll files (without path) into <code>C:\Windows\System32</code> or <code>C:\Windows\SysWOW64</code> (32bit Python on 64bit Windows).</li></ul>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VPN </tag>
            
            <tag> 翻墙 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GO语言（学习1）</title>
      <link href="/p/b198.html"/>
      <url>/p/b198.html</url>
      
        <content type="html"><![CDATA[<h2 id="第一天学习"><a href="#第一天学习" class="headerlink" title="第一天学习"></a>第一天学习</h2><p><img src="https://gitee.com/badenough/blogImage/raw/master/img/img20200320.jpg" alt="img20200320.jpg"></p><p>在控制台输出“Hello World!”非常简单，仅需要几行代码就可以搞定，如下所示：</p><hr><pre><code class="GO">package main    // 声明 main 包import (    &quot;fmt&quot;       // 导入 fmt 包，打印字符串是需要用到   )func main() {   // 声明 main 主函数    fmt.Println(&quot;Hello World!&quot;) // 打印 Hello World!}</code></pre><hr><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>大家也许不明白这些代码的含义，没关系，下面就来一一介绍。<br>package（创建包）Go语言以“包”作为管理单位，每个 Go 源文件必须先声明它所属的包，所以我们会看到每个 Go 源文件的开头都是一个 package 声明，格式如下：</p><pre><code>package name</code></pre><p>其中 package 是声明包名的关键字，name 为包的名字。</p><p>Go语言的包与文件夹是一一对应的，它具有以下几点特性：</p><p>一个目录下的同级文件属于同一个包。</p><p>包名可以与其目录名不同。</p><p>main 包是Go语言程序的入口包，一个Go语言程序必须有且仅有一个 main 包。如果一个程序没有 main 包，那么编译时将会出错，无法生成可执行文件。</p><p>import（导入包）在包声明之后，是 import 语句，用于导入程序中所依赖的包，导入的包名使用双引号””包围，格式如下：</p><pre><code>import &quot;name&quot;</code></pre><p>其中 import 是导入包的关键字，name 为所导入包的名字。</p><p>代码第 4 行导入了 fmt 包，这行代码会告诉 Go 编译器，我们需要用到 fmt 包中的函数或者变量等，fmt 包是Go语言标准库为我们提供的，用于格式化输入输出的内容（类似于C语言中的 stdio.h 头文件），类似的还有 os 包、io 包等，后面我们会详细介绍。</p><p>另外有一点需要注意，导入的包中不能含有代码中没有使用到的包，否则Go编译器会报编译错误，例如 imported and not used: “xxx”，”xxx” 表示包名。</p><p>也可以使用一个 import 关键字导入多个包，此时需要用括号( )将包的名字包围起来，并且每个包名占用一行，也就是写成下面的样子：</p><pre><code>import(    &quot;name1&quot;    &quot;name2&quot;)</code></pre><p>main 函数代码的第 7 行创建了一个 main 函数，它是Go语言程序的入口函数，也即程序启动后运行的第一个函数。main 函数只能声明在 main 包中，不能声明在其他包中，并且，一个 main 包中也必须有且仅有一个 main 函数。</p><p>C/C++ 程序的入口函数也是 main()，一个 C/C++ 程序有且只能有一个 main() 函数。</p><p>main 函数是自定义函数的一种，在Go语言中，所有函数都以关键字 func 开头的，定义格式如下所示：</p><pre><code>func 函数名 (参数列表) (返回值列表){    函数体}</code></pre><p>格式说明如下：</p><p>函数名：由字母、数字、下画线_组成，其中，函数名的第一个字母不能为数字，并且，在同一个包内，函数名称不能重名。</p><p>参数列表：一个参数由参数变量和参数类型组成，例如 func foo( a int, b string )。</p><p>返回值列表：可以是返回值类型列表，也可以是参数列表那样变量名与类型的组合，函数有返回值时，必须在函数体中使用 return 语句返回。</p><p>函数体：能够被重复调用的代码片段。</p><p>注意：Go语言函数的左大括号{必须和函数名称在同一行，否则会报错。<br>打印 Hello World代码的第 8 行 fmt.Println(“Hello World!”) 中，Println 是 fmt 包中的一个函数，它用来格式化输出数据，比如字符串、整数、小数等，类似于C语言中的 printf 函数。这里我们使用 Println 函数来打印字符串，也就是( )里面使用””包裹的部分。<br>注意，Println 函数打印完成后会自动换行，ln是 line 的缩写。</p><p>点号.是Go语言运算符的一种，这里表示调用 fmt 包中的 Println 函数。</p><p>另外，代码 fmt.Println(“Hello World!”) 的结尾，不需要使用;来作为结束符，Go 编译器会自动帮我们添加，当然，在这里加上;也是可以的。</p><p>到这里，相信大家已经知道如何创建一个简单的Go语言程序了，赶快动手试试吧！下一节将为大家演示，如何运行我们所编写的Go语言程序。</p>]]></content>
      
      
      <categories>
          
          <category> 学习资料库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> go语言 </tag>
            
            <tag> 学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown 教程</title>
      <link href="/p/81b6.html"/>
      <url>/p/81b6.html</url>
      
        <content type="html"><![CDATA[<h2 id="Markdown-标题"><a href="#Markdown-标题" class="headerlink" title="Markdown 标题"></a>Markdown 标题</h2><p>Markdown 标题有两种格式。</p><h3 id="1、使用-和-标记一级和二级标题"><a href="#1、使用-和-标记一级和二级标题" class="headerlink" title="1、使用 = 和 - 标记一级和二级标题"></a>1、使用 = 和 - 标记一级和二级标题</h3><p>= 和 - 标记语法格式如下：</p><pre><code>我展示的是一级标题=================我展示的是二级标题-----------------</code></pre><h3 id="使用-号标记"><a href="#使用-号标记" class="headerlink" title="使用 # 号标记"></a>使用 # 号标记</h3><p>使用 # 号可表示 1-6 级标题，一级标题对应一个 # 号，二级标题对应两个 # 号，以此类推。</p><pre><code># 一级标题## 二级标题### 三级标题#### 四级标题##### 五级标题###### 六级标题</code></pre><h2 id="Markdown-段落"><a href="#Markdown-段落" class="headerlink" title="Markdown 段落"></a>Markdown 段落</h2><p>Markdown 段落没有特殊的格式，直接编写文字就好，段落的换行是使用两个以上空格加上回车。<br>当然也可以在段落后面使用一个空行来表示重新开始一个段落。</p><h3 id="字体"><a href="#字体" class="headerlink" title="字体"></a>字体</h3><p>Markdown 可以使用以下几种字体：</p><pre><code>*斜体文本*_斜体文本_**粗体文本**__粗体文本__***粗斜体文本***___粗斜体文本___</code></pre><h3 id="分隔线"><a href="#分隔线" class="headerlink" title="分隔线"></a>分隔线</h3><p>你可以在一行中用三个以上的星号、减号、底线来建立一个分隔线，行内不能有其他东西。你也可以在星号或是减号中间插入空格。下面每种写法都可以建立分隔线：</p><pre><code>**** * ******- - -----------</code></pre><h3 id="删除线"><a href="#删除线" class="headerlink" title="删除线"></a>删除线</h3><p>如果段落上的文字要添加删除线，只需要在文字的两端加上两个波浪线 ~~ 即可，实例如下：</p><pre><code>Badenough.COMGOOGLE.COM~~BAIDU.COM~~</code></pre><h3 id="下划线"><a href="#下划线" class="headerlink" title="下划线"></a>下划线</h3><p>下划线可以通过 HTML 的 <code>&lt;u&gt;</code>标签来实现：</p><pre><code>&lt;u&gt;带下划线文本&lt;/u&gt;</code></pre><h3 id="脚注"><a href="#脚注" class="headerlink" title="脚注"></a>脚注</h3><p>脚注是对文本的补充说明。<br>Markdown 脚注的格式如下:</p><pre><code>[^要注明的文本]</code></pre><p>以下实例演示了脚注的用法：</p><pre><code>创建脚注格式类似这样 [^Badenough]。[^Badenough]: 学习 -- 学的不仅是技术，更是梦想！！！</code></pre><h2 id="Markdown-列表"><a href="#Markdown-列表" class="headerlink" title="Markdown 列表"></a>Markdown 列表</h2><p>Markdown 支持有序列表和无序列表。<br>无序列表使用星号(*)、加号(+)或是减号(-)作为列表标记：</p><pre><code>* 第一项* 第二项* 第三项+ 第一项+ 第二项+ 第三项- 第一项- 第二项- 第三项</code></pre><p>有序列表使用数字并加上 . 号来表示，如：</p><pre><code>1. 第一项2. 第二项3. 第三项</code></pre><h3 id="列表嵌套"><a href="#列表嵌套" class="headerlink" title="列表嵌套"></a>列表嵌套</h3><p>列表嵌套只需在子列表中的选项添加四个空格即可：</p><pre><code>1. 第一项：    - 第一项嵌套的第一个元素    - 第一项嵌套的第二个元素2. 第二项：    - 第二项嵌套的第一个元素    - 第二项嵌套的第二个元素</code></pre><h2 id="Markdown-区块"><a href="#Markdown-区块" class="headerlink" title="Markdown 区块"></a>Markdown 区块</h2><h3 id="Markdown-区块引用是在段落开头使用-gt-符号-，然后后面紧跟一个空格符号："><a href="#Markdown-区块引用是在段落开头使用-gt-符号-，然后后面紧跟一个空格符号：" class="headerlink" title="Markdown 区块引用是在段落开头使用 &gt; 符号 ，然后后面紧跟一个空格符号："></a>Markdown 区块引用是在段落开头使用 &gt; 符号 ，然后后面紧跟一个空格符号：</h3><pre><code>&gt; 区块引用&gt; 菜鸟教程&gt; 学的不仅是技术更是梦想</code></pre><h3 id="另外区块是可以嵌套的，一个-gt-符号是最外层，两个-gt-符号是第一层嵌套，以此类推："><a href="#另外区块是可以嵌套的，一个-gt-符号是最外层，两个-gt-符号是第一层嵌套，以此类推：" class="headerlink" title="另外区块是可以嵌套的，一个 &gt; 符号是最外层，两个 &gt; 符号是第一层嵌套，以此类推："></a>另外区块是可以嵌套的，一个 &gt; 符号是最外层，两个 &gt; 符号是第一层嵌套，以此类推：</h3><pre><code>&gt; 最外层&gt; &gt; 第一层嵌套&gt; &gt; &gt; 第二层嵌套</code></pre><h3 id="区块中使用列表"><a href="#区块中使用列表" class="headerlink" title="区块中使用列表"></a>区块中使用列表</h3><p>区块中使用列表实例如下：</p><pre><code>&gt; 区块中使用列表&gt; 1. 第一项&gt; 2. 第二项&gt; + 第一项&gt; + 第二项&gt; + 第三项</code></pre><h3 id="列表中使用区块"><a href="#列表中使用区块" class="headerlink" title="列表中使用区块"></a>列表中使用区块</h3><p>如果要在列表项目内放进区块，那么就需要在 <code>&gt;</code>前添加四个空格的缩进。</p><p>区块中使用列表实例如下：</p><pre><code>* 第一项    &gt; 菜鸟教程    &gt; 学的不仅是技术更是梦想* 第二项</code></pre><h2 id="Markdown-代码"><a href="#Markdown-代码" class="headerlink" title="Markdown 代码"></a>Markdown 代码</h2><p>如果是段落上的一个函数或片段的代码可以用反引号把它包起来（`），例如：</p><pre><code> `printf()` 函数</code></pre><h3 id="代码区块"><a href="#代码区块" class="headerlink" title="代码区块"></a>代码区块</h3><p>代码区块使用 4 个空格或者一个制表符（Tab 键）。</p><h3 id="你也可以用-包裹一段代码，并指定一种语言（也可以不指定）："><a href="#你也可以用-包裹一段代码，并指定一种语言（也可以不指定）：" class="headerlink" title="你也可以用 ``` 包裹一段代码，并指定一种语言（也可以不指定）："></a>你也可以用 ``` 包裹一段代码，并指定一种语言（也可以不指定）：</h3><pre><code>` ` `javascript$(document).ready(function () {   alert(&#39;Badenough&#39;);});` ` `</code></pre><h2 id="Markdown-链接"><a href="#Markdown-链接" class="headerlink" title="Markdown 链接"></a>Markdown 链接</h2><p>链接使用方法如下：</p><pre><code>[链接名称](链接地址)或者&lt;链接地址&gt;</code></pre><p>例如：</p><pre><code>这是一个链接 [拜德英纳夫](https://zjt.ilovea.asia)</code></pre><p>直接使用链接地址：</p><pre><code>&lt;https://zjt.ilovea.asia&gt;</code></pre><h3 id="高级链接"><a href="#高级链接" class="headerlink" title="高级链接"></a>高级链接</h3><p>我们可以通过变量来设置一个链接，变量赋值在文档末尾进行：</p><pre><code>这个链接用 1 作为网址变量 [Google][1]这个链接用 Badenough 作为网址变量 [Badenough][badenough]然后在文档的结尾为变量赋值（网址）  [1]: http://www.google.com/  [badenough]: https://zjt.ilovea.asia</code></pre><h2 id="Markdown-图片"><a href="#Markdown-图片" class="headerlink" title="Markdown 图片"></a>Markdown 图片</h2><p>Markdown 图片语法格式如下：</p><pre><code>![alt 属性文本](图片地址)![alt 属性文本](图片地址 &quot;可选标题&quot;)</code></pre><ul><li>开头一个感叹号 !</li><li>接着一个方括号，里面放上图片的替代文字</li><li>接着一个普通括号，里面放上图片的网址，最后还可以用引号包住并加上选择性的 ‘title’ 属性的文字。</li></ul><p>使用实例：</p><pre><code>![Badenough 图标](http://zjt.ilovea.asia/images/badenough-logo.png)![Badenough 图标](http://zjt.ilovea.asia/images/badenough-logo.png &quot;Badenough&quot;)</code></pre><h3 id="当然，你也可以像网址那样对图片网址使用变量"><a href="#当然，你也可以像网址那样对图片网址使用变量" class="headerlink" title="当然，你也可以像网址那样对图片网址使用变量:"></a>当然，你也可以像网址那样对图片网址使用变量:</h3><pre><code>这个链接用 1 作为网址变量 [Badenough][1].然后在文档的结尾为变量赋值（网址）[1]: http://zjt.ilovea.asia/images/badenough-logo.png</code></pre><p>Markdown 还没有办法指定图片的高度与宽度，如果你需要的话，你可以使用普通的 <img> 标签。</p><pre><code>&lt;img src=&quot;http://zjt.ilovea.asia/images/badenough-logo.png&quot; width=&quot;50%&quot;&gt;</code></pre><h2 id="Markdown-表格"><a href="#Markdown-表格" class="headerlink" title="Markdown 表格"></a>Markdown 表格</h2><p>Markdown 制作表格使用 | 来分隔不同的单元格，使用 - 来分隔表头和其他行。<br>语法格式如下：</p><pre><code>|  表头   | 表头  ||  ----  | ----  || 单元格  | 单元格 || 单元格  | 单元格 |</code></pre><h3 id="对齐方式"><a href="#对齐方式" class="headerlink" title="对齐方式"></a>对齐方式</h3><p>我们可以设置表格的对齐方式：</p><pre><code>-: 设置内容和标题栏居右对齐。:- 设置内容和标题栏居左对齐。:-: 设置内容和标题栏居中对齐。</code></pre><h2 id="Markdown-高级技巧"><a href="#Markdown-高级技巧" class="headerlink" title="Markdown 高级技巧"></a>Markdown 高级技巧</h2><h3 id="支持的-HTML-元素"><a href="#支持的-HTML-元素" class="headerlink" title="支持的 HTML 元素"></a>支持的 HTML 元素</h3><p>不在 Markdown 涵盖范围之内的标签，都可以直接在文档里面用 HTML 撰写。<br>目前支持的 HTML 元素有：<code>&lt;kbd&gt; &lt;b&gt; &lt;i&gt; &lt;em&gt; &lt;sup&gt; &lt;sub&gt; &lt;br&gt;</code>等 ，如：</p><blockquote><p>使用 <code>&lt;kbd&gt;Ctrl&lt;/kbd&gt;+&lt;kbd&gt;Alt&lt;/kbd&gt;+&lt;kbd&gt;Del&lt;/kbd&gt;</code> 重启电脑</p></blockquote><h3 id="转义"><a href="#转义" class="headerlink" title="转义"></a>转义</h3><p>Markdown使用了很多特殊符号来表示特定的意义，如果需要显示特定的符号则需要使用转义字符，Markdown 使用反斜杠转义特殊字符：</p><pre><code>**文本加粗** \*\* 正常显示星号 \*\*</code></pre><p>Markdown 支持以下这些符号前面加上反斜杠来帮助插入普通的符号：</p><pre><code>\   反斜线`   反引号*   星号_   下划线{}  花括号[]  方括号()  小括号#   井字号+   加号-   减号.   英文句点!   感叹号</code></pre><h3 id="公式"><a href="#公式" class="headerlink" title="公式"></a>公式</h3><p>当你需要在编辑器中插入数学公式时，可以使用两个美元符 $$ 包裹 TeX 或 LaTeX 格式的数学公式来实现。提交后，问答和文章页会根据需要加载 Mathjax 对数学公式进行渲染。如：</p><pre><code>$$\mathbf{V}_1 \times \mathbf{V}_2 =  \begin{vmatrix} \mathbf{i} &amp; \mathbf{j} &amp; \mathbf{k} \\\frac{\partial X}{\partial u} &amp;  \frac{\partial Y}{\partial u} &amp; 0 \\\frac{\partial X}{\partial v} &amp;  \frac{\partial Y}{\partial v} &amp; 0 \\\end{vmatrix}${$tep1}{\style{visibility:hidden}{(x+1)(x+1)}}$$</code></pre><h2 id="typora-画流程图、时序图-顺序图-、甘特图"><a href="#typora-画流程图、时序图-顺序图-、甘特图" class="headerlink" title="typora 画流程图、时序图(顺序图)、甘特图"></a>typora 画流程图、时序图(顺序图)、甘特图</h2><h3 id="1、横向流程图源码格式："><a href="#1、横向流程图源码格式：" class="headerlink" title="1、横向流程图源码格式："></a>1、横向流程图源码格式：</h3><pre><code class="mermaid">graph LRA[方形] --&gt;B(圆角)    B --&gt; C{条件a}    C --&gt;|a=1| D[结果1]    C --&gt;|a=2| E[结果2]    F[横向流程图]</code></pre><h3 id="2、竖向流程图源码格式："><a href="#2、竖向流程图源码格式：" class="headerlink" title="2、竖向流程图源码格式："></a>2、竖向流程图源码格式：</h3><pre><code class="mermaid">graph TDA[方形] --&gt; B(圆角)    B --&gt; C{条件a}    C --&gt; |a=1| D[结果1]    C --&gt; |a=2| E[结果2]    F[竖向流程图]</code></pre><h3 id="3、标准流程图源码格式："><a href="#3、标准流程图源码格式：" class="headerlink" title="3、标准流程图源码格式："></a>3、标准流程图源码格式：</h3><pre><code class="flow">st=&gt;start: 开始框op=&gt;operation: 处理框cond=&gt;condition: 判断框(是或否?)sub1=&gt;subroutine: 子流程io=&gt;inputoutput: 输入输出框e=&gt;end: 结束框st-&gt;op-&gt;condcond(yes)-&gt;io-&gt;econd(no)-&gt;sub1(right)-&gt;op</code></pre><h3 id="4、标准流程图源码格式（横向）："><a href="#4、标准流程图源码格式（横向）：" class="headerlink" title="4、标准流程图源码格式（横向）："></a>4、标准流程图源码格式（横向）：</h3><pre><code class="flow">st=&gt;start: 开始框op=&gt;operation: 处理框cond=&gt;condition: 判断框(是或否?)sub1=&gt;subroutine: 子流程io=&gt;inputoutput: 输入输出框e=&gt;end: 结束框st(right)-&gt;op(right)-&gt;condcond(yes)-&gt;io(bottom)-&gt;econd(no)-&gt;sub1(right)-&gt;op</code></pre><h3 id="5、UML时序图源码样例："><a href="#5、UML时序图源码样例：" class="headerlink" title="5、UML时序图源码样例："></a>5、UML时序图源码样例：</h3><pre><code class="sequence">对象A-&gt;对象B: 对象B你好吗?（请求）Note right of 对象B: 对象B的描述Note left of 对象A: 对象A的描述(提示)对象B--&gt;对象A: 我很好(响应)对象A-&gt;对象B: 你真的好吗？</code></pre><h3 id="6、UML时序图源码复杂样例："><a href="#6、UML时序图源码复杂样例：" class="headerlink" title="6、UML时序图源码复杂样例："></a>6、UML时序图源码复杂样例：</h3><pre><code class="sequence">Title: 标题：复杂使用对象A-&gt;对象B: 对象B你好吗?（请求）Note right of 对象B: 对象B的描述Note left of 对象A: 对象A的描述(提示)对象B--&gt;对象A: 我很好(响应)对象B-&gt;小三: 你好吗小三--&gt;&gt;对象A: 对象B找我了对象A-&gt;对象B: 你真的好吗？Note over 小三,对象B: 我们是朋友participant CNote right of C: 没人陪我玩</code></pre><h3 id="7、UML标准时序图样例："><a href="#7、UML标准时序图样例：" class="headerlink" title="7、UML标准时序图样例："></a>7、UML标准时序图样例：</h3><pre><code class="mermaid">%% 时序图例子,-&gt; 直线，--&gt;虚线，-&gt;&gt;实线箭头  sequenceDiagram    participant 张三    participant 李四    张三-&gt;王五: 王五你好吗？    loop 健康检查        王五-&gt;王五: 与疾病战斗    end    Note right of 王五: 合理 食物 &lt;br/&gt;看医生...    李四--&gt;&gt;张三: 很好!    王五-&gt;李四: 你怎么样?    李四--&gt;王五: 很好!</code></pre><h3 id="8、甘特图样例："><a href="#8、甘特图样例：" class="headerlink" title="8、甘特图样例："></a>8、甘特图样例：</h3><pre><code class="mermaid">%% 语法示例        gantt        dateFormat  YYYY-MM-DD        title 软件开发甘特图        section 设计        需求                      :done,    des1, 2014-01-06,2014-01-08        原型                      :active,  des2, 2014-01-09, 3d        UI设计                     :         des3, after des2, 5d    未来任务                     :         des4, after des3, 5d        section 开发        学习准备理解需求                      :crit, done, 2014-01-06,24h        设计框架                             :crit, done, after des2, 2d        开发                                 :crit, active, 3d        未来任务                              :crit, 5d        耍                                   :2d        section 测试        功能测试                              :active, a1, after des3, 3d        压力测试                               :after a1  , 20h        测试报告                               : 48h</code></pre><h3 id="其他："><a href="#其他：" class="headerlink" title="其他："></a>其他：</h3><h4 id="todo列表"><a href="#todo列表" class="headerlink" title="todo列表"></a>todo列表</h4><pre><code>- [ ] Cmd Markdown 开发- [ ] 改进 Cmd 渲染算法，使用局部渲染技术提高渲染效率    - [ ] 支持以 PDF 格式导出文稿    - [x] 新增Todo列表功能 语法参考    - [x] 改进 LaTex 功能    - [x] 修复 LaTex 公式渲染问题- [x] 新增 LaTex 公式编号功能 语法参考    - [ ] 七月旅行准备    - [ ] 准备邮轮上需要携带的物品    - [ ] 浏览日本免税店的物品- [x] 购买蓝宝石公主号七月一日的船票</code></pre><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>只要你认真学习了上面的所有操作步骤，你想失败都不可能了！！</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客 </tag>
            
            <tag> markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/p/3eeb.html"/>
      <url>/p/3eeb.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>一定是这个建立太简单了，所以我才会去建立；再次，就是我将会把我的作业，笔记等资料全部都放在这个网站中分享给别人，希望别人可以看到，也希望帮助大家！</p></blockquote><a id="more"></a><h1 id="首先"><a href="#首先" class="headerlink" title="首先"></a>首先</h1><h1 id="下面是网站基础资料"><a href="#下面是网站基础资料" class="headerlink" title="下面是网站基础资料"></a>下面是网站基础资料</h1><p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre><code class="bash">$ hexo new &quot;My New Post&quot;</code></pre><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre><code class="bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre><code class="bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre><code class="bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
